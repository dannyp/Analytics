{
	"name": "Determine Changeset",
	"properties": {
		"description": "Get the entities to determine the Changeset for.  This will use the Dependency Framework ",
		"activities": [
			{
				"name": "Get set to iterate over",
				"description": "Get the entities to determine the Changeset for. This will use the Dependency Framework to ensure that the data has already been landed in Azure Blob storage. ",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set Previous Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[Process].[up_GetEntitiesToProcess]",
						"storedProcedureParameters": {
							"EntityGroupKeyCommaSeparatedString": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.EntityGroupKeyCommaSeparatedString",
									"type": "Expression"
								}
							}
						}
					},
					"dataset": {
						"referenceName": "EntitiesToProcess",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Set Current Date",
				"description": "Set the CurrentDate variable.",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Dates to Process",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"typeProperties": {
					"variableName": "CurrentDate",
					"value": {
						"value": "@activity('Get Dates to Process').output.firstRow.CurrentProcessDate\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Dates to Process",
				"description": "Read Control Table to get Dates To Process for.",
				"type": "Lookup",
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[up_GetProcessDates]"
					},
					"dataset": {
						"referenceName": "DateToProcessFor",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set Previous Date",
				"description": "Set the PreviousDate variable.",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set Current Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"typeProperties": {
					"variableName": "PreviousDate",
					"value": {
						"value": "@activity('Get Dates to Process').output.firstRow.PreviousProcessDate\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Process Entities",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get set to iterate over",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"typeProperties": {
					"items": {
						"value": "@activity('Get set to iterate over').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Determine Changeset",
							"description": "Determine the Inserts/Updates/Deletes by comparing the Current to Previous blob. ",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Truncate Staging Table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"notebookPath": "/Users/mwood@peopleschoicecu.com.au/Import Parquet from Data Lake Gen 2 and Determine Changeset",
								"baseParameters": {
									"CurrentFileName": {
										"value": "@concat(variables('CurrentDate'), '//', item().BlobFilename)",
										"type": "Expression"
									},
									"PreviousFileName": {
										"value": "@concat(variables('PreviousDate'), '//', item().BlobFilename)",
										"type": "Expression"
									},
									"Environment": {
										"value": "@pipeline().parameters.Environment",
										"type": "Expression"
									},
									"ChangesetFolderName": {
										"value": "@concat(variables('CurrentDate'), '//', item().BlobFilename, '_Changeset')",
										"type": "Expression"
									},
									"KeyColumns": {
										"value": "@item().KeyColumns",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureDatabricks",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Indicate Success",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Determine Changeset",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"storedProcedureName": "[Process].up_UpdateEntityDiagnostics",
								"storedProcedureParameters": {
									"EntityKey": {
										"value": {
											"value": "@item().EntityKey",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ExecutionStartTime": {
										"value": {
											"value": "@activity('Determine Changeset').ExecutionStartTime",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"Result": {
										"value": "Success",
										"type": "String"
									},
									"ExecutionDuration": {
										"value": {
											"value": "@activity('Determine Changeset').Duration",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionEndTime": {
										"value": {
											"value": "@activity('Determine Changeset').ExecutionEndTime",
											"type": "Expression"
										},
										"type": "DateTime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDatabase",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Indicate Failure",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Determine Changeset",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"storedProcedureName": "[Process].up_UpdateEntityDiagnostics",
								"storedProcedureParameters": {
									"EntityKey": {
										"value": {
											"value": "@item().EntityKey",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ExecutionStartTime": {
										"value": {
											"value": "@activity('Determine Changeset').ExecutionStartTime",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"Errors": {
										"value": {
											"value": "@concat('Error in Data Factory ''', pipeline().DataFactory, ''' | Pipeline  ''', pipeline().Pipeline, ''' | ', activity('Determine Changeset').output.runPageUrl)",
											"type": "Expression"
										},
										"type": "String"
									},
									"Result": {
										"value": "Failure",
										"type": "String"
									},
									"ExecutionDuration": {
										"value": {
											"value": "@activity('Determine Changeset').Duration",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionEndTime": {
										"value": {
											"value": "@activity('Determine Changeset').ExecutionEndTime",
											"type": "Expression"
										},
										"type": "DateTime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDatabase",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Truncate Staging Table",
							"description": "Truncate the staging table in Azure SQL DW in preparation for the Changeset.",
							"type": "SqlServerStoredProcedure",
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"storedProcedureName": "[dbo].[up_TruncateTable]",
								"storedProcedureParameters": {
									"TableName": {
										"value": {
											"value": "@item().DatabaseStagingTable",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSQLDWDatabase",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"EntityGroupKeyCommaSeparatedString": {
				"type": "String"
			},
			"Environment": {
				"type": "String",
				"defaultValue": "dev"
			}
		},
		"variables": {
			"CurrentDate": {
				"type": "String"
			},
			"PreviousDate": {
				"type": "String"
			}
		}
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}