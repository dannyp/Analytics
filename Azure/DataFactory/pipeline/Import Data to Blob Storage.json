{
	"name": "Import Data to Blob Storage",
	"properties": {
		"description": "Import data into parquet files in Azure Blob Storage.\n\nUse a For Each loop operating in parallel mode.\n\nFor debugging purposes, you can simulate \n JSON array with:\n \n[{\"ProductNumber\" : \"HL-U509\"},{\"ProductNumber\" : \"FR-R92R-62\"}]",
		"activities": [
			{
				"name": "Process Entity",
				"description": "Process each individual Entity.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Entities to process",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Entities to process').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Import data to Blob storage",
							"type": "Copy",
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"source": {
									"type": "SqlSource",
									"sqlReaderQuery": {
										"value": "@item().SqlToExecute",
										"type": "Expression"
									}
								},
								"sink": {
									"type": "BlobSink"
								},
								"enableStaging": false,
								"dataIntegrationUnits": 0
							},
							"inputs": [
								{
									"referenceName": "SourceTable",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ParquetBlobFile",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Indicate Success",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Import data to Blob storage",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"storedProcedureName": "[Process].up_UpdateEntityDiagnostics",
								"storedProcedureParameters": {
									"DataMovementDurationInSeconds": {
										"value": {
											"value": "@activity('Import data to Blob storage').output.copyDuration",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"EntityKey": {
										"value": {
											"value": "@item().EntityKey",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ExecutionStartTime": {
										"value": {
											"value": "@utcnow(activity('Import data to Blob storage').output.executionDetails[0].start)",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"RowsRead": {
										"value": {
											"value": "@activity('Import data to Blob storage').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"RowsWritten": {
										"value": {
											"value": "@activity('Import data to Blob storage').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"Result": {
										"value": "Success",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDatabase",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Indicate Failure",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Import data to Blob storage",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"storedProcedureName": "[Process].up_UpdateEntityDiagnostics",
								"storedProcedureParameters": {
									"DataMovementDurationInSeconds": {
										"value": {
											"value": "@activity('Import data to Blob storage').output.copyDuration",
											"type": "Expression"
										},
										"type": "Int16"
									},
									"EntityKey": {
										"value": {
											"value": "@item().EntityKey",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ExecutionStartTime": {
										"value": {
											"value": "@utcnow(activity('Import data to Blob storage').output.executionDetails[0].start)",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"Errors": {
										"value": {
											"value": "@concat('Error in Data Factory ''', pipeline().DataFactory, ''' | Pipeline  ''', pipeline().Pipeline, ''' | ', activity('Import data to Blob storage').output.errors[0].Message)",
											"type": "Expression"
										},
										"type": "String"
									},
									"Result": {
										"value": "Failure",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ControlDatabase",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Get Entities to process",
				"description": "Get the Entities to process in this pipeline.",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set Current Process Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[Process].up_GetEntitiesToProcess",
						"storedProcedureParameters": {
							"EntityGroupKeyCommaSeparatedString": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.EntityGroupKeyCommaSeparatedString",
									"type": "Expression"
								}
							}
						}
					},
					"dataset": {
						"referenceName": "EntitiesToProcess",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Set Current Process Date",
				"description": "Set the CurrentProcessDate variable.",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Date to Process",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"typeProperties": {
					"variableName": "CurrentProcessDate",
					"value": {
						"value": "@activity('Get Date to Process').output.firstRow.CurrentProcessDate\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Date to Process",
				"description": "Read Control Table to get Date To Process for.",
				"type": "Lookup",
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[up_GetProcessDates]"
					},
					"dataset": {
						"referenceName": "DateToProcessFor",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"EntityGroupKeyCommaSeparatedString": {
				"type": "String",
				"defaultValue": "1"
			},
			"Environment": {
				"type": "String",
				"defaultValue": "dev"
			}
		},
		"variables": {
			"CurrentProcessDate": {
				"type": "String"
			}
		}
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}