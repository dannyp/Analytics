<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/12/2019 8:27:04 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="COMVS1021"
  DTS:CreatorName="tholl"
  DTS:DTSID="{CAC878E3-314F-4306-BDE5-F44130A05F10}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.0900.40"
  DTS:LocaleID="3081"
  DTS:ObjectName="DataExportParallel"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="1"
  DTS:VersionGUID="{D9A9F9C1-8A45-4D2B-A7CA-5AB3FC2DAAD5}"
  DTS:VersionMajor="0">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C70000E0-AC88-4776-9C96-81B2FA43887B}"
      DTS:ObjectName="DelayToGetNextEntity">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">00:00:15</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3D827551-D759-4006-97AA-DB08A7CE59F3}"
      DTS:ObjectName="EntityGroupKeyCommaSeparatedList">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">4</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{A4C8C5EE-F78C-4C5B-BD65-A1F4E6FF0680}"
      DTS:ObjectName="EntityToSetForDataIsReady">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{869C6760-2121-4857-8DA4-30420732DF25}"
      DTS:ObjectName="NumberOfParallelExecutions">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">2</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{A6EC0055-BEE2-4D14-9225-39F8681580F1}"
      DTS:ObjectName="ScheduleName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C504C8C3-46E5-4B74-B30F-ABC495145166}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CountOfEntitiesStillToProcess"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2E43E0E3-4606-45FD-9243-E1726BDDBDC7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CountOfFailedEntities"
      DTS:RaiseChangedEvent="True">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B81EC5E8-0231-427D-B73F-8A3E5711E464}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;EXEC Process.up_SetScheduleStartDate '&quot; + @[$Package::ScheduleName]+ &quot;';&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SetScheduleDateSql">
      <DTS:VariableValue
        DTS:DataType="8">EXEC Process.up_SetScheduleStartDate '';</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Are there any entities to Process?"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:DTSID="{55E98C59-CD6A-45EC-9A82-73973F740743}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Are there any entities to Process?"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:LoggingMode="2" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
          SQLTask:SqlStatementSource="EXEC Process.up_AreThereAnyEntitiesToProcess ?, 3"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::CountOfEntitiesStillToProcess" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@EntityGroupKeyCommaSeparatedList"
            SQLTask:DtsVariableName="$Package::EntityGroupKeyCommaSeparatedList"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Cleanup Parallel Execution Control"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:DTSID="{5EE4CDA3-50AA-4E28-94DC-944648459F87}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Cleanup Parallel Execution Control"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
          SQLTask:SqlStatementSource="DELETE Process.ParallelExecutionControl WHERE ExecutionInstanceGUID = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Main Flow"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DTSID="{B2F3B378-B0A3-427E-A05D-FAD103495DDA}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Main Flow">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:LoggingMode="2" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Main Flow\Parallel Leg 1"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:DTSID="{639A2D01-030C-4036-B490-250E5699401E}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Parallel Leg 1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{C9F83D8A-F01A-4243-ABE8-3AADDA99D80E}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="User"
              DTS:ObjectName="AreAnyParallelLegsStillProcessing"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{188FA185-5974-4D22-A93B-9D1A5F6C3F4F}"
              DTS:IncludeInDebugDump="2345"
              DTS:Namespace="User"
              DTS:ObjectName="DependencyEntityToSet"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="8"
                xml:space="preserve"></DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{3F1355D2-B0F3-480B-81C4-D4D16157F775}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="User"
              DTS:ObjectName="EntityKey"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="3">-1</DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{004148F0-3EF6-463B-BE49-9CED202F1D82}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="User"
              DTS:ObjectName="ExitStatus">
              <DTS:VariableValue
                DTS:DataType="3">0</DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{414A62F2-CF6F-4793-873A-A66C7BBDE3FF}"
              DTS:IncludeInDebugDump="2345"
              DTS:Namespace="User"
              DTS:ObjectName="SqlStatement"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="8"
                xml:space="preserve"></DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:LoggingOptions
            DTS:LoggingMode="2" />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::NumberOfParallelExecutions] &lt; 1</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Main Flow\Parallel Leg 1\Get Initial Entity To Process 1"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:DTSID="{8A822050-82BE-44F1-AB53-2B28D2A90D35}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Initial Entity To Process 1"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                  SQLTask:SqlStatementSource="EXEC Process.up_GetEntityToProcess ?, 3"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::EntityKey" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="1"
                    SQLTask:DtsVariableName="User::DependencyEntityToSet" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="2"
                    SQLTask:DtsVariableName="User::SqlStatement" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@EntityGroupKeyCommaSeparatedList"
                    SQLTask:DtsVariableName="$Package::EntityGroupKeyCommaSeparatedList"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Main Flow\Parallel Leg 1\Update Parallel Execution Control 1"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:DTSID="{5D102BA9-C589-47BE-AAEA-3DD669A48894}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update Parallel Execution Control 1"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                  SQLTask:SqlStatementSource="EXEC Process.up_UpdateParallelExecutionControl @ExecutionInstanceGUID = ?, @ParallelLegNumber = 1, @KeyCurrentlyBeingProcessed = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@ExecutionInstanceGUID"
                    SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@KeyCurrentlyBeingProcessed"
                    SQLTask:DtsVariableName="User::EntityKey"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1"
              DTS:CreationName="STOCK:FORLOOP"
              DTS:DTSID="{AB212519-918B-4CF6-BD38-E819412FE410}"
              DTS:EvalExpression="@[User::AreAnyParallelLegsStillProcessing] == True"
              DTS:ExecutableType="STOCK:FORLOOP"
              DTS:LocaleID="-1"
              DTS:MaxConcurrent="1"
              DTS:ObjectName="While more entities to process 1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:LoggingMode="2" />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Get next entity To process 1"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:DTSID="{CE5B2429-904D-47B6-976B-7C7D45F773C0}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Get next entity To process 1"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:LoggingMode="2" />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                      SQLTask:SqlStatementSource="EXEC Process.up_GetEntityToProcess ?, 3"
                      SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="0"
                        SQLTask:DtsVariableName="User::EntityKey" />
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="1"
                        SQLTask:DtsVariableName="User::DependencyEntityToSet" />
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="2"
                        SQLTask:DtsVariableName="User::SqlStatement" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="@EntityGroupKeyCommaSeparatedList"
                        SQLTask:DtsVariableName="$Package::EntityGroupKeyCommaSeparatedList"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1"
                  DTS:CreationName="STOCK:SEQUENCE"
                  DTS:DTSID="{FBEBEDE5-D355-4DC1-BCEE-39C5EB8A97BF}"
                  DTS:ExecutableType="STOCK:SEQUENCE"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Process Entity 1">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:LoggingMode="2" />
                  <DTS:PropertyExpression
                    DTS:Name="Disable">@[User::EntityKey] == 0</DTS:PropertyExpression>
                  <DTS:Executables>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Pause 1"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:DTSID="{39CF09BD-0FD1-42B5-98C7-B0A276C1E8FE}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Pause 1"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="0">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="Disable">@[User::EntityKey] &gt; 0</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="WAITFOR DELAY ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="0"
                            SQLTask:DtsVariableName="$Package::DelayToGetNextEntity"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="8" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Script Task"
                      DTS:CreationName="Microsoft.ScriptTask"
                      DTS:DTSID="{0EB5DC4C-7EFE-4556-BCD9-65738773D47E}"
                      DTS:ExecutableType="Microsoft.ScriptTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Script Task"
                      DTS:ThreadHint="0">
                      <DTS:Variables />
                      <DTS:ObjectData>
                        <ScriptProject
                          Name="sp_7b77833ced3c403abdecd7cbaed7d468"
                          VSTAMajorVersion="15"
                          VSTAMinorVersion="0"
                          Language="CSharp"
                          ReadOnlyVariables="User::CommandToExecute,User::Delimiter,User::EntityKey,User::EntityTypeName,User::FileDestination,User::IncludeFileHeader"
                          ReadWriteVariables="User::ExitStatus">
                          <ProjectItem
                            Name="Properties\resources.resx"
                            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string" />
                            <xsd:attribute name="type" type="xsd:string" />
                            <xsd:attribute name="mimetype" type="xsd:string" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string" />
                            <xsd:attribute name="name" type="xsd:string" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" />
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    </root>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\settings.designer.cs"
                            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_7b77833ced3c403abdecd7cbaed7d468.csproj.Properties.Settings.get_Default():sp_7b77833ced3c403abdecd7cbaed7d468.csproj.Properties.Settings")]

namespace sp_7b77833ced3c403abdecd7cbaed7d468.csproj.Properties
{

    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }

    }
}]]></ProjectItem>
                          <ProjectItem
                            Name="sp_7b77833ced3c403abdecd7cbaed7d468.csproj"
                            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
	    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <OutputType>Library</OutputType>
        <RootNamespace>sp_7b77833ced3c403abdecd7cbaed7d468.csproj</RootNamespace>
        <AssemblyName>sp_7b77833ced3c403abdecd7cbaed7d468.csproj</AssemblyName>
        <ProjectGuid>{C792B577-3187-41B4-A778-35BF1292DEDE}</ProjectGuid>
		        <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
        <TargetFrameworkProfile></TargetFrameworkProfile>			    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
				        <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
        <NoStandardLibraries>false</NoStandardLibraries>
		    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
		        <DebugSymbols>true</DebugSymbols>
        <Optimize>false</Optimize>
        <OutputPath>.\bin\Debug\</OutputPath>
        <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <WarningLevel>4</WarningLevel>
		    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
		        <DebugSymbols>false</DebugSymbols>
        <Optimize>true</Optimize>
        <OutputPath>.\bin\Release\</OutputPath>
        <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
        <DefineConstants>TRACE</DefineConstants>
        <WarningLevel>4</WarningLevel>
		    </PropertyGroup>
    <PropertyGroup>
        <PreBuildEvent>
        </PreBuildEvent>
        <PostBuildEvent>
        </PostBuildEvent>
    </PropertyGroup>
    <ItemGroup>
                <Reference Include="System" />
                <Reference Include="System.Data" />
                <Reference Include="System.Windows.Forms" />
                <Reference Include="System.Xml" />
                <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL" />
                <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL" />
            </ItemGroup>
	    <ItemGroup>
        <Folder Include="Resources\" />
        <AppDesigner Include="Properties\" />
        <EmbeddedResource Include="Properties\Resources.resx">
						<Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>Resources.Designer.cs</LastGenOutput>
			        </EmbeddedResource>
        <Compile Include="Properties\Resources.Designer.cs">
            <AutoGen>True</AutoGen>
            <DependentUpon>Resources.resx</DependentUpon>
            <DesignTime>True</DesignTime>
        </Compile>
		        <None Include="Properties\Settings.settings">
            <Generator>SettingsSingleFileGenerator</Generator>
            <LastGenOutput>Settings.Designer.cs</LastGenOutput>
        </None>
        <Compile Include="Properties\Settings.Designer.cs">
            <AutoGen>True</AutoGen>
            <DependentUpon>Settings.settings</DependentUpon>
            <DesignTimeSharedInput>True</DesignTimeSharedInput>
        </Compile>

				<Compile Include="ScriptMain.cs">
			<SubType>Code</SubType>
		</Compile>
				<Compile Include="Properties\AssemblyInfo.cs">
			<SubType>Code</SubType>
		</Compile>
		
		
		
		
		    </ItemGroup>
		<!-- Include the build rules for a C# project.-->
    <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
		<!-- This section defines VSTA properties that describe the host-changable project properties. -->
    <ProjectExtensions>
        <VisualStudio>
            <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
                <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
                <Host Name="SSIS_ScriptTask" />
                <ProjectClient>
                    <HostIdentifier>SSIS_ST130</HostIdentifier>
                </ProjectClient>
            </FlavorProperties>
        </VisualStudio>
    </ProjectExtensions>
</Project>]]></ProjectItem>
                          <ProjectItem
                            Name="ScriptMain.cs"
                            Encoding="UTF8"><![CDATA[   #region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
#endregion

namespace ST_32cc1158d28c41d396a82f292ab5a74a
{

    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        const string CONNECTION_MANAGER_NAME = "EtlDB_ADO";
        const int TIMEOUT_HOUR = 1000 * 60 * 60;
        private const string DEFAULT_DATE_FORMAT = "yyyy-MM-dd";

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // User::CommandToExecute, User::EntityKey, User::EntityTypeName, User::FileDestination
            string command = (string)Dts.Variables["User::CommandToExecute"].Value;
            string destination = (string)Dts.Variables["User::FileDestination"].Value;
            string entityType = (string)Dts.Variables["User::EntityTypeName"].Value;
            int entityKey = (int)Dts.Variables["User::EntityKey"].Value;
            string delimiterString = (string)Dts.Variables["User::Delimiter"].Value;
            bool includeFileHeader = Boolean.Parse(Dts.Variables["User::IncludeFileHeader"].Value.ToString());

            // If delimiterString is NULL or empty, use a default of comma
            char delimiter = (delimiterString == null || delimiterString == "" ? Convert.ToChar(",") : Convert.ToChar(delimiterString));

            // Reset exit status
            Dts.Variables["User::ExitStatus"].Value = 0;

            // Add timestamp 
            destination = ReplaceTimestamps(destination);

            // Make sure the filename does not contain invalid characters
            destination = SanitiseFilename(destination);

            try
            {
                switch (entityType)
                {
                    case "Report":
                        DownloadReport(command, destination);
                        break;
                    case "XML":
                        var result = FetchScalarAsString(CONNECTION_MANAGER_NAME, command);
                        SaveXML(result, destination);
                        break;
                    case "Delimited":
                        var table = FetchDataTable(CONNECTION_MANAGER_NAME, command);
                        SaveDelimited(table, destination, delimiter, includeFileHeader);
                        break;
                    default:
                        Dts.Events.FireWarning(0, String.Empty, "Invalid Entity Type", String.Empty, 0);
                        break;
                }
                Dts.Variables["User::ExitStatus"].Value = 0;
                SetFilename(CONNECTION_MANAGER_NAME, entityKey, Path.GetDirectoryName(destination));
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireWarning(0, String.Empty, "An error occurred processing Export {entityKey}, and it was not able to be generated. Error message: {ex.Message}", String.Empty, 0);
                Dts.Variables["User::ExitStatus"].Value = 1;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
        }

        void DownloadReport(string url, string destination)
        {
            if (url == null) throw new ArgumentNullException("url");
            if (destination == null) throw new ArgumentNullException("destination");

            if (!Directory.Exists(Path.GetDirectoryName(destination)))
            {
                Directory.CreateDirectory(Path.GetDirectoryName(destination));
            }

            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
            request.Timeout = TIMEOUT_HOUR;
            request.ReadWriteTimeout = TIMEOUT_HOUR;
            request.UseDefaultCredentials = true;
            request.Headers.Add(HttpRequestHeader.AcceptLanguage, "en-AU,en;q=0.9");

            var response = (HttpWebResponse)request.GetResponse();

            using (Stream file = File.OpenWrite(destination))
            {
                response.GetResponseStream().CopyTo(file);
            }
        }

        DataTable FetchDataTable(string connectionManagerName, string command)
        {
            if (connectionManagerName == null) throw new ArgumentNullException("connectionManagerName");
            if (command == null) throw new ArgumentNullException("command");

            var connectionManager = Dts.Connections[connectionManagerName].AcquireConnection(Dts.Transaction);

            var connection = connectionManager as SqlConnection;
            try
            {
                using (var cmd = connection.CreateCommand())
                {
                    cmd.CommandText = command;
                    cmd.CommandType = CommandType.Text;
                    var table = new DataTable();
                    table.Load(cmd.ExecuteReader());
                    return table;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                Dts.Connections[connectionManagerName].ReleaseConnection(connection);
            }
        }

        string FetchScalarAsString(string connectionManagerName, string command)
        {
            if (connectionManagerName == null) throw new ArgumentNullException("connectionManagerName");
            if (command == null) throw new ArgumentNullException("command");

            var connectionManager = Dts.Connections[connectionManagerName].AcquireConnection(Dts.Transaction);

            var connection = connectionManager as SqlConnection;
            try
            {
                using (var cmd = connection.CreateCommand())
                {
                    cmd.CommandText = command;
                    cmd.CommandType = CommandType.Text;
                    return cmd.ExecuteScalar() as string;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                Dts.Connections[connectionManagerName].ReleaseConnection(connection);
            }
        }

        void SaveDelimited(DataTable table, string destination, char delimiter, bool includeFileHeader)
        {
            if (table.Columns.Count == 0)
            {
                /* Do not export data if column collection is empty */
                Dts.Events.FireWarning(0, string.Empty, "Table has no columns. No file is created.", string.Empty, 0);
                return;
            }

            if (!Directory.Exists(Path.GetDirectoryName(destination)))
            {
                Directory.CreateDirectory(Path.GetDirectoryName(destination));
            }

            using (StreamWriter sw = File.CreateText(destination))
            {
                if (includeFileHeader)
                {
                    /* Write header row */
                    for (int i = 0; i < table.Columns.Count; i++)
                    {
                        char delimiterOrNewline = (i < table.Columns.Count - 1 ? delimiter : sw.NewLine[0]);
                        sw.Write(table.Columns[i].ColumnName);
                        sw.Write(delimiterOrNewline);
                    }
                }

                /* Write Data */
                foreach (DataRow dr in table.Rows)
                {
                    for (int i = 0; i < table.Columns.Count; i++)
                    {
                        char delimiterOrNewline = (i < table.Columns.Count - 1 ? delimiter : sw.NewLine[0]);
                        if (!Convert.IsDBNull(dr[i]))
                        {
                            var cellValue = SanitiseDelimitedCell(dr[i].ToString(), delimiter);
                            sw.Write(cellValue);
                        }
                        sw.Write(delimiterOrNewline);
                    }
                }
            }
        }

        void SaveXML(string text, string destination)
        {
            if (destination == null) throw new ArgumentNullException("destination");
            if (text == null) throw new ArgumentNullException("text");

            File.WriteAllText(destination, text);
        }

        void SetFilename(string connectionManagerName, int entityKey, string filename)
        {
            var connectionManager = Dts.Connections[connectionManagerName].AcquireConnection(Dts.Transaction);

            var connection = connectionManager as SqlConnection;
            try
            {
                using (var cmd = connection.CreateCommand())
                {
                    cmd.CommandText = "UPDATE DataExport.Entity SET MostRecentFileLocation = @FileLocation WHERE EntityKey = @EntityKey";
                    cmd.Parameters.AddWithValue("@FileLocation", filename);
                    cmd.Parameters.AddWithValue("@EntityKey", entityKey);
                    cmd.CommandType = CommandType.Text;
                    cmd.ExecuteNonQuery();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                Dts.Connections[connectionManagerName].ReleaseConnection(connection);
            }
        }

        /*
         * Looks for predefined strings in the path and replaces it with a formatted timestamp
         * Markers are CURRENT_TIMESTAMP (replaced with the current date and time) and DATA_DATE (replaced with the previous business day);
         */
        string ReplaceTimestamps(string absolutePath)
        {
            var now = DateTime.Now;
            var replacements = new Dictionary<string, DateTime> { { "CURRENT_TIMESTAMP", now }, { "DATA_DATE", now.Date.AddDays(-1) }, { "PREVIOUS_EOM", (new DateTime(now.Year, now.Month, 1)).AddDays(-1) } };

            // invaluable - https://regex101.com
            var regex = new Regex("{([^}].*?):([^}].*?)?}|{([^}].*?)}", RegexOptions.Compiled | RegexOptions.IgnoreCase);
            var result = regex.Replace(absolutePath, delegate (Match m) {
                var key = m.Groups[1].Value != String.Empty ? m.Groups[1].Value : m.Groups[3].Value;
                var fmt = m.Groups[2].Value != String.Empty ? m.Groups[2].Value : DEFAULT_DATE_FORMAT;

                if (replacements.ContainsKey(key) == false) throw new InvalidOperationException("Cannot locate {key} in the parameter list");
                return replacements[key].ToString(fmt);
            });

            return result;
        }

        string SanitiseFilename(string absolutePath)
        {
            var filename = Path.GetFileName(absolutePath);
            var directory = Path.GetDirectoryName(absolutePath);

            var sanitisedFilename = string.Join("_", filename.Split(Path.GetInvalidFileNameChars()));

            return Path.Combine(directory, sanitisedFilename);
        }

        // Some guy on stack overflow says this always works.
        public static string SanitiseDelimitedCell(string str, char delimiter)
        {
            bool mustQuote = (str.Contains(delimiter.ToString()) || str.Contains("\"") || str.Contains("\r") || str.Contains("\n"));
            if (mustQuote)
            {
                StringBuilder sb = new StringBuilder();
                sb.Append("\"");
                foreach (char nextChar in str)
                {
                    sb.Append(nextChar);
                    if (nextChar == '"')
                        sb.Append("\"");
                }
                sb.Append("\"");
                return sb.ToString();
            }

            return str;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
                          <ProjectItem
                            Name="Project"
                            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{d5d4cc45-f2f9-42c8-9f86-75427baef520}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sp_7b77833ced3c403abdecd7cbaed7d468</msb:DisplayName>
		<msb:CodeName>sp_7b77833ced3c403abdecd7cbaed7d468</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
				<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
				<msb:File Include="Properties\Resources.Designer.cs"/>
				<msb:File Include="Properties\AssemblyInfo.cs"/>
				<msb:File Include="ScriptMain.cs"/>
								<msb:File Include="Properties\Settings.settings"/>
						<msb:Project Include="sp_7b77833ced3c403abdecd7cbaed7d468.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\AssemblyInfo.cs"
                            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_32cc1158d28c41d396a82f292ab5a74a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Peoples Choice Credit Union")]
[assembly: AssemblyProduct("ST_32cc1158d28c41d396a82f292ab5a74a")]
[assembly: AssemblyCopyright("Copyright @ Peoples Choice Credit Union 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\settings.settings"
                            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="iso-8859-1"?>
<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)"  >
    <Profiles>
        <Profile Name="(Default)" />
    </Profiles>
    <Settings /></SettingsFile>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\resources.designer.cs"
                            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_7b77833ced3c403abdecd7cbaed7d468.csproj.Properties.Resources.get_ResourceManager():System.Resources.ResourceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_7b77833ced3c403abdecd7cbaed7d468.csproj.Properties.Resources.get_Culture():System.Globalization.CultureInfo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_7b77833ced3c403abdecd7cbaed7d468.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo):Void")]

namespace sp_7b77833ced3c403abdecd7cbaed7d468.csproj.Properties {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("sp_7b77833ced3c403abdecd7cbaed7d468.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

    }
}]]></ProjectItem>
                          <BinaryItem
                            Name="\bin\release\sp_7b77833ced3c403abdecd7cbaed7d468.csproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHCYYlwAAAAAAAAAAOAAAiELAQsAACwAAAAIAAAAAAAAbkoA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABhKAABTAAAAAGAAALgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdCoAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAALgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
SgAAAAAAAEgAAAACAAUAXCoAALwfAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgBCAgAAAQAAEQIoDQAACm8OAAAKcgEAAHBvDwAACm8Q
AAAKdBcAAAEKAigNAAAKbw4AAApyLwAAcG8PAAAKbxAAAAp0FwAAAQsCKA0AAApvDgAACnJbAABw
bw8AAApvEAAACnQXAAABDAIoDQAACm8OAAAKcoUAAHBvDwAACm8QAAAKpRgAAAENAigNAAAKbw4A
AApypQAAcG8PAAAKbxAAAAp0FwAAARMEAigNAAAKbw4AAApyxQAAcG8PAAAKbxAAAApvEQAACigS
AAAKEwURBCwXEQRy9QAAcCgTAAAKLQkRBCgUAAAKKwpy9wAAcCgUAAAKEwYCKA0AAApvDgAACnL7
AABwbw8AAAoWjBgAAAFvFQAACgIHKAgAAAYLAgcoCQAABgsIJRMJLGwRCXIdAQBwKBMAAAotHhEJ
cisBAHAoEwAACi0aEQlyMwEAcCgTAAAKLSUrQAIGBygCAAAGK1cCckcBAHAGKAQAAAYTBwIRBwco
BgAABis+AnJHAQBwBigDAAAGEwgCEQgHEQYRBSgFAAAGKyECKA0AAApvFgAAChZ+FwAACnJbAQBw
fhcAAAoWbxgAAAoCKA0AAApvDgAACnL7AABwbw8AAAoWjBgAAAFvFQAACgJyRwEAcAkHKBkAAAoo
BwAABgIoDQAAChZvGgAACt5QJgIoDQAACm8WAAAKFn4XAAAKcoMBAHB+FwAAChZvGAAACgIoDQAA
Cm8OAAAKcvsAAHBvDwAACheMGAAAAW8VAAAKAigNAAAKFm8aAAAK3gAqAAABEAAAAAAeAdPxAVAd
AAABGzADAJwAAAACAAARAy0LcmgCAHBzGwAACnoELQtycAIAcHMbAAAKegQoGQAACigcAAAKLQwE
KBkAAAooHQAACiYDKB4AAAp0IgAAAQoGIIDuNgBvHwAACgYggO42AG8gAAAKBhdvIQAACgZvIgAA
Ch8XcogCAHBvIwAACgZvJAAACnQmAAABCwQoJQAACgwHbyYAAAoIbycAAAreCggsBghvKAAACtwq
ARAAAAIAgwAOkQAKAAAAABswAgCbAAAAAwAAEQMtC3KmAgBwcxsAAAp6BC0LctICAHBzGwAACnoC
KA0AAApvKQAACgNvKgAACgIoDQAACm8rAAAKbywAAAoKBnUtAAABCwdvLQAACgwIBG8uAAAKCBdv
LwAACnMwAAAKDQkIbzEAAApvMgAACgkTBd4nCCwGCG8oAAAK3BMEEQR6AigNAAAKbykAAAoDbyoA
AAoHbzMAAArcEQUqAAEoAAACAEwAJXEACgAAAAAAAEUANnsABR0AAAECAEUAO4AAGAAAAAAbMAIA
kQAAAAQAABEDLQtypgIAcHMbAAAKegQtC3LSAgBwcxsAAAp6AigNAAAKbykAAAoDbyoAAAoCKA0A
AApvKwAACm8sAAAKCgZ1LQAAAQsHby0AAAoMCARvLgAACggXby8AAAoIbzQAAAp1FwAAARME3iUI
LAYIbygAAArcDQl6AigNAAAKbykAAAoDbyoAAAoHbzMAAArcEQQqAAAAASgAAAIATAAdaQAKAAAA
AAAARQAucwADHQAAAQIARQAxdgAYAAAAABswBgBjAQAABQAAEQNvNQAACm82AAAKLSICKA0AAApv
FgAAChZ+FwAACnLiAgBwfhcAAAoWbxgAAAoqBCgZAAAKKBwAAAotDAQoGQAACigdAAAKJgQoNwAA
CgoOBCxUFgsrQgcDbzUAAApvNgAAChdZMg4GbzgAAAoWbzkAAAorAQUMBgNvNQAACgdvOgAACm87
AAAKbzwAAAoGCG89AAAKBxdYCwcDbzUAAApvNgAACjKwA28+AAAKbz8AAAoTByt9EQdvQAAACnQ6
AAABDRYTBCtcEQQDbzUAAApvNgAAChdZMg4GbzgAAAoWbzkAAAorAQUTBQkRBG9BAAAKKEIAAAot
HQkRBG9BAAAKbxEAAAoFKAoAAAYTBgYRBm88AAAKBhEFbz0AAAoRBBdYEwQRBANvNQAACm82AAAK
MpURB29DAAAKOnf////eFREHdSoAAAETCBEILAcRCG8oAAAK3N4KBiwGBm8oAAAK3CoAQTQAAAIA
AAC0AAAAjQAAAEEBAAAVAAAAAAAAAAIAAABPAAAACQEAAFgBAAAKAAAAAAAAAJIELQtycAIAcHMb
AAAKegMtC3I2AwBwcxsAAAp6BAMoRAAACioAAAAbMAMAngAAAAYAABECKA0AAApvKQAACgNvKgAA
CgIoDQAACm8rAAAKbywAAAoKBnUtAAABCwdvLQAACgwIckADAHBvLgAACghvRQAACnIDBABwBW9G
AAAKJghvRQAACnIfBABwBIwYAAABb0YAAAomCBdvLwAACghvRwAACibeCggsBghvKAAACtzeAw0J
et4YAigNAAAKbykAAAoDbyoAAAoHbzMAAArcKgAAASgAAAIAMABEdAAKAAAAAAAAKQBXgAADHQAA
AQIAKQBchQAYAAAAAB4CKEgAAAoqEzACAKcAAAAHAAARA29JAAAKF29KAAAKb0sAAAp+FwAACihM
AAAKLRMDb0kAAAoZb0oAAApvSwAACisRA29JAAAKF29KAAAKb0sAAAoKA29JAAAKGG9KAAAKb0sA
AAp+FwAACihMAAAKLQdyNQQAcCsRA29JAAAKGG9KAAAKb0sAAAoLAnsKAAAEBm9NAAAKLQtySwQA
cHNOAAAKegJ7CgAABAZvTwAACgwSAgcoUAAACioAEzAGAKAAAAAIAAARcxMAAAYTBChRAAAKChEE
c1IAAAoNCXKfBABwBm9TAAAKCXLDBABwEgAoVAAAChMFEgUjAAAAAAAA8L8oVQAACm9TAAAKCXLX
BABwEgAoVgAAChIAKFcAAAoXc1gAAAoTBhIGIwAAAAAAAPC/KFUAAApvUwAACgl9CgAABHLxBABw
HwlzWQAACgsHAxEE/gYUAAAGc1oAAApvWwAACgwIKhMwAwAsAAAACQAAEQMoXAAACgoDKBkAAAoL
cjcFAHAGKF0AAApvXgAACihfAAAKDAcIKGAAAAoqEzACAJsAAAAKAAARAg8BKGEAAApvYgAACi0n
AnI7BQBwb2IAAAotGgJyPwUAcG9iAAAKLQ0CckMFAHBvYgAACisBFwoGLF5zYwAACgsHcjsFAHBv
ZAAACiYCDRYTBCsoCREEbzkAAAoMBwhvZQAACiYIHyIzDAdyOwUAcG9kAAAKJhEEF1gTBBEECW9m
AAAKMs4HcjsFAHBvZAAACiYHbxEAAAoqAioeAihnAAAKKhp+BwAABCoucw0AAAaABwAABCoeAihp
AAAKKh4CKEgAAAoqAAATMAIALQAAAAsAABF+CAAABC0gckcFAHDQBQAAAihsAAAKb20AAApzbgAA
CgoGgAgAAAR+CAAABCoafgkAAAQqHgKACQAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAABYCAAAI34AAMQIAAAoDQAAI1N0cmluZ3MAAAAA7BUAAMgFAAAjVVMAtBsAABAAAAAj
R1VJRAAAAMQbAAD4AwAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAgAAAPolMwAWAAABAAAAUAAAAAYA
AAAKAAAAFAAAABUAAABvAAAABQAAABEAAAALAAAAAgAAAAMAAAAEAAAAAQAAAAEAAAAFAAAAAgAA
AAAACgABAAAAAAAGAAcB3gAKADMBLAEOAE0BOAEKAGUBLAESAMUBuQEKAKACjwIKANECvAIKALID
oAMKAMkDoAMKAOYDoAMKAAUEoAMKAB4EoAMKADcEoAMKAFIEoAMKAG0EoAMKAIYEoAMKAL8EnwQK
AN8EnwQGACgF3gAGAEoF3gAWAKMFgwUWALsFgwUKANcFLAEKAN4FLAEKAO0FLAEKAAcGLAEGACAG
3gAKAFsGUQYKAIAGLAEKAIoGLAEKAKAGUQYKALEGUQYOANoGzwYOAOwGzwYOADYHzwYOAFYHzwYO
AGwHzwYOAIQHzwYKAJQHUQYKAJkHUQYKAK4HUQYKAM4HLAEWAOIHgwUWAP4HgwUSAEgIMggSAFYI
MggSAIIIbwgSAJwIuQESALgIMggSANQIuQESAAUJuQESACYJuQEKAEsJUQYKAGMJUQYSAIQJuQES
AKQJuQEKANIJvwkSAPgJuQESAB8KMggSAEUKMggKAJ0KggoKAKoKLAEOAN8KwAoOAP8KwAoOABoL
wAoOACALwAoKAEILLAEOAIgLwAoOAI4LwAoOAJsLwAoKAOkLLAEKAAMM9wsKACMMnwQOAF0MRQwK
AIcMdAwKAKQMLAEKAKkMLAEKAM0MoAMOAPkM4wwOABIN4wwAAAAAAQAAAAAAAQABAAEAEAA5AEQA
BQABAAEAAwEAAGgAAAAJAAQADAAAARAAdgB/AA0ABwAMAAAAEAC1AH8AEQAIAA8AAwEQAG8KAAAR
AAoAEwBRgGwBEwBRgIQBKQBRgJEBEwAGBlMCKQBWgFsCeABWgGMCeAARAGsChgARALAClAARAN0C
mAAGALMKDgJQIAAAAACGAKUBRgABALAiAAAAAIEAqgFKAAEAaCMAAAAAgQDPAVAAAwA4JAAAAACB
AN4BVwAFAAAlAAAAAIEA8gFdAAcApCYAAAAAgQAAAkoACwDMJgAAAACBAAgCZgANAFwoAAAAAIEA
FAJtABAACCkAAAAAgQAmAm0AEQBAKQAAAACWADcCcgASAOcpAAAAAIYYTQJGABQA7ykAAAAAlgh7
AooAFAACKgAAAACGGE0CRgAUAPYpAAAAAJEYPgzbAhQACioAAAAAgxhNAkYAFAAUKgAAAACTCO0C
nAAUAE0qAAAAAJMIAQOhABQAVCoAAAAAkwgNA6YAFACgJwAAAACGGE0CRgAVAKgnAAAAAIYA5QoZ
AhUAAAABACEDAAACACUDAAABADEDAAACAEcDAAABADEDAAACAEcDAAABAE8DAAACACUDAAADAFUD
AAAEAF8DAAABAHEDAAACACUDAAABADEDAAACAHYDAAADAIADAAABAIkDAAABAIkDAAABAJYDAAAC
AFUDAAABAJoDAAABAP0KQQBNArYASQBNArYAUQBNArYAWQBNArYAYQBNArYAaQBNArYAcQBNArYA
eQBNArYAgQBNArYAiQBNArsAkQBNAkYAmQBNAkYACQBcBcAAoQCtBcUAqQDEBcoAsQDNBdAAIQDk
BdQAyQD1BdgAuQD7Bd0A0QAPBuMAsQAWBugAoQA0Bu0AuQA/BhMA2QBFBvIA4QBgBvsAoQBxBrsA
8QBNArYA+QCqBtgA+QC/Bg4BCQHlBhUBCQH7BrsAEQEHB7sACQEcBxwBCQFKByEBGQFoBycBCQF4
By8BOQGkBzUBKQG1BzwBSQHHB0IBUQHaB0YAoQDuB1UBWQHEBVsBoQAQCNAAYQEgCGIBaQFhCGcB
eQGMCLYAeQGoCG0BKQBNAkYAcQHGCHQBKQDgCHoBYQHlCOgAeQH3CNAAKQAaCZ4BoQFBCaQBOQFY
CagBsQFuCdQAuQB6Ca8BmQHEBbQBuQGPCdQAsQGeCbYAsQGeCbsBKQC2CcABoQHeCcYByQHsCdAA
0QHEBcwB0QAACtEByQEJCtYBOQESCu4BcQE2CvQB2QFSCvoBeQFfCqQBIQBNAkYA+QEPCyACAQLE
BSYCEQLNBdQAuQAoC90ADAA2CzcCGQJNArYADADEBT0C8QHkBW0A8QFcC0wCDABNAkYADABoB1IC
8QFkC1oC8QFtC2AC8QF1C6QB8QF+C6QB8QFNAmcCIQJNAm4CMQJNAnYCIQKqC3wC4QCyC/sA4QC+
C58CuQDWC6QCuQDcC6sC4QDhC7ICOQLkBdQAuQDuC74CQQJNAkYAQQIRDMMCQQIRDMoCuQAYDKQB
CQBNAkYASQJNAkYAGQBNAkYAUQJNAkoAWQJNAkYAYQK7DCADYQLWDCkDMQBNAi8DeQJNAjwDDgAE
ABYACAAIACwADgAMADEACAAUAHwACAAYAIEALgALAEwDLgBbANcDLgATAHUDLgAbAHUDLgAjAHsD
LgArAEwDLgAzAJwDLgA7AHUDLgBTAM4DQwBjAIEASQB7A0MDaQB7A0MDowBbA4EAowBTA98CowBD
A4EAwwBDA4EA4QBDA4EAAAFJAYEBkQHaAQICRAKEArgC0QI3AwQAAQAFAAIAAACHAo8AAACgAqwA
AAAZA7EAAgAMAAMAAgAQAAUAAgARAAcAAQASAAcALQIEgAAAAQAAAEYbzI8AAAAAAAD9BAAADgAA
AAAAAAAAAAAAAQC/AAAAAAAEAAAAAAAAAAAAAAAKACMBAAAAAAQAAAAAAAAAAAAAAAoALAEAAAAA
BAAAAAAAAAAAAAAACgC5AQAAAAAOAAAAAAAAAAAAAAABAGQFAAAAAAMAAgAGAAIAAAAAPE1vZHVs
ZT4Ac3BfN2I3NzgzM2NlZDNjNDAzYWJkZWNkN2NiYWVkN2Q0NjguY3Nwcm9qLmRsbABTY3JpcHRN
YWluAFNUXzMyY2MxMTU4ZDI4YzQxZDM5NmE4MmYyOTJhYjVhNzRhAFNjcmlwdFJlc3VsdHMAU2V0
dGluZ3MAc3BfN2I3NzgzM2NlZDNjNDAzYWJkZWNkN2NiYWVkN2Q0NjguY3Nwcm9qLlByb3BlcnRp
ZXMAUmVzb3VyY2VzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBt
c2NvcmxpYgBTeXN0ZW0ARW51bQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBPYmplY3QAQ09OTkVDVElPTl9NQU5BR0VSX05BTUUAVElNRU9VVF9IT1VSAERFRkFV
TFRfREFURV9GT1JNQVQATWFpbgBEb3dubG9hZFJlcG9ydABTeXN0ZW0uRGF0YQBEYXRhVGFibGUA
RmV0Y2hEYXRhVGFibGUARmV0Y2hTY2FsYXJBc1N0cmluZwBTYXZlRGVsaW1pdGVkAFNhdmVYTUwA
U2V0RmlsZW5hbWUAUmVwbGFjZVRpbWVzdGFtcHMAU2FuaXRpc2VGaWxlbmFtZQBTYW5pdGlzZURl
bGltaXRlZENlbGwALmN0b3IAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVz
b3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJl
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQB1cmwA
ZGVzdGluYXRpb24AY29ubmVjdGlvbk1hbmFnZXJOYW1lAGNvbW1hbmQAdGFibGUAZGVsaW1pdGVy
AGluY2x1ZGVGaWxlSGVhZGVyAHRleHQAZW50aXR5S2V5AGZpbGVuYW1lAGFic29sdXRlUGF0aABz
dHIAdmFsdWUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVy
ZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAHNwXzdiNzc4MzNjZWQzYzQwM2FiZGVjZDdjYmFlZDdkNDY4LmNzcHJv
agBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0
X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRf
VmFsdWUAU3RyaW5nAEludDMyAFRvU3RyaW5nAEJvb2xlYW4AUGFyc2UAb3BfRXF1YWxpdHkAQ29u
dmVydABUb0NoYXIAc2V0X1ZhbHVlAEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X0V2ZW50cwBFbXB0
eQBGaXJlV2FybmluZwBTeXN0ZW0uSU8AUGF0aABHZXREaXJlY3RvcnlOYW1lAHNldF9UYXNrUmVz
dWx0AEV4Y2VwdGlvbgBBcmd1bWVudE51bGxFeGNlcHRpb24ARGlyZWN0b3J5AEV4aXN0cwBEaXJl
Y3RvcnlJbmZvAENyZWF0ZURpcmVjdG9yeQBTeXN0ZW0uTmV0AFdlYlJlcXVlc3QAQ3JlYXRlAEh0
dHBXZWJSZXF1ZXN0AHNldF9UaW1lb3V0AHNldF9SZWFkV3JpdGVUaW1lb3V0AHNldF9Vc2VEZWZh
dWx0Q3JlZGVudGlhbHMAV2ViSGVhZGVyQ29sbGVjdGlvbgBnZXRfSGVhZGVycwBIdHRwUmVxdWVz
dEhlYWRlcgBBZGQAV2ViUmVzcG9uc2UAR2V0UmVzcG9uc2UASHR0cFdlYlJlc3BvbnNlAEZpbGUA
RmlsZVN0cmVhbQBPcGVuV3JpdGUAU3RyZWFtAEdldFJlc3BvbnNlU3RyZWFtAENvcHlUbwBJRGlz
cG9zYWJsZQBEaXNwb3NlAENvbm5lY3Rpb25zAGdldF9Db25uZWN0aW9ucwBDb25uZWN0aW9uTWFu
YWdlcgBnZXRfVHJhbnNhY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AU3lzdGVtLkRhdGEuU3FsQ2xp
ZW50AFNxbENvbm5lY3Rpb24AU3FsQ29tbWFuZABDcmVhdGVDb21tYW5kAFN5c3RlbS5EYXRhLkNv
bW1vbgBEYkNvbW1hbmQAc2V0X0NvbW1hbmRUZXh0AENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlw
ZQBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIASURhdGFSZWFkZXIATG9hZABSZWxlYXNlQ29u
bmVjdGlvbgBFeGVjdXRlU2NhbGFyAERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9Db2x1bW5zAElu
dGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAGdldF9Db3VudABTdHJlYW1Xcml0ZXIAQ3JlYXRlVGV4
dABUZXh0V3JpdGVyAGdldF9OZXdMaW5lAGdldF9DaGFycwBEYXRhQ29sdW1uAGdldF9Db2x1bW5O
YW1lAFdyaXRlAERhdGFSb3dDb2xsZWN0aW9uAGdldF9Sb3dzAFN5c3RlbS5Db2xsZWN0aW9ucwBJ
RW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AERhdGFSb3cASXNEQk51bGwATW92
ZU5leHQAV3JpdGVBbGxUZXh0AFNxbFBhcmFtZXRlckNvbGxlY3Rpb24AZ2V0X1BhcmFtZXRlcnMA
U3FsUGFyYW1ldGVyAEFkZFdpdGhWYWx1ZQBFeGVjdXRlTm9uUXVlcnkAPD5jX19EaXNwbGF5Q2xh
c3MyAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAERpY3Rpb25hcnlgMgBEYXRlVGltZQByZXBs
YWNlbWVudHMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAE1hdGNoADxSZXBsYWNlVGlt
ZXN0YW1wcz5iX18xAG0AR3JvdXBDb2xsZWN0aW9uAGdldF9Hcm91cHMAR3JvdXAAQ2FwdHVyZQBv
cF9JbmVxdWFsaXR5AENvbnRhaW5zS2V5AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AZ2V0X05v
dwBnZXRfRGF0ZQBBZGREYXlzAGdldF9ZZWFyAGdldF9Nb250aABSZWdleABSZWdleE9wdGlvbnMA
TWF0Y2hFdmFsdWF0b3IAUmVwbGFjZQBHZXRGaWxlTmFtZQBHZXRJbnZhbGlkRmlsZU5hbWVDaGFy
cwBTcGxpdABKb2luAENvbWJpbmUAQ2hhcgBDb250YWlucwBTeXN0ZW0uVGV4dABTdHJpbmdCdWls
ZGVyAEFwcGVuZABnZXRfTGVuZ3RoAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBT
eXN0ZW0uQ29kZURvbS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFn
bm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25l
bnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAAAAt
VQBzAGUAcgA6ADoAQwBvAG0AbQBhAG4AZABUAG8ARQB4AGUAYwB1AHQAZQAAK1UAcwBlAHIAOgA6
AEYAaQBsAGUARABlAHMAdABpAG4AYQB0AGkAbwBuAAApVQBzAGUAcgA6ADoARQBuAHQAaQB0AHkA
VAB5AHAAZQBOAGEAbQBlAAAfVQBzAGUAcgA6ADoARQBuAHQAaQB0AHkASwBlAHkAAB9VAHMAZQBy
ADoAOgBEAGUAbABpAG0AaQB0AGUAcgAAL1UAcwBlAHIAOgA6AEkAbgBjAGwAdQBkAGUARgBpAGwA
ZQBIAGUAYQBkAGUAcgAAAQADLAAAIVUAcwBlAHIAOgA6AEUAeABpAHQAUwB0AGEAdAB1AHMAAA1S
AGUAcABvAHIAdAAAB1gATQBMAAATRABlAGwAaQBtAGkAdABlAGQAABNFAHQAbABEAEIAXwBBAEQA
TwAAJ0kAbgB2AGEAbABpAGQAIABFAG4AdABpAHQAeQAgAFQAeQBwAGUAAIDjQQBuACAAZQByAHIA
bwByACAAbwBjAGMAdQByAHIAZQBkACAAcAByAG8AYwBlAHMAcwBpAG4AZwAgAEUAeABwAG8AcgB0
ACAAewBlAG4AdABpAHQAeQBLAGUAeQB9ACwAIABhAG4AZAAgAGkAdAAgAHcAYQBzACAAbgBvAHQA
IABhAGIAbABlACAAdABvACAAYgBlACAAZwBlAG4AZQByAGEAdABlAGQALgAgAEUAcgByAG8AcgAg
AG0AZQBzAHMAYQBnAGUAOgAgAHsAZQB4AC4ATQBlAHMAcwBhAGcAZQB9AAAHdQByAGwAABdkAGUA
cwB0AGkAbgBhAHQAaQBvAG4AAB1lAG4ALQBBAFUALABlAG4AOwBxAD0AMAAuADkAAStjAG8AbgBu
AGUAYwB0AGkAbwBuAE0AYQBuAGEAZwBlAHIATgBhAG0AZQAAD2MAbwBtAG0AYQBuAGQAAFNUAGEA
YgBsAGUAIABoAGEAcwAgAG4AbwAgAGMAbwBsAHUAbQBuAHMALgAgAE4AbwAgAGYAaQBsAGUAIABp
AHMAIABjAHIAZQBhAHQAZQBkAC4AAAl0AGUAeAB0AACAwVUAUABEAEEAVABFACAARABhAHQAYQBF
AHgAcABvAHIAdAAuAEUAbgB0AGkAdAB5ACAAUwBFAFQAIABNAG8AcwB0AFIAZQBjAGUAbgB0AEYA
aQBsAGUATABvAGMAYQB0AGkAbwBuACAAPQAgAEAARgBpAGwAZQBMAG8AYwBhAHQAaQBvAG4AIABX
AEgARQBSAEUAIABFAG4AdABpAHQAeQBLAGUAeQAgAD0AIABAAEUAbgB0AGkAdAB5AEsAZQB5AAAb
QABGAGkAbABlAEwAbwBjAGEAdABpAG8AbgAAFUAARQBuAHQAaQB0AHkASwBlAHkAABV5AHkAeQB5
AC0ATQBNAC0AZABkAAFTQwBhAG4AbgBvAHQAIABsAG8AYwBhAHQAZQAgAHsAawBlAHkAfQAgAGkA
bgAgAHQAaABlACAAcABhAHIAYQBtAGUAdABlAHIAIABsAGkAcwB0AAAjQwBVAFIAUgBFAE4AVABf
AFQASQBNAEUAUwBUAEEATQBQAAATRABBAFQAQQBfAEQAQQBUAEUAABlQAFIARQBWAEkATwBVAFMA
XwBFAE8ATQAARXsAKABbAF4AfQBdAC4AKgA/ACkAOgAoAFsAXgB9AF0ALgAqAD8AKQA/AH0AfAB7
ACgAWwBeAH0AXQAuACoAPwApAH0AAANfAAADIgAAAw0AAAMKAAB/cwBwAF8ANwBiADcANwA4ADMA
MwBjAGUAZAAzAGMANAAwADMAYQBiAGQAZQBjAGQANwBjAGIAYQBlAGQANwBkADQANgA4AC4AYwBz
AHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAArNeVd
UwyuQZE1j7NCsD1xAAiJhF3NgIDMkQi3elxWGTTgiQIGDhJFAHQAbABEAEIAXwBBAEQATwACBggE
gO42ABR5AHkAeQB5AC0ATQBNAC0AZABkAAMgAAEFIAIBDg4GIAISFQ4OBSACDg4OCCAEARIVDgMC
BiADAQ4IDgQgAQ4OBQACDg4DAwYRDAQAAAAABAEAAAADBhIQBAAAEhAECAASEAMGEhkDBhIdBAAA
EhkEAAASHQUAAQESHQQIABIZBAgAEh0EIAEBDgQgAQEIBCAAElEEIAASVQUgARJZHAMgABwDIAAO
BAABAg4FAAICDg4EAAEDDgQgAQEcBCAAEm0IIAUBCA4ODggEAAEODg0HCg4ODggOAgMOEhUOBgAB
EoCBDgYAARKAhQ4EIAEBAgUgABKAjQcgAgERgJEOBSAAEoCVBgABEoChDgUgABKApQYgAQESgKUL
BwMSgIkSgJkSgKUFIAASgK0GIAESgLEcBCABHBwFIAASgLkGIAEBEYDBBSAAEoDFBiABARKAyQ8H
BhwSgLUSgLkSFRJ1EhUMBwUcEoC1EoC5EnUOBSAAEoDNAyAACAYAARKA1Q4EIAEDCAYgARKA3QgE
IAEBAwUgABKA4QUgABKA5QQgARwIBAABAhwDIAACEwcJEoDVCAMSgOkIAw4SgOUSgKkFAAIBDg4F
IAASgO0HIAISgPEOHAsHBBwSgLUSgLkSdQoGFRKA9QIOEYD5BiABDhKA/QUgABKBAQYgARKBBQgJ
FRKA9QIOEYD5BSABAhMABiABEwETAAcHAw4OEYD5BQAAEYD5ByACARMAEwEFIAARgPkGIAERgPkN
BiADAQgICAcgAgEOEYEVBSACARwYByACDg4SgRkaBwcRgPkSgREOFRKA9QIOEYD5EhgRgPkRgPkE
AAAdAwYgAR0OHQMGAAIODh0OBQACDg4OBQcDDg4OBCABAg4GIAESgSEOBiABEoEhAwkHBQISgSED
DggDAAABQAEAM1N5c3RlbS5SZXNvdXJjZXMuVG9vbHMuU3Ryb25nbHlUeXBlZFJlc291cmNlQnVp
bGRlcgcyLjAuMC4wAAAIAAESgTERgTUFIAASgTkHIAIBDhKBOQQHARIZBiABARGBQQgBAAIAAAAA
ACgBACNTVF8zMmNjMTE1OGQyOGM0MWQzOTZhODJmMjkyYWI1YTc0YQAABQEAAAAAIAEAG1Blb3Bs
ZXMgQ2hvaWNlIENyZWRpdCBVbmlvbgAAMQEALENvcHlyaWdodCBAIFBlb3BsZXMgQ2hvaWNlIENy
ZWRpdCBVbmlvbiAyMDE4AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
AABASgAAAAAAAAAAAABeSgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUEoAAAAAAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAABgBAAA
AAAAAAAAAABgBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAzI9GGwAAAQDMj0YbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEwAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAnAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
WAAcAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABQAGUAbwBwAGwAZQBzACAAQwBoAG8AaQBj
AGUAIABDAHIAZQBkAGkAdAAgAFUAbgBpAG8AbgAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkA
cAB0AGkAbwBuAAAAAABTAFQAXwAzADIAYwBjADEAMQA1ADgAZAAyADgAYwA0ADEAZAAzADkANgBh
ADgAMgBmADIAOQAyAGEAYgA1AGEANwA0AGEAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4ANgA5ADgAMgAuADMANgA4ADEAMgAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABzAHAAXwA3AGIANwA3ADgAMwAzAGMAZQBkADMAYwA0ADAAMwBhAGIAZABlAGMA
ZAA3AGMAYgBhAGUAZAA3AGQANAA2ADgALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAACAAC0AAQBM
AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABQAGUA
bwBwAGwAZQBzACAAQwBoAG8AaQBjAGUAIABDAHIAZQBkAGkAdAAgAFUAbgBpAG8AbgAgADIAMAAx
ADgAAAAAAIgALwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHAAXwA3AGIA
NwA3ADgAMwAzAGMAZQBkADMAYwA0ADAAMwBhAGIAZABlAGMAZAA3AGMAYgBhAGUAZAA3AGQANAA2
ADgALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADMAMgBjAGMAMQAxADUAOABkADIAOABjADQAMQBkADMAOQA2AGEAOAAyAGYAMgA5
ADIAYQBiADUAYQA3ADQAYQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgA5ADgAMgAuADMANgA4ADEAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgA5ADgAMgAuADMANgA4ADEAMgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAcDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                        </ScriptProject>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Set dependency 1"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:Disabled="True"
                      DTS:DTSID="{DC171B09-88FB-4DAF-87EA-38DB7C251AA5}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Set dependency 1"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="0">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="Disable">LEN(@[User::DependencyEntityToSet]) == 0</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="EXEC Dependency.up_SetReadyStatus ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@EntityCode"
                            SQLTask:DtsVariableName="User::DependencyEntityToSet"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@PackageExecutionID"
                            SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Set entity processing status 1"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:DTSID="{880DB106-689F-4806-8591-ADE3BBD18832}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Set entity processing status 1"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="0">
                      <DTS:Variables />
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="EXEC Process.up_SetEntityProcessingSuccess ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@EntityKey"
                            SQLTask:DtsVariableName="User::EntityKey"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Set to complete and Notify"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:DTSID="{2A9A194C-ABD0-4752-90D3-1A595F8A5DDE}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Set to complete and Notify"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="0">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="Disable">@[User::ExitStatus] != 0</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="EXEC DataExport.up_NotifyDataExportComplete ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@EntityKey"
                            SQLTask:DtsVariableName="User::EntityKey"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                  </DTS:Executables>
                  <DTS:PrecedenceConstraints>
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1.PrecedenceConstraints[Constraint_Pause 1_To_Script Task]"
                      DTS:CreationName=""
                      DTS:DTSID="{608D751D-CCCB-43A0-A5D9-FE8D20AAA916}"
                      DTS:From="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Pause 1"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Pause 1_To_Script Task"
                      DTS:To="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Script Task" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1.PrecedenceConstraints[Constraint_Script Task_To_Set to complete and Notify]"
                      DTS:CreationName=""
                      DTS:DTSID="{E64CD821-5B2C-493B-B7C1-B543E36D3A4A}"
                      DTS:From="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Script Task"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Script Task_To_Set to complete and Notify"
                      DTS:To="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Set to complete and Notify" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1.PrecedenceConstraints[Constraint_Set entity processing status 1_To_Set dependency 1]"
                      DTS:CreationName=""
                      DTS:DTSID="{ED7AA475-C0CC-4F6F-8F90-E1E29AC090E8}"
                      DTS:From="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Set entity processing status 1"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Set entity processing status 1_To_Set dependency 1"
                      DTS:To="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Set dependency 1" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1.PrecedenceConstraints[Constraint_Set to complete and Notify_To_Set entity processing status 1]"
                      DTS:CreationName=""
                      DTS:DTSID="{39DE9D08-63E0-49B3-8713-59305F654681}"
                      DTS:From="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Set to complete and Notify"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Set to complete and Notify_To_Set entity processing status 1"
                      DTS:To="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Set entity processing status 1" />
                  </DTS:PrecedenceConstraints>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Update parallel execution control 1"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:DTSID="{D31D6B96-2910-4CDB-9ADC-70930963C686}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update parallel execution control 1"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                      SQLTask:SqlStatementSource="EXEC Process.up_UpdateParallelExecutionControl @ExecutionInstanceGUID = ?, @ParallelLegNumber = 1, @KeyCurrentlyBeingProcessed = ?"
                      SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="AreAnyParallelLegsStillProcessing"
                        SQLTask:DtsVariableName="User::AreAnyParallelLegsStillProcessing" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="@ExecutionInstanceGUID"
                        SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="@KeyCurrentlyBeingProcessed"
                        SQLTask:DtsVariableName="User::EntityKey"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1.PrecedenceConstraints[Constraint_Get next entity To process 1_To_Update parallel execution control 1]"
                  DTS:CreationName=""
                  DTS:DTSID="{097A4EF5-599C-48AB-9C3E-021F6E3AC910}"
                  DTS:From="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Get next entity To process 1"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint_Get next entity To process 1_To_Update parallel execution control 1"
                  DTS:To="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Update parallel execution control 1" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Main Flow\Parallel Leg 1\While more entities to process 1.PrecedenceConstraints[Constraint_Process Entity 1_To_Get next entity To process 1]"
                  DTS:CreationName=""
                  DTS:DTSID="{C2DDDDF7-8F09-48FE-B9F3-B010F26934D2}"
                  DTS:From="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint_Process Entity 1_To_Get next entity To process 1"
                  DTS:To="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Get next entity To process 1" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Main Flow\Parallel Leg 1.PrecedenceConstraints[Constraint_Get Initial Entity To Process 1_To_Update Parallel Execution Control 1]"
              DTS:CreationName=""
              DTS:DTSID="{8699BB7C-BF37-4283-90CA-FEAA439B4431}"
              DTS:From="Package\Main Flow\Parallel Leg 1\Get Initial Entity To Process 1"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint_Get Initial Entity To Process 1_To_Update Parallel Execution Control 1"
              DTS:To="Package\Main Flow\Parallel Leg 1\Update Parallel Execution Control 1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Main Flow\Parallel Leg 1.PrecedenceConstraints[Constraint_Update Parallel Execution Control 1_To_While more entities to process 1]"
              DTS:CreationName=""
              DTS:DTSID="{6EA5EEFB-0FC2-41DF-8C04-7A05B5A43174}"
              DTS:From="Package\Main Flow\Parallel Leg 1\Update Parallel Execution Control 1"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint_Update Parallel Execution Control 1_To_While more entities to process 1"
              DTS:To="Package\Main Flow\Parallel Leg 1\While more entities to process 1" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Main Flow\Parallel Leg 2"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:DTSID="{21B067E6-A222-4F1A-B3E2-3DFE0A1F3A7B}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Parallel Leg 2">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{05E942C4-6487-4D6D-9A2F-CB2E167D5B8F}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="User"
              DTS:ObjectName="AreAnyParallelLegsStillProcessing"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{8FA629E3-F91D-48C5-8772-74DFCB5B9EA0}"
              DTS:IncludeInDebugDump="2345"
              DTS:Namespace="User"
              DTS:ObjectName="DependencyEntityToSet"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="8"
                xml:space="preserve"></DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{1CDF461E-EE22-49B5-BD63-08F62E74F87F}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="User"
              DTS:ObjectName="EntityKey"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="3">-1</DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{4D74B7EA-C7CB-460F-B91C-500F64677740}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="User"
              DTS:ObjectName="ExitStatus">
              <DTS:VariableValue
                DTS:DataType="3">0</DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{E637454A-98DF-47F2-AAFC-41D9E46CCD49}"
              DTS:IncludeInDebugDump="2345"
              DTS:Namespace="User"
              DTS:ObjectName="SqlStatement"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="8"
                xml:space="preserve"></DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:LoggingOptions
            DTS:LoggingMode="2" />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::NumberOfParallelExecutions] &lt; 2</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Main Flow\Parallel Leg 2\Get Initial Entity To Process 2"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:DTSID="{81E75367-BA70-4731-8093-5E5C937D68CD}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Initial Entity To Process 2"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                  SQLTask:SqlStatementSource="EXEC Process.up_GetEntityToProcess ?, 3"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::EntityKey" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="1"
                    SQLTask:DtsVariableName="User::DependencyEntityToSet" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="2"
                    SQLTask:DtsVariableName="User::SqlStatement" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@EntityGroupKeyCommaSeparatedList"
                    SQLTask:DtsVariableName="$Package::EntityGroupKeyCommaSeparatedList"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Main Flow\Parallel Leg 2\Update Parallel Execution Control 2"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:DTSID="{14DD0C54-21AE-4737-98F7-5A5A8AC1C0E7}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update Parallel Execution Control 2"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                  SQLTask:SqlStatementSource="EXEC Process.up_UpdateParallelExecutionControl @ExecutionInstanceGUID = ?, @ParallelLegNumber = 2, @KeyCurrentlyBeingProcessed = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@ExecutionInstanceGUID"
                    SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@KeyCurrentlyBeingProcessed"
                    SQLTask:DtsVariableName="User::EntityKey"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2"
              DTS:CreationName="STOCK:FORLOOP"
              DTS:DTSID="{4C1B4820-A9B2-4066-9FFB-35F16AABDDA6}"
              DTS:EvalExpression="@[User::AreAnyParallelLegsStillProcessing] == True"
              DTS:ExecutableType="STOCK:FORLOOP"
              DTS:LocaleID="-1"
              DTS:MaxConcurrent="1"
              DTS:ObjectName="While more entities to process 2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:LoggingMode="2" />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Get next entity To process 2"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:DTSID="{624295A1-6570-4D26-87E2-4B51A145EF41}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Get next entity To process 2"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="1">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:LoggingMode="2" />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                      SQLTask:SqlStatementSource="EXEC Process.up_GetEntityToProcess ?, 3"
                      SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="0"
                        SQLTask:DtsVariableName="User::EntityKey" />
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="1"
                        SQLTask:DtsVariableName="User::DependencyEntityToSet" />
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="2"
                        SQLTask:DtsVariableName="User::SqlStatement" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="@EntityGroupKeyCommaSeparatedList"
                        SQLTask:DtsVariableName="$Package::EntityGroupKeyCommaSeparatedList"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2"
                  DTS:CreationName="STOCK:SEQUENCE"
                  DTS:DTSID="{F934A4AA-4F93-42F6-97E0-601D6EC726CC}"
                  DTS:ExecutableType="STOCK:SEQUENCE"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Process Entity 2">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:LoggingMode="2" />
                  <DTS:PropertyExpression
                    DTS:Name="Disable">@[User::EntityKey] == 0</DTS:PropertyExpression>
                  <DTS:Executables>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Pause 2"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:DTSID="{F31F55AD-7639-4602-95B7-8AA93AFC64F1}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Pause 2"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="1">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="Disable">@[User::EntityKey] &gt; 0</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="WAITFOR DELAY ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="0"
                            SQLTask:DtsVariableName="$Package::DelayToGetNextEntity"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="8" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Script Task"
                      DTS:CreationName="Microsoft.ScriptTask"
                      DTS:DTSID="{1D3144CD-030F-498F-A308-48328F6BA84B}"
                      DTS:ExecutableType="Microsoft.ScriptTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Script Task"
                      DTS:ThreadHint="1">
                      <DTS:Variables />
                      <DTS:ObjectData>
                        <ScriptProject
                          Name="sp_75c65d594fa5404ba33054f0fb274cb2"
                          VSTAMajorVersion="15"
                          VSTAMinorVersion="0"
                          Language="CSharp"
                          ReadOnlyVariables="User::CommandToExecute,User::Delimiter,User::EntityKey,User::EntityTypeName,User::FileDestination,User::IncludeFileHeader"
                          ReadWriteVariables="User::ExitStatus">
                          <ProjectItem
                            Name="Properties\resources.resx"
                            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string" />
                            <xsd:attribute name="type" type="xsd:string" />
                            <xsd:attribute name="mimetype" type="xsd:string" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string" />
                            <xsd:attribute name="name" type="xsd:string" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" />
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    </root>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\settings.designer.cs"
                            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_75c65d594fa5404ba33054f0fb274cb2.csproj.Properties.Settings.get_Default():sp_75c65d594fa5404ba33054f0fb274cb2.csproj.Properties.Settings")]

namespace sp_75c65d594fa5404ba33054f0fb274cb2.csproj.Properties
{

    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }

    }
}]]></ProjectItem>
                          <ProjectItem
                            Name="ScriptMain.cs"
                            Encoding="UTF8"><![CDATA[   #region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
#endregion

namespace ST_32cc1158d28c41d396a82f292ab5a74a
{

    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        const string CONNECTION_MANAGER_NAME = "EtlDB_ADO";
        const int TIMEOUT_HOUR = 1000 * 60 * 60;
        private const string DEFAULT_DATE_FORMAT = "yyyy-MM-dd";

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // User::CommandToExecute, User::EntityKey, User::EntityTypeName, User::FileDestination
            string command = (string)Dts.Variables["User::CommandToExecute"].Value;
            string destination = (string)Dts.Variables["User::FileDestination"].Value;
            string entityType = (string)Dts.Variables["User::EntityTypeName"].Value;
            int entityKey = (int)Dts.Variables["User::EntityKey"].Value;
            string delimiterString = (string)Dts.Variables["User::Delimiter"].Value;
            bool includeFileHeader = Boolean.Parse(Dts.Variables["User::IncludeFileHeader"].Value.ToString());

            // If delimiterString is NULL or empty, use a default of comma
            char delimiter = (delimiterString == null || delimiterString == "" ? Convert.ToChar(",") : Convert.ToChar(delimiterString));

            // Reset exit status
            Dts.Variables["User::ExitStatus"].Value = 0;

            // Add timestamp 
            destination = ReplaceTimestamps(destination);

            // Make sure the filename does not contain invalid characters
            destination = SanitiseFilename(destination);

            try
            {
                switch (entityType)
                {
                    case "Report":
                        DownloadReport(command, destination);
                        break;
                    case "XML":
                        var result = FetchScalarAsString(CONNECTION_MANAGER_NAME, command);
                        SaveXML(result, destination);
                        break;
                    case "Delimited":
                        var table = FetchDataTable(CONNECTION_MANAGER_NAME, command);
                        SaveDelimited(table, destination, delimiter, includeFileHeader);
                        break;
                    default:
                        Dts.Events.FireWarning(0, String.Empty, "Invalid Entity Type", String.Empty, 0);
                        break;
                }
                Dts.Variables["User::ExitStatus"].Value = 0;
                SetFilename(CONNECTION_MANAGER_NAME, entityKey, Path.GetDirectoryName(destination));
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireWarning(0, String.Empty, "An error occurred processing Export {entityKey}, and it was not able to be generated. Error message: {ex.Message}", String.Empty, 0);
                Dts.Variables["User::ExitStatus"].Value = 1;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
        }

        void DownloadReport(string url, string destination)
        {
            if (url == null) throw new ArgumentNullException("url");
            if (destination == null) throw new ArgumentNullException("destination");

            if (!Directory.Exists(Path.GetDirectoryName(destination)))
            {
                Directory.CreateDirectory(Path.GetDirectoryName(destination));
            }

            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
            request.Timeout = TIMEOUT_HOUR;
            request.ReadWriteTimeout = TIMEOUT_HOUR;
            request.UseDefaultCredentials = true;
            request.Headers.Add(HttpRequestHeader.AcceptLanguage, "en-AU,en;q=0.9");

            var response = (HttpWebResponse)request.GetResponse();

            using (Stream file = File.OpenWrite(destination))
            {
                response.GetResponseStream().CopyTo(file);
            }
        }

        DataTable FetchDataTable(string connectionManagerName, string command)
        {
            if (connectionManagerName == null) throw new ArgumentNullException("connectionManagerName");
            if (command == null) throw new ArgumentNullException("command");

            var connectionManager = Dts.Connections[connectionManagerName].AcquireConnection(Dts.Transaction);

            var connection = connectionManager as SqlConnection;
            try
            {
                using (var cmd = connection.CreateCommand())
                {
                    cmd.CommandText = command;
                    cmd.CommandType = CommandType.Text;
                    var table = new DataTable();
                    table.Load(cmd.ExecuteReader());
                    return table;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                Dts.Connections[connectionManagerName].ReleaseConnection(connection);
            }
        }

        string FetchScalarAsString(string connectionManagerName, string command)
        {
            if (connectionManagerName == null) throw new ArgumentNullException("connectionManagerName");
            if (command == null) throw new ArgumentNullException("command");

            var connectionManager = Dts.Connections[connectionManagerName].AcquireConnection(Dts.Transaction);

            var connection = connectionManager as SqlConnection;
            try
            {
                using (var cmd = connection.CreateCommand())
                {
                    cmd.CommandText = command;
                    cmd.CommandType = CommandType.Text;
                    return cmd.ExecuteScalar() as string;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                Dts.Connections[connectionManagerName].ReleaseConnection(connection);
            }
        }

        void SaveDelimited(DataTable table, string destination, char delimiter, bool includeFileHeader)
        {
            if (table.Columns.Count == 0)
            {
                /* Do not export data if column collection is empty */
                Dts.Events.FireWarning(0, string.Empty, "Table has no columns. No file is created.", string.Empty, 0);
                return;
            }

            if (!Directory.Exists(Path.GetDirectoryName(destination)))
            {
                Directory.CreateDirectory(Path.GetDirectoryName(destination));
            }

            using (StreamWriter sw = File.CreateText(destination))
            {
                if (includeFileHeader)
                {
                    /* Write header row */
                    for (int i = 0; i < table.Columns.Count; i++)
                    {
                        char delimiterOrNewline = (i < table.Columns.Count - 1 ? delimiter : sw.NewLine[0]);
                        sw.Write(table.Columns[i].ColumnName);
                        sw.Write(delimiterOrNewline);
                    }
                }

                /* Write Data */
                foreach (DataRow dr in table.Rows)
                {
                    for (int i = 0; i < table.Columns.Count; i++)
                    {
                        char delimiterOrNewline = (i < table.Columns.Count - 1 ? delimiter : sw.NewLine[0]);
                        if (!Convert.IsDBNull(dr[i]))
                        {
                            var cellValue = SanitiseDelimitedCell(dr[i].ToString(), delimiter);
                            sw.Write(cellValue);
                        }
                        sw.Write(delimiterOrNewline);
                    }
                }
            }
        }

        void SaveXML(string text, string destination)
        {
            if (destination == null) throw new ArgumentNullException("destination");
            if (text == null) throw new ArgumentNullException("text");

            File.WriteAllText(destination, text);
        }

        void SetFilename(string connectionManagerName, int entityKey, string filename)
        {
            var connectionManager = Dts.Connections[connectionManagerName].AcquireConnection(Dts.Transaction);

            var connection = connectionManager as SqlConnection;
            try
            {
                using (var cmd = connection.CreateCommand())
                {
                    cmd.CommandText = "UPDATE DataExport.Entity SET MostRecentFileLocation = @FileLocation WHERE EntityKey = @EntityKey";
                    cmd.Parameters.AddWithValue("@FileLocation", filename);
                    cmd.Parameters.AddWithValue("@EntityKey", entityKey);
                    cmd.CommandType = CommandType.Text;
                    cmd.ExecuteNonQuery();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                Dts.Connections[connectionManagerName].ReleaseConnection(connection);
            }
        }

        /*
         * Looks for predefined strings in the path and replaces it with a formatted timestamp
         * Markers are CURRENT_TIMESTAMP (replaced with the current date and time) and DATA_DATE (replaced with the previous business day);
         */
        string ReplaceTimestamps(string absolutePath)
        {
            var now = DateTime.Now;
            var replacements = new Dictionary<string, DateTime> { { "CURRENT_TIMESTAMP", now }, { "DATA_DATE", now.Date.AddDays(-1) }, { "PREVIOUS_EOM", (new DateTime(now.Year, now.Month, 1)).AddDays(-1) } };

            // invaluable - https://regex101.com
            var regex = new Regex("{([^}].*?):([^}].*?)?}|{([^}].*?)}", RegexOptions.Compiled | RegexOptions.IgnoreCase);
            var result = regex.Replace(absolutePath, delegate (Match m) {
                var key = m.Groups[1].Value != String.Empty ? m.Groups[1].Value : m.Groups[3].Value;
                var fmt = m.Groups[2].Value != String.Empty ? m.Groups[2].Value : DEFAULT_DATE_FORMAT;

                if (replacements.ContainsKey(key) == false) throw new InvalidOperationException("Cannot locate {key} in the parameter list");
                return replacements[key].ToString(fmt);
            });

            return result;
        }

        string SanitiseFilename(string absolutePath)
        {
            var filename = Path.GetFileName(absolutePath);
            var directory = Path.GetDirectoryName(absolutePath);

            var sanitisedFilename = string.Join("_", filename.Split(Path.GetInvalidFileNameChars()));

            return Path.Combine(directory, sanitisedFilename);
        }

        // Some guy on stack overflow says this always works.
        public static string SanitiseDelimitedCell(string str, char delimiter)
        {
            bool mustQuote = (str.Contains(delimiter.ToString()) || str.Contains("\"") || str.Contains("\r") || str.Contains("\n"));
            if (mustQuote)
            {
                StringBuilder sb = new StringBuilder();
                sb.Append("\"");
                foreach (char nextChar in str)
                {
                    sb.Append(nextChar);
                    if (nextChar == '"')
                        sb.Append("\"");
                }
                sb.Append("\"");
                return sb.ToString();
            }

            return str;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
                          <ProjectItem
                            Name="sp_75c65d594fa5404ba33054f0fb274cb2.csproj"
                            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
	    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <OutputType>Library</OutputType>
        <RootNamespace>sp_75c65d594fa5404ba33054f0fb274cb2.csproj</RootNamespace>
        <AssemblyName>sp_75c65d594fa5404ba33054f0fb274cb2.csproj</AssemblyName>
        <ProjectGuid>{C792B577-3187-41B4-A778-35BF1292DEDE}</ProjectGuid>
		        <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
        <TargetFrameworkProfile></TargetFrameworkProfile>			    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
				        <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
        <NoStandardLibraries>false</NoStandardLibraries>
		    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
		        <DebugSymbols>true</DebugSymbols>
        <Optimize>false</Optimize>
        <OutputPath>.\bin\Debug\</OutputPath>
        <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <WarningLevel>4</WarningLevel>
		    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
		        <DebugSymbols>false</DebugSymbols>
        <Optimize>true</Optimize>
        <OutputPath>.\bin\Release\</OutputPath>
        <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
        <DefineConstants>TRACE</DefineConstants>
        <WarningLevel>4</WarningLevel>
		    </PropertyGroup>
    <PropertyGroup>
        <PreBuildEvent>
        </PreBuildEvent>
        <PostBuildEvent>
        </PostBuildEvent>
    </PropertyGroup>
    <ItemGroup>
                <Reference Include="System" />
                <Reference Include="System.Data" />
                <Reference Include="System.Windows.Forms" />
                <Reference Include="System.Xml" />
                <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL" />
                <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL" />
            </ItemGroup>
	    <ItemGroup>
        <Folder Include="Resources\" />
        <AppDesigner Include="Properties\" />
        <EmbeddedResource Include="Properties\Resources.resx">
						<Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>Resources.Designer.cs</LastGenOutput>
			        </EmbeddedResource>
        <Compile Include="Properties\Resources.Designer.cs">
            <AutoGen>True</AutoGen>
            <DependentUpon>Resources.resx</DependentUpon>
            <DesignTime>True</DesignTime>
        </Compile>
		        <None Include="Properties\Settings.settings">
            <Generator>SettingsSingleFileGenerator</Generator>
            <LastGenOutput>Settings.Designer.cs</LastGenOutput>
        </None>
        <Compile Include="Properties\Settings.Designer.cs">
            <AutoGen>True</AutoGen>
            <DependentUpon>Settings.settings</DependentUpon>
            <DesignTimeSharedInput>True</DesignTimeSharedInput>
        </Compile>

				<Compile Include="ScriptMain.cs">
			<SubType>Code</SubType>
		</Compile>
				<Compile Include="Properties\AssemblyInfo.cs">
			<SubType>Code</SubType>
		</Compile>
		
		
		
		
		    </ItemGroup>
		<!-- Include the build rules for a C# project.-->
    <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
		<!-- This section defines VSTA properties that describe the host-changable project properties. -->
    <ProjectExtensions>
        <VisualStudio>
            <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
                <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
                <Host Name="SSIS_ScriptTask" />
                <ProjectClient>
                    <HostIdentifier>SSIS_ST130</HostIdentifier>
                </ProjectClient>
            </FlavorProperties>
        </VisualStudio>
    </ProjectExtensions>
</Project>]]></ProjectItem>
                          <ProjectItem
                            Name="Project"
                            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{3cb52fae-25ae-4239-88ec-f44fd42d6905}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sp_75c65d594fa5404ba33054f0fb274cb2</msb:DisplayName>
		<msb:CodeName>sp_75c65d594fa5404ba33054f0fb274cb2</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
				<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
				<msb:File Include="Properties\Resources.Designer.cs"/>
				<msb:File Include="Properties\AssemblyInfo.cs"/>
				<msb:File Include="ScriptMain.cs"/>
								<msb:File Include="Properties\Settings.settings"/>
						<msb:Project Include="sp_75c65d594fa5404ba33054f0fb274cb2.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\AssemblyInfo.cs"
                            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_32cc1158d28c41d396a82f292ab5a74a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Peoples Choice Credit Union")]
[assembly: AssemblyProduct("ST_32cc1158d28c41d396a82f292ab5a74a")]
[assembly: AssemblyCopyright("Copyright @ Peoples Choice Credit Union 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\settings.settings"
                            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="iso-8859-1"?>
<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)"  >
    <Profiles>
        <Profile Name="(Default)" />
    </Profiles>
    <Settings /></SettingsFile>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\resources.designer.cs"
                            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_75c65d594fa5404ba33054f0fb274cb2.csproj.Properties.Resources.get_ResourceManager():System.Resources.ResourceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_75c65d594fa5404ba33054f0fb274cb2.csproj.Properties.Resources.get_Culture():System.Globalization.CultureInfo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_75c65d594fa5404ba33054f0fb274cb2.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo):Void")]

namespace sp_75c65d594fa5404ba33054f0fb274cb2.csproj.Properties {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("sp_75c65d594fa5404ba33054f0fb274cb2.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

    }
}]]></ProjectItem>
                          <BinaryItem
                            Name="\bin\release\sp_75c65d594fa5404ba33054f0fb274cb2.csproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHCYYlwAAAAAAAAAAOAAAiELAQsAACwAAAAIAAAAAAAAbkoA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABhKAABTAAAAAGAAALgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdCoAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAALgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
SgAAAAAAAEgAAAACAAUAXCoAALwfAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgBCAgAAAQAAEQIoDQAACm8OAAAKcgEAAHBvDwAACm8Q
AAAKdBcAAAEKAigNAAAKbw4AAApyLwAAcG8PAAAKbxAAAAp0FwAAAQsCKA0AAApvDgAACnJbAABw
bw8AAApvEAAACnQXAAABDAIoDQAACm8OAAAKcoUAAHBvDwAACm8QAAAKpRgAAAENAigNAAAKbw4A
AApypQAAcG8PAAAKbxAAAAp0FwAAARMEAigNAAAKbw4AAApyxQAAcG8PAAAKbxAAAApvEQAACigS
AAAKEwURBCwXEQRy9QAAcCgTAAAKLQkRBCgUAAAKKwpy9wAAcCgUAAAKEwYCKA0AAApvDgAACnL7
AABwbw8AAAoWjBgAAAFvFQAACgIHKAgAAAYLAgcoCQAABgsIJRMJLGwRCXIdAQBwKBMAAAotHhEJ
cisBAHAoEwAACi0aEQlyMwEAcCgTAAAKLSUrQAIGBygCAAAGK1cCckcBAHAGKAQAAAYTBwIRBwco
BgAABis+AnJHAQBwBigDAAAGEwgCEQgHEQYRBSgFAAAGKyECKA0AAApvFgAAChZ+FwAACnJbAQBw
fhcAAAoWbxgAAAoCKA0AAApvDgAACnL7AABwbw8AAAoWjBgAAAFvFQAACgJyRwEAcAkHKBkAAAoo
BwAABgIoDQAAChZvGgAACt5QJgIoDQAACm8WAAAKFn4XAAAKcoMBAHB+FwAAChZvGAAACgIoDQAA
Cm8OAAAKcvsAAHBvDwAACheMGAAAAW8VAAAKAigNAAAKFm8aAAAK3gAqAAABEAAAAAAeAdPxAVAd
AAABGzADAJwAAAACAAARAy0LcmgCAHBzGwAACnoELQtycAIAcHMbAAAKegQoGQAACigcAAAKLQwE
KBkAAAooHQAACiYDKB4AAAp0IgAAAQoGIIDuNgBvHwAACgYggO42AG8gAAAKBhdvIQAACgZvIgAA
Ch8XcogCAHBvIwAACgZvJAAACnQmAAABCwQoJQAACgwHbyYAAAoIbycAAAreCggsBghvKAAACtwq
ARAAAAIAgwAOkQAKAAAAABswAgCbAAAAAwAAEQMtC3KmAgBwcxsAAAp6BC0LctICAHBzGwAACnoC
KA0AAApvKQAACgNvKgAACgIoDQAACm8rAAAKbywAAAoKBnUtAAABCwdvLQAACgwIBG8uAAAKCBdv
LwAACnMwAAAKDQkIbzEAAApvMgAACgkTBd4nCCwGCG8oAAAK3BMEEQR6AigNAAAKbykAAAoDbyoA
AAoHbzMAAArcEQUqAAEoAAACAEwAJXEACgAAAAAAAEUANnsABR0AAAECAEUAO4AAGAAAAAAbMAIA
kQAAAAQAABEDLQtypgIAcHMbAAAKegQtC3LSAgBwcxsAAAp6AigNAAAKbykAAAoDbyoAAAoCKA0A
AApvKwAACm8sAAAKCgZ1LQAAAQsHby0AAAoMCARvLgAACggXby8AAAoIbzQAAAp1FwAAARME3iUI
LAYIbygAAArcDQl6AigNAAAKbykAAAoDbyoAAAoHbzMAAArcEQQqAAAAASgAAAIATAAdaQAKAAAA
AAAARQAucwADHQAAAQIARQAxdgAYAAAAABswBgBjAQAABQAAEQNvNQAACm82AAAKLSICKA0AAApv
FgAAChZ+FwAACnLiAgBwfhcAAAoWbxgAAAoqBCgZAAAKKBwAAAotDAQoGQAACigdAAAKJgQoNwAA
CgoOBCxUFgsrQgcDbzUAAApvNgAAChdZMg4GbzgAAAoWbzkAAAorAQUMBgNvNQAACgdvOgAACm87
AAAKbzwAAAoGCG89AAAKBxdYCwcDbzUAAApvNgAACjKwA28+AAAKbz8AAAoTByt9EQdvQAAACnQ6
AAABDRYTBCtcEQQDbzUAAApvNgAAChdZMg4GbzgAAAoWbzkAAAorAQUTBQkRBG9BAAAKKEIAAAot
HQkRBG9BAAAKbxEAAAoFKAoAAAYTBgYRBm88AAAKBhEFbz0AAAoRBBdYEwQRBANvNQAACm82AAAK
MpURB29DAAAKOnf////eFREHdSoAAAETCBEILAcRCG8oAAAK3N4KBiwGBm8oAAAK3CoAQTQAAAIA
AAC0AAAAjQAAAEEBAAAVAAAAAAAAAAIAAABPAAAACQEAAFgBAAAKAAAAAAAAAJIELQtycAIAcHMb
AAAKegMtC3I2AwBwcxsAAAp6BAMoRAAACioAAAAbMAMAngAAAAYAABECKA0AAApvKQAACgNvKgAA
CgIoDQAACm8rAAAKbywAAAoKBnUtAAABCwdvLQAACgwIckADAHBvLgAACghvRQAACnIDBABwBW9G
AAAKJghvRQAACnIfBABwBIwYAAABb0YAAAomCBdvLwAACghvRwAACibeCggsBghvKAAACtzeAw0J
et4YAigNAAAKbykAAAoDbyoAAAoHbzMAAArcKgAAASgAAAIAMABEdAAKAAAAAAAAKQBXgAADHQAA
AQIAKQBchQAYAAAAAB4CKEgAAAoqEzACAKcAAAAHAAARA29JAAAKF29KAAAKb0sAAAp+FwAACihM
AAAKLRMDb0kAAAoZb0oAAApvSwAACisRA29JAAAKF29KAAAKb0sAAAoKA29JAAAKGG9KAAAKb0sA
AAp+FwAACihMAAAKLQdyNQQAcCsRA29JAAAKGG9KAAAKb0sAAAoLAnsKAAAEBm9NAAAKLQtySwQA
cHNOAAAKegJ7CgAABAZvTwAACgwSAgcoUAAACioAEzAGAKAAAAAIAAARcxMAAAYTBChRAAAKChEE
c1IAAAoNCXKfBABwBm9TAAAKCXLDBABwEgAoVAAAChMFEgUjAAAAAAAA8L8oVQAACm9TAAAKCXLX
BABwEgAoVgAAChIAKFcAAAoXc1gAAAoTBhIGIwAAAAAAAPC/KFUAAApvUwAACgl9CgAABHLxBABw
HwlzWQAACgsHAxEE/gYUAAAGc1oAAApvWwAACgwIKhMwAwAsAAAACQAAEQMoXAAACgoDKBkAAAoL
cjcFAHAGKF0AAApvXgAACihfAAAKDAcIKGAAAAoqEzACAJsAAAAKAAARAg8BKGEAAApvYgAACi0n
AnI7BQBwb2IAAAotGgJyPwUAcG9iAAAKLQ0CckMFAHBvYgAACisBFwoGLF5zYwAACgsHcjsFAHBv
ZAAACiYCDRYTBCsoCREEbzkAAAoMBwhvZQAACiYIHyIzDAdyOwUAcG9kAAAKJhEEF1gTBBEECW9m
AAAKMs4HcjsFAHBvZAAACiYHbxEAAAoqAioeAihnAAAKKhp+BwAABCoucw0AAAaABwAABCoeAihp
AAAKKh4CKEgAAAoqAAATMAIALQAAAAsAABF+CAAABC0gckcFAHDQBQAAAihsAAAKb20AAApzbgAA
CgoGgAgAAAR+CAAABCoafgkAAAQqHgKACQAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAABYCAAAI34AAMQIAAAoDQAAI1N0cmluZ3MAAAAA7BUAAMgFAAAjVVMAtBsAABAAAAAj
R1VJRAAAAMQbAAD4AwAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAgAAAPolMwAWAAABAAAAUAAAAAYA
AAAKAAAAFAAAABUAAABvAAAABQAAABEAAAALAAAAAgAAAAMAAAAEAAAAAQAAAAEAAAAFAAAAAgAA
AAAACgABAAAAAAAGAAcB3gAKADMBLAEOAE0BOAEKAGUBLAESAMUBuQEKAKACjwIKANECvAIKALID
oAMKAMkDoAMKAOYDoAMKAAUEoAMKAB4EoAMKADcEoAMKAFIEoAMKAG0EoAMKAIYEoAMKAL8EnwQK
AN8EnwQGACgF3gAGAEoF3gAWAKMFgwUWALsFgwUKANcFLAEKAN4FLAEKAO0FLAEKAAcGLAEGACAG
3gAKAFsGUQYKAIAGLAEKAIoGLAEKAKAGUQYKALEGUQYOANoGzwYOAOwGzwYOADYHzwYOAFYHzwYO
AGwHzwYOAIQHzwYKAJQHUQYKAJkHUQYKAK4HUQYKAM4HLAEWAOIHgwUWAP4HgwUSAEgIMggSAFYI
MggSAIIIbwgSAJwIuQESALgIMggSANQIuQESAAUJuQESACYJuQEKAEsJUQYKAGMJUQYSAIQJuQES
AKQJuQEKANIJvwkSAPgJuQESAB8KMggSAEUKMggKAJ0KggoKAKoKLAEOAN8KwAoOAP8KwAoOABoL
wAoOACALwAoKAEILLAEOAIgLwAoOAI4LwAoOAJsLwAoKAOkLLAEKAAMM9wsKACMMnwQOAF0MRQwK
AIcMdAwKAKQMLAEKAKkMLAEKAM0MoAMOAPkM4wwOABIN4wwAAAAAAQAAAAAAAQABAAEAEAA5AEQA
BQABAAEAAwEAAGgAAAAJAAQADAAAARAAdgB/AA0ABwAMAAAAEAC1AH8AEQAIAA8AAwEQAG8KAAAR
AAoAEwBRgGwBEwBRgIQBKQBRgJEBEwAGBlMCKQBWgFsCeABWgGMCeAARAGsChgARALAClAARAN0C
mAAGALMKDgJQIAAAAACGAKUBRgABALAiAAAAAIEAqgFKAAEAaCMAAAAAgQDPAVAAAwA4JAAAAACB
AN4BVwAFAAAlAAAAAIEA8gFdAAcApCYAAAAAgQAAAkoACwDMJgAAAACBAAgCZgANAFwoAAAAAIEA
FAJtABAACCkAAAAAgQAmAm0AEQBAKQAAAACWADcCcgASAOcpAAAAAIYYTQJGABQA7ykAAAAAlgh7
AooAFAACKgAAAACGGE0CRgAUAPYpAAAAAJEYPgzbAhQACioAAAAAgxhNAkYAFAAUKgAAAACTCO0C
nAAUAE0qAAAAAJMIAQOhABQAVCoAAAAAkwgNA6YAFACgJwAAAACGGE0CRgAVAKgnAAAAAIYA5QoZ
AhUAAAABACEDAAACACUDAAABADEDAAACAEcDAAABADEDAAACAEcDAAABAE8DAAACACUDAAADAFUD
AAAEAF8DAAABAHEDAAACACUDAAABADEDAAACAHYDAAADAIADAAABAIkDAAABAIkDAAABAJYDAAAC
AFUDAAABAJoDAAABAP0KQQBNArYASQBNArYAUQBNArYAWQBNArYAYQBNArYAaQBNArYAcQBNArYA
eQBNArYAgQBNArYAiQBNArsAkQBNAkYAmQBNAkYACQBcBcAAoQCtBcUAqQDEBcoAsQDNBdAAIQDk
BdQAyQD1BdgAuQD7Bd0A0QAPBuMAsQAWBugAoQA0Bu0AuQA/BhMA2QBFBvIA4QBgBvsAoQBxBrsA
8QBNArYA+QCqBtgA+QC/Bg4BCQHlBhUBCQH7BrsAEQEHB7sACQEcBxwBCQFKByEBGQFoBycBCQF4
By8BOQGkBzUBKQG1BzwBSQHHB0IBUQHaB0YAoQDuB1UBWQHEBVsBoQAQCNAAYQEgCGIBaQFhCGcB
eQGMCLYAeQGoCG0BKQBNAkYAcQHGCHQBKQDgCHoBYQHlCOgAeQH3CNAAKQAaCZ4BoQFBCaQBOQFY
CagBsQFuCdQAuQB6Ca8BmQHEBbQBuQGPCdQAsQGeCbYAsQGeCbsBKQC2CcABoQHeCcYByQHsCdAA
0QHEBcwB0QAACtEByQEJCtYBOQESCu4BcQE2CvQB2QFSCvoBeQFfCqQBIQBNAkYA+QEPCyACAQLE
BSYCEQLNBdQAuQAoC90ADAA2CzcCGQJNArYADADEBT0C8QHkBW0A8QFcC0wCDABNAkYADABoB1IC
8QFkC1oC8QFtC2AC8QF1C6QB8QF+C6QB8QFNAmcCIQJNAm4CMQJNAnYCIQKqC3wC4QCyC/sA4QC+
C58CuQDWC6QCuQDcC6sC4QDhC7ICOQLkBdQAuQDuC74CQQJNAkYAQQIRDMMCQQIRDMoCuQAYDKQB
CQBNAkYASQJNAkYAGQBNAkYAUQJNAkoAWQJNAkYAYQK7DCADYQLWDCkDMQBNAi8DeQJNAjwDDgAE
ABYACAAIACwADgAMADEACAAUAHwACAAYAIEALgALAEwDLgBbANcDLgATAHUDLgAbAHUDLgAjAHsD
LgArAEwDLgAzAJwDLgA7AHUDLgBTAM4DQwBjAIEASQB7A0MDaQB7A0MDowBbA4EAowBTA98CowBD
A4EAwwBDA4EA4QBDA4EAAAFJAYEBkQHaAQICRAKEArgC0QI3AwQAAQAFAAIAAACHAo8AAACgAqwA
AAAZA7EAAgAMAAMAAgAQAAUAAgARAAcAAQASAAcALQIEgAAAAQAAAEYbzI8AAAAAAAD9BAAADgAA
AAAAAAAAAAAAAQC/AAAAAAAEAAAAAAAAAAAAAAAKACMBAAAAAAQAAAAAAAAAAAAAAAoALAEAAAAA
BAAAAAAAAAAAAAAACgC5AQAAAAAOAAAAAAAAAAAAAAABAGQFAAAAAAMAAgAGAAIAAAAAPE1vZHVs
ZT4Ac3BfNzVjNjVkNTk0ZmE1NDA0YmEzMzA1NGYwZmIyNzRjYjIuY3Nwcm9qLmRsbABTY3JpcHRN
YWluAFNUXzMyY2MxMTU4ZDI4YzQxZDM5NmE4MmYyOTJhYjVhNzRhAFNjcmlwdFJlc3VsdHMAU2V0
dGluZ3MAc3BfNzVjNjVkNTk0ZmE1NDA0YmEzMzA1NGYwZmIyNzRjYjIuY3Nwcm9qLlByb3BlcnRp
ZXMAUmVzb3VyY2VzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBt
c2NvcmxpYgBTeXN0ZW0ARW51bQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBPYmplY3QAQ09OTkVDVElPTl9NQU5BR0VSX05BTUUAVElNRU9VVF9IT1VSAERFRkFV
TFRfREFURV9GT1JNQVQATWFpbgBEb3dubG9hZFJlcG9ydABTeXN0ZW0uRGF0YQBEYXRhVGFibGUA
RmV0Y2hEYXRhVGFibGUARmV0Y2hTY2FsYXJBc1N0cmluZwBTYXZlRGVsaW1pdGVkAFNhdmVYTUwA
U2V0RmlsZW5hbWUAUmVwbGFjZVRpbWVzdGFtcHMAU2FuaXRpc2VGaWxlbmFtZQBTYW5pdGlzZURl
bGltaXRlZENlbGwALmN0b3IAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVz
b3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJl
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQB1cmwA
ZGVzdGluYXRpb24AY29ubmVjdGlvbk1hbmFnZXJOYW1lAGNvbW1hbmQAdGFibGUAZGVsaW1pdGVy
AGluY2x1ZGVGaWxlSGVhZGVyAHRleHQAZW50aXR5S2V5AGZpbGVuYW1lAGFic29sdXRlUGF0aABz
dHIAdmFsdWUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVy
ZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAHNwXzc1YzY1ZDU5NGZhNTQwNGJhMzMwNTRmMGZiMjc0Y2IyLmNzcHJv
agBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0
X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRf
VmFsdWUAU3RyaW5nAEludDMyAFRvU3RyaW5nAEJvb2xlYW4AUGFyc2UAb3BfRXF1YWxpdHkAQ29u
dmVydABUb0NoYXIAc2V0X1ZhbHVlAEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X0V2ZW50cwBFbXB0
eQBGaXJlV2FybmluZwBTeXN0ZW0uSU8AUGF0aABHZXREaXJlY3RvcnlOYW1lAHNldF9UYXNrUmVz
dWx0AEV4Y2VwdGlvbgBBcmd1bWVudE51bGxFeGNlcHRpb24ARGlyZWN0b3J5AEV4aXN0cwBEaXJl
Y3RvcnlJbmZvAENyZWF0ZURpcmVjdG9yeQBTeXN0ZW0uTmV0AFdlYlJlcXVlc3QAQ3JlYXRlAEh0
dHBXZWJSZXF1ZXN0AHNldF9UaW1lb3V0AHNldF9SZWFkV3JpdGVUaW1lb3V0AHNldF9Vc2VEZWZh
dWx0Q3JlZGVudGlhbHMAV2ViSGVhZGVyQ29sbGVjdGlvbgBnZXRfSGVhZGVycwBIdHRwUmVxdWVz
dEhlYWRlcgBBZGQAV2ViUmVzcG9uc2UAR2V0UmVzcG9uc2UASHR0cFdlYlJlc3BvbnNlAEZpbGUA
RmlsZVN0cmVhbQBPcGVuV3JpdGUAU3RyZWFtAEdldFJlc3BvbnNlU3RyZWFtAENvcHlUbwBJRGlz
cG9zYWJsZQBEaXNwb3NlAENvbm5lY3Rpb25zAGdldF9Db25uZWN0aW9ucwBDb25uZWN0aW9uTWFu
YWdlcgBnZXRfVHJhbnNhY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AU3lzdGVtLkRhdGEuU3FsQ2xp
ZW50AFNxbENvbm5lY3Rpb24AU3FsQ29tbWFuZABDcmVhdGVDb21tYW5kAFN5c3RlbS5EYXRhLkNv
bW1vbgBEYkNvbW1hbmQAc2V0X0NvbW1hbmRUZXh0AENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlw
ZQBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIASURhdGFSZWFkZXIATG9hZABSZWxlYXNlQ29u
bmVjdGlvbgBFeGVjdXRlU2NhbGFyAERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9Db2x1bW5zAElu
dGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAGdldF9Db3VudABTdHJlYW1Xcml0ZXIAQ3JlYXRlVGV4
dABUZXh0V3JpdGVyAGdldF9OZXdMaW5lAGdldF9DaGFycwBEYXRhQ29sdW1uAGdldF9Db2x1bW5O
YW1lAFdyaXRlAERhdGFSb3dDb2xsZWN0aW9uAGdldF9Sb3dzAFN5c3RlbS5Db2xsZWN0aW9ucwBJ
RW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AERhdGFSb3cASXNEQk51bGwATW92
ZU5leHQAV3JpdGVBbGxUZXh0AFNxbFBhcmFtZXRlckNvbGxlY3Rpb24AZ2V0X1BhcmFtZXRlcnMA
U3FsUGFyYW1ldGVyAEFkZFdpdGhWYWx1ZQBFeGVjdXRlTm9uUXVlcnkAPD5jX19EaXNwbGF5Q2xh
c3MyAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAERpY3Rpb25hcnlgMgBEYXRlVGltZQByZXBs
YWNlbWVudHMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAE1hdGNoADxSZXBsYWNlVGlt
ZXN0YW1wcz5iX18xAG0AR3JvdXBDb2xsZWN0aW9uAGdldF9Hcm91cHMAR3JvdXAAQ2FwdHVyZQBv
cF9JbmVxdWFsaXR5AENvbnRhaW5zS2V5AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AZ2V0X05v
dwBnZXRfRGF0ZQBBZGREYXlzAGdldF9ZZWFyAGdldF9Nb250aABSZWdleABSZWdleE9wdGlvbnMA
TWF0Y2hFdmFsdWF0b3IAUmVwbGFjZQBHZXRGaWxlTmFtZQBHZXRJbnZhbGlkRmlsZU5hbWVDaGFy
cwBTcGxpdABKb2luAENvbWJpbmUAQ2hhcgBDb250YWlucwBTeXN0ZW0uVGV4dABTdHJpbmdCdWls
ZGVyAEFwcGVuZABnZXRfTGVuZ3RoAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBT
eXN0ZW0uQ29kZURvbS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFn
bm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25l
bnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAAAAt
VQBzAGUAcgA6ADoAQwBvAG0AbQBhAG4AZABUAG8ARQB4AGUAYwB1AHQAZQAAK1UAcwBlAHIAOgA6
AEYAaQBsAGUARABlAHMAdABpAG4AYQB0AGkAbwBuAAApVQBzAGUAcgA6ADoARQBuAHQAaQB0AHkA
VAB5AHAAZQBOAGEAbQBlAAAfVQBzAGUAcgA6ADoARQBuAHQAaQB0AHkASwBlAHkAAB9VAHMAZQBy
ADoAOgBEAGUAbABpAG0AaQB0AGUAcgAAL1UAcwBlAHIAOgA6AEkAbgBjAGwAdQBkAGUARgBpAGwA
ZQBIAGUAYQBkAGUAcgAAAQADLAAAIVUAcwBlAHIAOgA6AEUAeABpAHQAUwB0AGEAdAB1AHMAAA1S
AGUAcABvAHIAdAAAB1gATQBMAAATRABlAGwAaQBtAGkAdABlAGQAABNFAHQAbABEAEIAXwBBAEQA
TwAAJ0kAbgB2AGEAbABpAGQAIABFAG4AdABpAHQAeQAgAFQAeQBwAGUAAIDjQQBuACAAZQByAHIA
bwByACAAbwBjAGMAdQByAHIAZQBkACAAcAByAG8AYwBlAHMAcwBpAG4AZwAgAEUAeABwAG8AcgB0
ACAAewBlAG4AdABpAHQAeQBLAGUAeQB9ACwAIABhAG4AZAAgAGkAdAAgAHcAYQBzACAAbgBvAHQA
IABhAGIAbABlACAAdABvACAAYgBlACAAZwBlAG4AZQByAGEAdABlAGQALgAgAEUAcgByAG8AcgAg
AG0AZQBzAHMAYQBnAGUAOgAgAHsAZQB4AC4ATQBlAHMAcwBhAGcAZQB9AAAHdQByAGwAABdkAGUA
cwB0AGkAbgBhAHQAaQBvAG4AAB1lAG4ALQBBAFUALABlAG4AOwBxAD0AMAAuADkAAStjAG8AbgBu
AGUAYwB0AGkAbwBuAE0AYQBuAGEAZwBlAHIATgBhAG0AZQAAD2MAbwBtAG0AYQBuAGQAAFNUAGEA
YgBsAGUAIABoAGEAcwAgAG4AbwAgAGMAbwBsAHUAbQBuAHMALgAgAE4AbwAgAGYAaQBsAGUAIABp
AHMAIABjAHIAZQBhAHQAZQBkAC4AAAl0AGUAeAB0AACAwVUAUABEAEEAVABFACAARABhAHQAYQBF
AHgAcABvAHIAdAAuAEUAbgB0AGkAdAB5ACAAUwBFAFQAIABNAG8AcwB0AFIAZQBjAGUAbgB0AEYA
aQBsAGUATABvAGMAYQB0AGkAbwBuACAAPQAgAEAARgBpAGwAZQBMAG8AYwBhAHQAaQBvAG4AIABX
AEgARQBSAEUAIABFAG4AdABpAHQAeQBLAGUAeQAgAD0AIABAAEUAbgB0AGkAdAB5AEsAZQB5AAAb
QABGAGkAbABlAEwAbwBjAGEAdABpAG8AbgAAFUAARQBuAHQAaQB0AHkASwBlAHkAABV5AHkAeQB5
AC0ATQBNAC0AZABkAAFTQwBhAG4AbgBvAHQAIABsAG8AYwBhAHQAZQAgAHsAawBlAHkAfQAgAGkA
bgAgAHQAaABlACAAcABhAHIAYQBtAGUAdABlAHIAIABsAGkAcwB0AAAjQwBVAFIAUgBFAE4AVABf
AFQASQBNAEUAUwBUAEEATQBQAAATRABBAFQAQQBfAEQAQQBUAEUAABlQAFIARQBWAEkATwBVAFMA
XwBFAE8ATQAARXsAKABbAF4AfQBdAC4AKgA/ACkAOgAoAFsAXgB9AF0ALgAqAD8AKQA/AH0AfAB7
ACgAWwBeAH0AXQAuACoAPwApAH0AAANfAAADIgAAAw0AAAMKAAB/cwBwAF8ANwA1AGMANgA1AGQA
NQA5ADQAZgBhADUANAAwADQAYgBhADMAMwAwADUANABmADAAZgBiADIANwA0AGMAYgAyAC4AYwBz
AHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAACZNbmp
2WOvSKvr1HhcOeCsAAiJhF3NgIDMkQi3elxWGTTgiQIGDhJFAHQAbABEAEIAXwBBAEQATwACBggE
gO42ABR5AHkAeQB5AC0ATQBNAC0AZABkAAMgAAEFIAIBDg4GIAISFQ4OBSACDg4OCCAEARIVDgMC
BiADAQ4IDgQgAQ4OBQACDg4DAwYRDAQAAAAABAEAAAADBhIQBAAAEhAECAASEAMGEhkDBhIdBAAA
EhkEAAASHQUAAQESHQQIABIZBAgAEh0EIAEBDgQgAQEIBCAAElEEIAASVQUgARJZHAMgABwDIAAO
BAABAg4FAAICDg4EAAEDDgQgAQEcBCAAEm0IIAUBCA4ODggEAAEODg0HCg4ODggOAgMOEhUOBgAB
EoCBDgYAARKAhQ4EIAEBAgUgABKAjQcgAgERgJEOBSAAEoCVBgABEoChDgUgABKApQYgAQESgKUL
BwMSgIkSgJkSgKUFIAASgK0GIAESgLEcBCABHBwFIAASgLkGIAEBEYDBBSAAEoDFBiABARKAyQ8H
BhwSgLUSgLkSFRJ1EhUMBwUcEoC1EoC5EnUOBSAAEoDNAyAACAYAARKA1Q4EIAEDCAYgARKA3QgE
IAEBAwUgABKA4QUgABKA5QQgARwIBAABAhwDIAACEwcJEoDVCAMSgOkIAw4SgOUSgKkFAAIBDg4F
IAASgO0HIAISgPEOHAsHBBwSgLUSgLkSdQoGFRKA9QIOEYD5BiABDhKA/QUgABKBAQYgARKBBQgJ
FRKA9QIOEYD5BSABAhMABiABEwETAAcHAw4OEYD5BQAAEYD5ByACARMAEwEFIAARgPkGIAERgPkN
BiADAQgICAcgAgEOEYEVBSACARwYByACDg4SgRkaBwcRgPkSgREOFRKA9QIOEYD5EhgRgPkRgPkE
AAAdAwYgAR0OHQMGAAIODh0OBQACDg4OBQcDDg4OBCABAg4GIAESgSEOBiABEoEhAwkHBQISgSED
DggDAAABQAEAM1N5c3RlbS5SZXNvdXJjZXMuVG9vbHMuU3Ryb25nbHlUeXBlZFJlc291cmNlQnVp
bGRlcgcyLjAuMC4wAAAIAAESgTERgTUFIAASgTkHIAIBDhKBOQQHARIZBiABARGBQQgBAAIAAAAA
ACgBACNTVF8zMmNjMTE1OGQyOGM0MWQzOTZhODJmMjkyYWI1YTc0YQAABQEAAAAAIAEAG1Blb3Bs
ZXMgQ2hvaWNlIENyZWRpdCBVbmlvbgAAMQEALENvcHlyaWdodCBAIFBlb3BsZXMgQ2hvaWNlIENy
ZWRpdCBVbmlvbiAyMDE4AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
AABASgAAAAAAAAAAAABeSgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUEoAAAAAAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAABgBAAA
AAAAAAAAAABgBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAzI9GGwAAAQDMj0YbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEwAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAnAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
WAAcAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABQAGUAbwBwAGwAZQBzACAAQwBoAG8AaQBj
AGUAIABDAHIAZQBkAGkAdAAgAFUAbgBpAG8AbgAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkA
cAB0AGkAbwBuAAAAAABTAFQAXwAzADIAYwBjADEAMQA1ADgAZAAyADgAYwA0ADEAZAAzADkANgBh
ADgAMgBmADIAOQAyAGEAYgA1AGEANwA0AGEAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4ANgA5ADgAMgAuADMANgA4ADEAMgAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABzAHAAXwA3ADUAYwA2ADUAZAA1ADkANABmAGEANQA0ADAANABiAGEAMwAzADAA
NQA0AGYAMABmAGIAMgA3ADQAYwBiADIALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAACAAC0AAQBM
AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABQAGUA
bwBwAGwAZQBzACAAQwBoAG8AaQBjAGUAIABDAHIAZQBkAGkAdAAgAFUAbgBpAG8AbgAgADIAMAAx
ADgAAAAAAIgALwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHAAXwA3ADUA
YwA2ADUAZAA1ADkANABmAGEANQA0ADAANABiAGEAMwAzADAANQA0AGYAMABmAGIAMgA3ADQAYwBi
ADIALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADMAMgBjAGMAMQAxADUAOABkADIAOABjADQAMQBkADMAOQA2AGEAOAAyAGYAMgA5
ADIAYQBiADUAYQA3ADQAYQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgA5ADgAMgAuADMANgA4ADEAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgA5ADgAMgAuADMANgA4ADEAMgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAcDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                        </ScriptProject>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Set dependency 2"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:Disabled="True"
                      DTS:DTSID="{98CD480B-426E-4D06-AC71-D7CAB3661BAC}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Set dependency 2"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="1">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="Disable">LEN(@[User::DependencyEntityToSet]) == 0</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="EXEC Dependency.up_SetReadyStatus ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@EntityCode"
                            SQLTask:DtsVariableName="User::DependencyEntityToSet"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@PackageExecutionID"
                            SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Set entity processing status 2"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:DTSID="{00B30C1B-440F-4C00-AA39-77610AEC1F57}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Set entity processing status 2"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="1">
                      <DTS:Variables />
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="EXEC Process.up_SetEntityProcessingSuccess ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@EntityKey"
                            SQLTask:DtsVariableName="User::EntityKey"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Set to complete and Notify"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:DTSID="{7790D51C-BF19-4937-9B28-48787ADADD91}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Set to complete and Notify"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="1">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="Disable">@[User::ExitStatus] != 0</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="EXEC DataExport.up_NotifyDataExportComplete ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@EntityKey"
                            SQLTask:DtsVariableName="User::EntityKey"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                  </DTS:Executables>
                  <DTS:PrecedenceConstraints>
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2.PrecedenceConstraints[Constraint_Pause 2_To_Script Task]"
                      DTS:CreationName=""
                      DTS:DTSID="{267AE900-D408-4E77-A969-DF20A57F2FCD}"
                      DTS:From="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Pause 2"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Pause 2_To_Script Task"
                      DTS:To="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Script Task" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2.PrecedenceConstraints[Constraint_Script Task_To_Set to complete and Notify]"
                      DTS:CreationName=""
                      DTS:DTSID="{86F00AB2-E312-4C53-84B6-9CC73A9E387E}"
                      DTS:From="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Script Task"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Script Task_To_Set to complete and Notify"
                      DTS:To="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Set to complete and Notify" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2.PrecedenceConstraints[Constraint_Set entity processing status 2_To_Set dependency 2]"
                      DTS:CreationName=""
                      DTS:DTSID="{445ADFFD-849F-489E-9A6B-F7C92BF7C6FC}"
                      DTS:From="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Set entity processing status 2"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Set entity processing status 2_To_Set dependency 2"
                      DTS:To="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Set dependency 2" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2.PrecedenceConstraints[Constraint_Set to complete and Notify_To_Set entity processing status 2]"
                      DTS:CreationName=""
                      DTS:DTSID="{963FDD34-0E1B-442E-A407-95E92F39F8A6}"
                      DTS:From="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Set to complete and Notify"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Set to complete and Notify_To_Set entity processing status 2"
                      DTS:To="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Set entity processing status 2" />
                  </DTS:PrecedenceConstraints>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Update parallel execution control 2"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:DTSID="{155F613F-51C2-48B3-AB61-5CA475B5B5A5}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update parallel execution control 2"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                      SQLTask:SqlStatementSource="EXEC Process.up_UpdateParallelExecutionControl @ExecutionInstanceGUID = ?, @ParallelLegNumber = 2, @KeyCurrentlyBeingProcessed = ?"
                      SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="AreAnyParallelLegsStillProcessing"
                        SQLTask:DtsVariableName="User::AreAnyParallelLegsStillProcessing" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="@ExecutionInstanceGUID"
                        SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="@KeyCurrentlyBeingProcessed"
                        SQLTask:DtsVariableName="User::EntityKey"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2.PrecedenceConstraints[Constraint_Get next entity To process 2_To_Update parallel execution control 2]"
                  DTS:CreationName=""
                  DTS:DTSID="{45A58D8B-4186-430D-98D2-06C10C421373}"
                  DTS:From="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Get next entity To process 2"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint_Get next entity To process 2_To_Update parallel execution control 2"
                  DTS:To="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Update parallel execution control 2" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Main Flow\Parallel Leg 2\While more entities to process 2.PrecedenceConstraints[Constraint_Process Entity 2_To_Get next entity To process 2]"
                  DTS:CreationName=""
                  DTS:DTSID="{8E22CF7A-4B5B-49D8-A65E-21C078505D5C}"
                  DTS:From="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint_Process Entity 2_To_Get next entity To process 2"
                  DTS:To="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Get next entity To process 2" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Main Flow\Parallel Leg 2.PrecedenceConstraints[Constraint_Get Initial Entity To Process 2_To_Update Parallel Execution Control 2]"
              DTS:CreationName=""
              DTS:DTSID="{2B06B27C-6B28-4738-8F9E-3202E4BFB4C5}"
              DTS:From="Package\Main Flow\Parallel Leg 2\Get Initial Entity To Process 2"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint_Get Initial Entity To Process 2_To_Update Parallel Execution Control 2"
              DTS:To="Package\Main Flow\Parallel Leg 2\Update Parallel Execution Control 2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Main Flow\Parallel Leg 2.PrecedenceConstraints[Constraint_Update Parallel Execution Control 2_To_While more entities to process 2]"
              DTS:CreationName=""
              DTS:DTSID="{830B46A6-E752-4B40-8BBD-9F4CD0159090}"
              DTS:From="Package\Main Flow\Parallel Leg 2\Update Parallel Execution Control 2"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint_Update Parallel Execution Control 2_To_While more entities to process 2"
              DTS:To="Package\Main Flow\Parallel Leg 2\While more entities to process 2" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Main Flow\Parallel Leg 3"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Disabled="True"
          DTS:DTSID="{38DAE27E-8CF4-491E-B581-518568AE1BBE}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Parallel Leg 3">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{C91EF490-520D-47B7-B992-E38F71582595}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="User"
              DTS:ObjectName="AreAnyParallelLegsStillProcessing"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{1B5CCB76-7D72-4B43-A1FC-2AD8B4264265}"
              DTS:IncludeInDebugDump="2345"
              DTS:Namespace="User"
              DTS:ObjectName="DependencyEntityToSet"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="8"
                xml:space="preserve"></DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{DFC16309-C170-42E1-855D-C972DD3D2A90}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="User"
              DTS:ObjectName="EntityKey"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="3">-1</DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{FC5C6417-7554-4727-8C00-13D7094B5FEB}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="User"
              DTS:ObjectName="ExitStatus">
              <DTS:VariableValue
                DTS:DataType="3">0</DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{31E4314F-EB59-4FB3-9F39-FF1BB242384E}"
              DTS:IncludeInDebugDump="2345"
              DTS:Namespace="User"
              DTS:ObjectName="SqlStatement"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="8"
                xml:space="preserve"></DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:LoggingOptions
            DTS:LoggingMode="2" />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::NumberOfParallelExecutions] &lt; 3</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Main Flow\Parallel Leg 3\Get Initial Entity To Process 3"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:DTSID="{1F49084E-CFC6-4643-806F-3346806D5838}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Initial Entity To Process 3"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                  SQLTask:SqlStatementSource="EXEC Process.up_GetEntityToProcess ?, 3"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::EntityKey" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="1"
                    SQLTask:DtsVariableName="User::DependencyEntityToSet" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="2"
                    SQLTask:DtsVariableName="User::SqlStatement" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@EntityGroupKeyCommaSeparatedList"
                    SQLTask:DtsVariableName="$Package::EntityGroupKeyCommaSeparatedList"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Main Flow\Parallel Leg 3\Update Parallel Execution Control 3"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:DTSID="{D5F98F9C-0D7E-405F-AD5D-1F2622BC2A89}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update Parallel Execution Control 3"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                  SQLTask:SqlStatementSource="EXEC Process.up_UpdateParallelExecutionControl @ExecutionInstanceGUID = ?, @ParallelLegNumber = 3, @KeyCurrentlyBeingProcessed = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@ExecutionInstanceGUID"
                    SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@KeyCurrentlyBeingProcessed"
                    SQLTask:DtsVariableName="User::EntityKey"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3"
              DTS:CreationName="STOCK:FORLOOP"
              DTS:DTSID="{A5CD7D4C-6021-4D87-832A-02A93C7B04AC}"
              DTS:EvalExpression="@[User::AreAnyParallelLegsStillProcessing] == True"
              DTS:ExecutableType="STOCK:FORLOOP"
              DTS:LocaleID="-1"
              DTS:MaxConcurrent="1"
              DTS:ObjectName="While more entities to process 3">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:LoggingMode="2" />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Get next entity To process 3"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:DTSID="{3980302C-32B8-45D1-A452-F2336556BAFE}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Get next entity To process 3"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="2">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:LoggingMode="2" />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                      SQLTask:SqlStatementSource="EXEC Process.up_GetEntityToProcess ?, 3"
                      SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="0"
                        SQLTask:DtsVariableName="User::EntityKey" />
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="1"
                        SQLTask:DtsVariableName="User::DependencyEntityToSet" />
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="2"
                        SQLTask:DtsVariableName="User::SqlStatement" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="@EntityGroupKeyCommaSeparatedList"
                        SQLTask:DtsVariableName="$Package::EntityGroupKeyCommaSeparatedList"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3"
                  DTS:CreationName="STOCK:SEQUENCE"
                  DTS:DTSID="{039AC4F3-21EB-4D84-BFD2-AC359E187BCF}"
                  DTS:ExecutableType="STOCK:SEQUENCE"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Process Entity 3">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:LoggingMode="2" />
                  <DTS:PropertyExpression
                    DTS:Name="Disable">@[User::EntityKey] == 0</DTS:PropertyExpression>
                  <DTS:Executables>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Pause 3"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:DTSID="{E0283BBC-84F3-4ED5-A649-BE22F4F1ACC2}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Pause 3"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="2">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="Disable">@[User::EntityKey] &gt; 0</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="WAITFOR DELAY ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="0"
                            SQLTask:DtsVariableName="$Package::DelayToGetNextEntity"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="8" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Script Task"
                      DTS:CreationName="Microsoft.ScriptTask"
                      DTS:DTSID="{85493396-0300-4E9E-8996-B82832D44D62}"
                      DTS:ExecutableType="Microsoft.ScriptTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Script Task"
                      DTS:ThreadHint="2">
                      <DTS:Variables />
                      <DTS:ObjectData>
                        <ScriptProject
                          Name="sp_39fc180f53654d1192f10fa4824c68db"
                          VSTAMajorVersion="15"
                          VSTAMinorVersion="0"
                          Language="CSharp"
                          ReadOnlyVariables="User::CommandToExecute,User::Delimiter,User::EntityKey,User::EntityTypeName,User::FileDestination,User::IncludeFileHeader"
                          ReadWriteVariables="User::ExitStatus">
                          <ProjectItem
                            Name="Properties\resources.resx"
                            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string" />
                            <xsd:attribute name="type" type="xsd:string" />
                            <xsd:attribute name="mimetype" type="xsd:string" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string" />
                            <xsd:attribute name="name" type="xsd:string" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" />
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    </root>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\settings.designer.cs"
                            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_39fc180f53654d1192f10fa4824c68db.csproj.Properties.Settings.get_Default():sp_39fc180f53654d1192f10fa4824c68db.csproj.Properties.Settings")]

namespace sp_39fc180f53654d1192f10fa4824c68db.csproj.Properties
{

    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }

    }
}]]></ProjectItem>
                          <ProjectItem
                            Name="ScriptMain.cs"
                            Encoding="UTF8"><![CDATA[   #region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
#endregion

namespace ST_32cc1158d28c41d396a82f292ab5a74a
{

    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        const string CONNECTION_MANAGER_NAME = "EtlDB_ADO";
        const int TIMEOUT_HOUR = 1000 * 60 * 60;
        private const string DEFAULT_DATE_FORMAT = "yyyy-MM-dd";

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // User::CommandToExecute, User::EntityKey, User::EntityTypeName, User::FileDestination
            string command = (string)Dts.Variables["User::CommandToExecute"].Value;
            string destination = (string)Dts.Variables["User::FileDestination"].Value;
            string entityType = (string)Dts.Variables["User::EntityTypeName"].Value;
            int entityKey = (int)Dts.Variables["User::EntityKey"].Value;
            string delimiterString = (string)Dts.Variables["User::Delimiter"].Value;
            bool includeFileHeader = Boolean.Parse(Dts.Variables["User::IncludeFileHeader"].Value.ToString());

            // If delimiterString is NULL or empty, use a default of comma
            char delimiter = (delimiterString == null || delimiterString == "" ? Convert.ToChar(",") : Convert.ToChar(delimiterString));

            // Reset exit status
            Dts.Variables["User::ExitStatus"].Value = 0;

            // Add timestamp 
            destination = ReplaceTimestamps(destination);

            // Make sure the filename does not contain invalid characters
            destination = SanitiseFilename(destination);

            try
            {
                switch (entityType)
                {
                    case "Report":
                        DownloadReport(command, destination);
                        break;
                    case "XML":
                        var result = FetchScalarAsString(CONNECTION_MANAGER_NAME, command);
                        SaveXML(result, destination);
                        break;
                    case "Delimited":
                        var table = FetchDataTable(CONNECTION_MANAGER_NAME, command);
                        SaveDelimited(table, destination, delimiter, includeFileHeader);
                        break;
                    default:
                        Dts.Events.FireWarning(0, String.Empty, "Invalid Entity Type", String.Empty, 0);
                        break;
                }
                Dts.Variables["User::ExitStatus"].Value = 0;
                SetFilename(CONNECTION_MANAGER_NAME, entityKey, Path.GetDirectoryName(destination));
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireWarning(0, String.Empty, "An error occurred processing Export {entityKey}, and it was not able to be generated. Error message: {ex.Message}", String.Empty, 0);
                Dts.Variables["User::ExitStatus"].Value = 1;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
        }

        void DownloadReport(string url, string destination)
        {
            if (url == null) throw new ArgumentNullException("url");
            if (destination == null) throw new ArgumentNullException("destination");

            if (!Directory.Exists(Path.GetDirectoryName(destination)))
            {
                Directory.CreateDirectory(Path.GetDirectoryName(destination));
            }

            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
            request.Timeout = TIMEOUT_HOUR;
            request.ReadWriteTimeout = TIMEOUT_HOUR;
            request.UseDefaultCredentials = true;
            request.Headers.Add(HttpRequestHeader.AcceptLanguage, "en-AU,en;q=0.9");

            var response = (HttpWebResponse)request.GetResponse();

            using (Stream file = File.OpenWrite(destination))
            {
                response.GetResponseStream().CopyTo(file);
            }
        }

        DataTable FetchDataTable(string connectionManagerName, string command)
        {
            if (connectionManagerName == null) throw new ArgumentNullException("connectionManagerName");
            if (command == null) throw new ArgumentNullException("command");

            var connectionManager = Dts.Connections[connectionManagerName].AcquireConnection(Dts.Transaction);

            var connection = connectionManager as SqlConnection;
            try
            {
                using (var cmd = connection.CreateCommand())
                {
                    cmd.CommandText = command;
                    cmd.CommandType = CommandType.Text;
                    var table = new DataTable();
                    table.Load(cmd.ExecuteReader());
                    return table;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                Dts.Connections[connectionManagerName].ReleaseConnection(connection);
            }
        }

        string FetchScalarAsString(string connectionManagerName, string command)
        {
            if (connectionManagerName == null) throw new ArgumentNullException("connectionManagerName");
            if (command == null) throw new ArgumentNullException("command");

            var connectionManager = Dts.Connections[connectionManagerName].AcquireConnection(Dts.Transaction);

            var connection = connectionManager as SqlConnection;
            try
            {
                using (var cmd = connection.CreateCommand())
                {
                    cmd.CommandText = command;
                    cmd.CommandType = CommandType.Text;
                    return cmd.ExecuteScalar() as string;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                Dts.Connections[connectionManagerName].ReleaseConnection(connection);
            }
        }

        void SaveDelimited(DataTable table, string destination, char delimiter, bool includeFileHeader)
        {
            if (table.Columns.Count == 0)
            {
                /* Do not export data if column collection is empty */
                Dts.Events.FireWarning(0, string.Empty, "Table has no columns. No file is created.", string.Empty, 0);
                return;
            }

            if (!Directory.Exists(Path.GetDirectoryName(destination)))
            {
                Directory.CreateDirectory(Path.GetDirectoryName(destination));
            }

            using (StreamWriter sw = File.CreateText(destination))
            {
                if (includeFileHeader)
                {
                    /* Write header row */
                    for (int i = 0; i < table.Columns.Count; i++)
                    {
                        char delimiterOrNewline = (i < table.Columns.Count - 1 ? delimiter : sw.NewLine[0]);
                        sw.Write(table.Columns[i].ColumnName);
                        sw.Write(delimiterOrNewline);
                    }
                }

                /* Write Data */
                foreach (DataRow dr in table.Rows)
                {
                    for (int i = 0; i < table.Columns.Count; i++)
                    {
                        char delimiterOrNewline = (i < table.Columns.Count - 1 ? delimiter : sw.NewLine[0]);
                        if (!Convert.IsDBNull(dr[i]))
                        {
                            var cellValue = SanitiseDelimitedCell(dr[i].ToString(), delimiter);
                            sw.Write(cellValue);
                        }
                        sw.Write(delimiterOrNewline);
                    }
                }
            }
        }

        void SaveXML(string text, string destination)
        {
            if (destination == null) throw new ArgumentNullException("destination");
            if (text == null) throw new ArgumentNullException("text");

            File.WriteAllText(destination, text);
        }

        void SetFilename(string connectionManagerName, int entityKey, string filename)
        {
            var connectionManager = Dts.Connections[connectionManagerName].AcquireConnection(Dts.Transaction);

            var connection = connectionManager as SqlConnection;
            try
            {
                using (var cmd = connection.CreateCommand())
                {
                    cmd.CommandText = "UPDATE DataExport.Entity SET MostRecentFileLocation = @FileLocation WHERE EntityKey = @EntityKey";
                    cmd.Parameters.AddWithValue("@FileLocation", filename);
                    cmd.Parameters.AddWithValue("@EntityKey", entityKey);
                    cmd.CommandType = CommandType.Text;
                    cmd.ExecuteNonQuery();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                Dts.Connections[connectionManagerName].ReleaseConnection(connection);
            }
        }

        /*
         * Looks for predefined strings in the path and replaces it with a formatted timestamp
         * Markers are CURRENT_TIMESTAMP (replaced with the current date and time) and DATA_DATE (replaced with the previous business day);
         */
        string ReplaceTimestamps(string absolutePath)
        {
            var now = DateTime.Now;
            var replacements = new Dictionary<string, DateTime> { { "CURRENT_TIMESTAMP", now }, { "DATA_DATE", now.Date.AddDays(-1) }, { "PREVIOUS_EOM", (new DateTime(now.Year, now.Month, 1)).AddDays(-1) } };

            // invaluable - https://regex101.com
            var regex = new Regex("{([^}].*?):([^}].*?)?}|{([^}].*?)}", RegexOptions.Compiled | RegexOptions.IgnoreCase);
            var result = regex.Replace(absolutePath, delegate (Match m) {
                var key = m.Groups[1].Value != String.Empty ? m.Groups[1].Value : m.Groups[3].Value;
                var fmt = m.Groups[2].Value != String.Empty ? m.Groups[2].Value : DEFAULT_DATE_FORMAT;

                if (replacements.ContainsKey(key) == false) throw new InvalidOperationException("Cannot locate {key} in the parameter list");
                return replacements[key].ToString(fmt);
            });

            return result;
        }

        string SanitiseFilename(string absolutePath)
        {
            var filename = Path.GetFileName(absolutePath);
            var directory = Path.GetDirectoryName(absolutePath);

            var sanitisedFilename = string.Join("_", filename.Split(Path.GetInvalidFileNameChars()));

            return Path.Combine(directory, sanitisedFilename);
        }

        // Some guy on stack overflow says this always works.
        public static string SanitiseDelimitedCell(string str, char delimiter)
        {
            bool mustQuote = (str.Contains(delimiter.ToString()) || str.Contains("\"") || str.Contains("\r") || str.Contains("\n"));
            if (mustQuote)
            {
                StringBuilder sb = new StringBuilder();
                sb.Append("\"");
                foreach (char nextChar in str)
                {
                    sb.Append(nextChar);
                    if (nextChar == '"')
                        sb.Append("\"");
                }
                sb.Append("\"");
                return sb.ToString();
            }

            return str;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
                          <ProjectItem
                            Name="Project"
                            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{a369c657-4fbd-4de0-b34e-ce118be4e65a}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sp_39fc180f53654d1192f10fa4824c68db</msb:DisplayName>
		<msb:CodeName>sp_39fc180f53654d1192f10fa4824c68db</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
				<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
				<msb:File Include="Properties\Resources.Designer.cs"/>
				<msb:File Include="Properties\AssemblyInfo.cs"/>
				<msb:File Include="ScriptMain.cs"/>
								<msb:File Include="Properties\Settings.settings"/>
						<msb:Project Include="sp_39fc180f53654d1192f10fa4824c68db.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                          <ProjectItem
                            Name="sp_39fc180f53654d1192f10fa4824c68db.csproj"
                            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
	    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <OutputType>Library</OutputType>
        <RootNamespace>sp_39fc180f53654d1192f10fa4824c68db.csproj</RootNamespace>
        <AssemblyName>sp_39fc180f53654d1192f10fa4824c68db.csproj</AssemblyName>
        <ProjectGuid>{C792B577-3187-41B4-A778-35BF1292DEDE}</ProjectGuid>
		        <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
        <TargetFrameworkProfile></TargetFrameworkProfile>			    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
				        <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
        <NoStandardLibraries>false</NoStandardLibraries>
		    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
		        <DebugSymbols>true</DebugSymbols>
        <Optimize>false</Optimize>
        <OutputPath>.\bin\Debug\</OutputPath>
        <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <WarningLevel>4</WarningLevel>
		    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
		        <DebugSymbols>false</DebugSymbols>
        <Optimize>true</Optimize>
        <OutputPath>.\bin\Release\</OutputPath>
        <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
        <DefineConstants>TRACE</DefineConstants>
        <WarningLevel>4</WarningLevel>
		    </PropertyGroup>
    <PropertyGroup>
        <PreBuildEvent>
        </PreBuildEvent>
        <PostBuildEvent>
        </PostBuildEvent>
    </PropertyGroup>
    <ItemGroup>
                <Reference Include="System" />
                <Reference Include="System.Data" />
                <Reference Include="System.Windows.Forms" />
                <Reference Include="System.Xml" />
                <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL" />
                <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL" />
            </ItemGroup>
	    <ItemGroup>
        <Folder Include="Resources\" />
        <AppDesigner Include="Properties\" />
        <EmbeddedResource Include="Properties\Resources.resx">
						<Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>Resources.Designer.cs</LastGenOutput>
			        </EmbeddedResource>
        <Compile Include="Properties\Resources.Designer.cs">
            <AutoGen>True</AutoGen>
            <DependentUpon>Resources.resx</DependentUpon>
            <DesignTime>True</DesignTime>
        </Compile>
		        <None Include="Properties\Settings.settings">
            <Generator>SettingsSingleFileGenerator</Generator>
            <LastGenOutput>Settings.Designer.cs</LastGenOutput>
        </None>
        <Compile Include="Properties\Settings.Designer.cs">
            <AutoGen>True</AutoGen>
            <DependentUpon>Settings.settings</DependentUpon>
            <DesignTimeSharedInput>True</DesignTimeSharedInput>
        </Compile>

				<Compile Include="ScriptMain.cs">
			<SubType>Code</SubType>
		</Compile>
				<Compile Include="Properties\AssemblyInfo.cs">
			<SubType>Code</SubType>
		</Compile>
		
		
		
		
		    </ItemGroup>
		<!-- Include the build rules for a C# project.-->
    <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
		<!-- This section defines VSTA properties that describe the host-changable project properties. -->
    <ProjectExtensions>
        <VisualStudio>
            <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
                <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
                <Host Name="SSIS_ScriptTask" />
                <ProjectClient>
                    <HostIdentifier>SSIS_ST130</HostIdentifier>
                </ProjectClient>
            </FlavorProperties>
        </VisualStudio>
    </ProjectExtensions>
</Project>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\AssemblyInfo.cs"
                            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_32cc1158d28c41d396a82f292ab5a74a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Peoples Choice Credit Union")]
[assembly: AssemblyProduct("ST_32cc1158d28c41d396a82f292ab5a74a")]
[assembly: AssemblyCopyright("Copyright @ Peoples Choice Credit Union 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\settings.settings"
                            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="iso-8859-1"?>
<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)"  >
    <Profiles>
        <Profile Name="(Default)" />
    </Profiles>
    <Settings /></SettingsFile>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\resources.designer.cs"
                            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_39fc180f53654d1192f10fa4824c68db.csproj.Properties.Resources.get_ResourceManager():System.Resources.ResourceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_39fc180f53654d1192f10fa4824c68db.csproj.Properties.Resources.get_Culture():System.Globalization.CultureInfo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_39fc180f53654d1192f10fa4824c68db.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo):Void")]

namespace sp_39fc180f53654d1192f10fa4824c68db.csproj.Properties {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("sp_39fc180f53654d1192f10fa4824c68db.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

    }
}]]></ProjectItem>
                          <BinaryItem
                            Name="\bin\release\sp_39fc180f53654d1192f10fa4824c68db.csproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHCYYlwAAAAAAAAAAOAAAiELAQsAACwAAAAIAAAAAAAAbkoA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABhKAABTAAAAAGAAALgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdCoAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAALgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
SgAAAAAAAEgAAAACAAUAXCoAALwfAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgBCAgAAAQAAEQIoDQAACm8OAAAKcgEAAHBvDwAACm8Q
AAAKdBcAAAEKAigNAAAKbw4AAApyLwAAcG8PAAAKbxAAAAp0FwAAAQsCKA0AAApvDgAACnJbAABw
bw8AAApvEAAACnQXAAABDAIoDQAACm8OAAAKcoUAAHBvDwAACm8QAAAKpRgAAAENAigNAAAKbw4A
AApypQAAcG8PAAAKbxAAAAp0FwAAARMEAigNAAAKbw4AAApyxQAAcG8PAAAKbxAAAApvEQAACigS
AAAKEwURBCwXEQRy9QAAcCgTAAAKLQkRBCgUAAAKKwpy9wAAcCgUAAAKEwYCKA0AAApvDgAACnL7
AABwbw8AAAoWjBgAAAFvFQAACgIHKAgAAAYLAgcoCQAABgsIJRMJLGwRCXIdAQBwKBMAAAotHhEJ
cisBAHAoEwAACi0aEQlyMwEAcCgTAAAKLSUrQAIGBygCAAAGK1cCckcBAHAGKAQAAAYTBwIRBwco
BgAABis+AnJHAQBwBigDAAAGEwgCEQgHEQYRBSgFAAAGKyECKA0AAApvFgAAChZ+FwAACnJbAQBw
fhcAAAoWbxgAAAoCKA0AAApvDgAACnL7AABwbw8AAAoWjBgAAAFvFQAACgJyRwEAcAkHKBkAAAoo
BwAABgIoDQAAChZvGgAACt5QJgIoDQAACm8WAAAKFn4XAAAKcoMBAHB+FwAAChZvGAAACgIoDQAA
Cm8OAAAKcvsAAHBvDwAACheMGAAAAW8VAAAKAigNAAAKFm8aAAAK3gAqAAABEAAAAAAeAdPxAVAd
AAABGzADAJwAAAACAAARAy0LcmgCAHBzGwAACnoELQtycAIAcHMbAAAKegQoGQAACigcAAAKLQwE
KBkAAAooHQAACiYDKB4AAAp0IgAAAQoGIIDuNgBvHwAACgYggO42AG8gAAAKBhdvIQAACgZvIgAA
Ch8XcogCAHBvIwAACgZvJAAACnQmAAABCwQoJQAACgwHbyYAAAoIbycAAAreCggsBghvKAAACtwq
ARAAAAIAgwAOkQAKAAAAABswAgCbAAAAAwAAEQMtC3KmAgBwcxsAAAp6BC0LctICAHBzGwAACnoC
KA0AAApvKQAACgNvKgAACgIoDQAACm8rAAAKbywAAAoKBnUtAAABCwdvLQAACgwIBG8uAAAKCBdv
LwAACnMwAAAKDQkIbzEAAApvMgAACgkTBd4nCCwGCG8oAAAK3BMEEQR6AigNAAAKbykAAAoDbyoA
AAoHbzMAAArcEQUqAAEoAAACAEwAJXEACgAAAAAAAEUANnsABR0AAAECAEUAO4AAGAAAAAAbMAIA
kQAAAAQAABEDLQtypgIAcHMbAAAKegQtC3LSAgBwcxsAAAp6AigNAAAKbykAAAoDbyoAAAoCKA0A
AApvKwAACm8sAAAKCgZ1LQAAAQsHby0AAAoMCARvLgAACggXby8AAAoIbzQAAAp1FwAAARME3iUI
LAYIbygAAArcDQl6AigNAAAKbykAAAoDbyoAAAoHbzMAAArcEQQqAAAAASgAAAIATAAdaQAKAAAA
AAAARQAucwADHQAAAQIARQAxdgAYAAAAABswBgBjAQAABQAAEQNvNQAACm82AAAKLSICKA0AAApv
FgAAChZ+FwAACnLiAgBwfhcAAAoWbxgAAAoqBCgZAAAKKBwAAAotDAQoGQAACigdAAAKJgQoNwAA
CgoOBCxUFgsrQgcDbzUAAApvNgAAChdZMg4GbzgAAAoWbzkAAAorAQUMBgNvNQAACgdvOgAACm87
AAAKbzwAAAoGCG89AAAKBxdYCwcDbzUAAApvNgAACjKwA28+AAAKbz8AAAoTByt9EQdvQAAACnQ6
AAABDRYTBCtcEQQDbzUAAApvNgAAChdZMg4GbzgAAAoWbzkAAAorAQUTBQkRBG9BAAAKKEIAAAot
HQkRBG9BAAAKbxEAAAoFKAoAAAYTBgYRBm88AAAKBhEFbz0AAAoRBBdYEwQRBANvNQAACm82AAAK
MpURB29DAAAKOnf////eFREHdSoAAAETCBEILAcRCG8oAAAK3N4KBiwGBm8oAAAK3CoAQTQAAAIA
AAC0AAAAjQAAAEEBAAAVAAAAAAAAAAIAAABPAAAACQEAAFgBAAAKAAAAAAAAAJIELQtycAIAcHMb
AAAKegMtC3I2AwBwcxsAAAp6BAMoRAAACioAAAAbMAMAngAAAAYAABECKA0AAApvKQAACgNvKgAA
CgIoDQAACm8rAAAKbywAAAoKBnUtAAABCwdvLQAACgwIckADAHBvLgAACghvRQAACnIDBABwBW9G
AAAKJghvRQAACnIfBABwBIwYAAABb0YAAAomCBdvLwAACghvRwAACibeCggsBghvKAAACtzeAw0J
et4YAigNAAAKbykAAAoDbyoAAAoHbzMAAArcKgAAASgAAAIAMABEdAAKAAAAAAAAKQBXgAADHQAA
AQIAKQBchQAYAAAAAB4CKEgAAAoqEzACAKcAAAAHAAARA29JAAAKF29KAAAKb0sAAAp+FwAACihM
AAAKLRMDb0kAAAoZb0oAAApvSwAACisRA29JAAAKF29KAAAKb0sAAAoKA29JAAAKGG9KAAAKb0sA
AAp+FwAACihMAAAKLQdyNQQAcCsRA29JAAAKGG9KAAAKb0sAAAoLAnsKAAAEBm9NAAAKLQtySwQA
cHNOAAAKegJ7CgAABAZvTwAACgwSAgcoUAAACioAEzAGAKAAAAAIAAARcxMAAAYTBChRAAAKChEE
c1IAAAoNCXKfBABwBm9TAAAKCXLDBABwEgAoVAAAChMFEgUjAAAAAAAA8L8oVQAACm9TAAAKCXLX
BABwEgAoVgAAChIAKFcAAAoXc1gAAAoTBhIGIwAAAAAAAPC/KFUAAApvUwAACgl9CgAABHLxBABw
HwlzWQAACgsHAxEE/gYUAAAGc1oAAApvWwAACgwIKhMwAwAsAAAACQAAEQMoXAAACgoDKBkAAAoL
cjcFAHAGKF0AAApvXgAACihfAAAKDAcIKGAAAAoqEzACAJsAAAAKAAARAg8BKGEAAApvYgAACi0n
AnI7BQBwb2IAAAotGgJyPwUAcG9iAAAKLQ0CckMFAHBvYgAACisBFwoGLF5zYwAACgsHcjsFAHBv
ZAAACiYCDRYTBCsoCREEbzkAAAoMBwhvZQAACiYIHyIzDAdyOwUAcG9kAAAKJhEEF1gTBBEECW9m
AAAKMs4HcjsFAHBvZAAACiYHbxEAAAoqAioeAihnAAAKKhp+BwAABCoucw0AAAaABwAABCoeAihp
AAAKKh4CKEgAAAoqAAATMAIALQAAAAsAABF+CAAABC0gckcFAHDQBQAAAihsAAAKb20AAApzbgAA
CgoGgAgAAAR+CAAABCoafgkAAAQqHgKACQAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAABYCAAAI34AAMQIAAAoDQAAI1N0cmluZ3MAAAAA7BUAAMgFAAAjVVMAtBsAABAAAAAj
R1VJRAAAAMQbAAD4AwAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAgAAAPolMwAWAAABAAAAUAAAAAYA
AAAKAAAAFAAAABUAAABvAAAABQAAABEAAAALAAAAAgAAAAMAAAAEAAAAAQAAAAEAAAAFAAAAAgAA
AAAACgABAAAAAAAGAAcB3gAKADMBLAEOAE0BOAEKAGUBLAESAMUBuQEKAKACjwIKANECvAIKALID
oAMKAMkDoAMKAOYDoAMKAAUEoAMKAB4EoAMKADcEoAMKAFIEoAMKAG0EoAMKAIYEoAMKAL8EnwQK
AN8EnwQGACgF3gAGAEoF3gAWAKMFgwUWALsFgwUKANcFLAEKAN4FLAEKAO0FLAEKAAcGLAEGACAG
3gAKAFsGUQYKAIAGLAEKAIoGLAEKAKAGUQYKALEGUQYOANoGzwYOAOwGzwYOADYHzwYOAFYHzwYO
AGwHzwYOAIQHzwYKAJQHUQYKAJkHUQYKAK4HUQYKAM4HLAEWAOIHgwUWAP4HgwUSAEgIMggSAFYI
MggSAIIIbwgSAJwIuQESALgIMggSANQIuQESAAUJuQESACYJuQEKAEsJUQYKAGMJUQYSAIQJuQES
AKQJuQEKANIJvwkSAPgJuQESAB8KMggSAEUKMggKAJ0KggoKAKoKLAEOAN8KwAoOAP8KwAoOABoL
wAoOACALwAoKAEILLAEOAIgLwAoOAI4LwAoOAJsLwAoKAOkLLAEKAAMM9wsKACMMnwQOAF0MRQwK
AIcMdAwKAKQMLAEKAKkMLAEKAM0MoAMOAPkM4wwOABIN4wwAAAAAAQAAAAAAAQABAAEAEAA5AEQA
BQABAAEAAwEAAGgAAAAJAAQADAAAARAAdgB/AA0ABwAMAAAAEAC1AH8AEQAIAA8AAwEQAG8KAAAR
AAoAEwBRgGwBEwBRgIQBKQBRgJEBEwAGBlMCKQBWgFsCeABWgGMCeAARAGsChgARALAClAARAN0C
mAAGALMKDgJQIAAAAACGAKUBRgABALAiAAAAAIEAqgFKAAEAaCMAAAAAgQDPAVAAAwA4JAAAAACB
AN4BVwAFAAAlAAAAAIEA8gFdAAcApCYAAAAAgQAAAkoACwDMJgAAAACBAAgCZgANAFwoAAAAAIEA
FAJtABAACCkAAAAAgQAmAm0AEQBAKQAAAACWADcCcgASAOcpAAAAAIYYTQJGABQA7ykAAAAAlgh7
AooAFAACKgAAAACGGE0CRgAUAPYpAAAAAJEYPgzbAhQACioAAAAAgxhNAkYAFAAUKgAAAACTCO0C
nAAUAE0qAAAAAJMIAQOhABQAVCoAAAAAkwgNA6YAFACgJwAAAACGGE0CRgAVAKgnAAAAAIYA5QoZ
AhUAAAABACEDAAACACUDAAABADEDAAACAEcDAAABADEDAAACAEcDAAABAE8DAAACACUDAAADAFUD
AAAEAF8DAAABAHEDAAACACUDAAABADEDAAACAHYDAAADAIADAAABAIkDAAABAIkDAAABAJYDAAAC
AFUDAAABAJoDAAABAP0KQQBNArYASQBNArYAUQBNArYAWQBNArYAYQBNArYAaQBNArYAcQBNArYA
eQBNArYAgQBNArYAiQBNArsAkQBNAkYAmQBNAkYACQBcBcAAoQCtBcUAqQDEBcoAsQDNBdAAIQDk
BdQAyQD1BdgAuQD7Bd0A0QAPBuMAsQAWBugAoQA0Bu0AuQA/BhMA2QBFBvIA4QBgBvsAoQBxBrsA
8QBNArYA+QCqBtgA+QC/Bg4BCQHlBhUBCQH7BrsAEQEHB7sACQEcBxwBCQFKByEBGQFoBycBCQF4
By8BOQGkBzUBKQG1BzwBSQHHB0IBUQHaB0YAoQDuB1UBWQHEBVsBoQAQCNAAYQEgCGIBaQFhCGcB
eQGMCLYAeQGoCG0BKQBNAkYAcQHGCHQBKQDgCHoBYQHlCOgAeQH3CNAAKQAaCZ4BoQFBCaQBOQFY
CagBsQFuCdQAuQB6Ca8BmQHEBbQBuQGPCdQAsQGeCbYAsQGeCbsBKQC2CcABoQHeCcYByQHsCdAA
0QHEBcwB0QAACtEByQEJCtYBOQESCu4BcQE2CvQB2QFSCvoBeQFfCqQBIQBNAkYA+QEPCyACAQLE
BSYCEQLNBdQAuQAoC90ADAA2CzcCGQJNArYADADEBT0C8QHkBW0A8QFcC0wCDABNAkYADABoB1IC
8QFkC1oC8QFtC2AC8QF1C6QB8QF+C6QB8QFNAmcCIQJNAm4CMQJNAnYCIQKqC3wC4QCyC/sA4QC+
C58CuQDWC6QCuQDcC6sC4QDhC7ICOQLkBdQAuQDuC74CQQJNAkYAQQIRDMMCQQIRDMoCuQAYDKQB
CQBNAkYASQJNAkYAGQBNAkYAUQJNAkoAWQJNAkYAYQK7DCADYQLWDCkDMQBNAi8DeQJNAjwDDgAE
ABYACAAIACwADgAMADEACAAUAHwACAAYAIEALgALAEwDLgBbANcDLgATAHUDLgAbAHUDLgAjAHsD
LgArAEwDLgAzAJwDLgA7AHUDLgBTAM4DQwBjAIEASQB7A0MDaQB7A0MDowBbA4EAowBTA98CowBD
A4EAwwBDA4EA4QBDA4EAAAFJAYEBkQHaAQICRAKEArgC0QI3AwQAAQAFAAIAAACHAo8AAACgAqwA
AAAZA7EAAgAMAAMAAgAQAAUAAgARAAcAAQASAAcALQIEgAAAAQAAAEYbzI8AAAAAAAD9BAAADgAA
AAAAAAAAAAAAAQC/AAAAAAAEAAAAAAAAAAAAAAAKACMBAAAAAAQAAAAAAAAAAAAAAAoALAEAAAAA
BAAAAAAAAAAAAAAACgC5AQAAAAAOAAAAAAAAAAAAAAABAGQFAAAAAAMAAgAGAAIAAAAAPE1vZHVs
ZT4Ac3BfMzlmYzE4MGY1MzY1NGQxMTkyZjEwZmE0ODI0YzY4ZGIuY3Nwcm9qLmRsbABTY3JpcHRN
YWluAFNUXzMyY2MxMTU4ZDI4YzQxZDM5NmE4MmYyOTJhYjVhNzRhAFNjcmlwdFJlc3VsdHMAU2V0
dGluZ3MAc3BfMzlmYzE4MGY1MzY1NGQxMTkyZjEwZmE0ODI0YzY4ZGIuY3Nwcm9qLlByb3BlcnRp
ZXMAUmVzb3VyY2VzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBt
c2NvcmxpYgBTeXN0ZW0ARW51bQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBPYmplY3QAQ09OTkVDVElPTl9NQU5BR0VSX05BTUUAVElNRU9VVF9IT1VSAERFRkFV
TFRfREFURV9GT1JNQVQATWFpbgBEb3dubG9hZFJlcG9ydABTeXN0ZW0uRGF0YQBEYXRhVGFibGUA
RmV0Y2hEYXRhVGFibGUARmV0Y2hTY2FsYXJBc1N0cmluZwBTYXZlRGVsaW1pdGVkAFNhdmVYTUwA
U2V0RmlsZW5hbWUAUmVwbGFjZVRpbWVzdGFtcHMAU2FuaXRpc2VGaWxlbmFtZQBTYW5pdGlzZURl
bGltaXRlZENlbGwALmN0b3IAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVz
b3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJl
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQB1cmwA
ZGVzdGluYXRpb24AY29ubmVjdGlvbk1hbmFnZXJOYW1lAGNvbW1hbmQAdGFibGUAZGVsaW1pdGVy
AGluY2x1ZGVGaWxlSGVhZGVyAHRleHQAZW50aXR5S2V5AGZpbGVuYW1lAGFic29sdXRlUGF0aABz
dHIAdmFsdWUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVy
ZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAHNwXzM5ZmMxODBmNTM2NTRkMTE5MmYxMGZhNDgyNGM2OGRiLmNzcHJv
agBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0
X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRf
VmFsdWUAU3RyaW5nAEludDMyAFRvU3RyaW5nAEJvb2xlYW4AUGFyc2UAb3BfRXF1YWxpdHkAQ29u
dmVydABUb0NoYXIAc2V0X1ZhbHVlAEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X0V2ZW50cwBFbXB0
eQBGaXJlV2FybmluZwBTeXN0ZW0uSU8AUGF0aABHZXREaXJlY3RvcnlOYW1lAHNldF9UYXNrUmVz
dWx0AEV4Y2VwdGlvbgBBcmd1bWVudE51bGxFeGNlcHRpb24ARGlyZWN0b3J5AEV4aXN0cwBEaXJl
Y3RvcnlJbmZvAENyZWF0ZURpcmVjdG9yeQBTeXN0ZW0uTmV0AFdlYlJlcXVlc3QAQ3JlYXRlAEh0
dHBXZWJSZXF1ZXN0AHNldF9UaW1lb3V0AHNldF9SZWFkV3JpdGVUaW1lb3V0AHNldF9Vc2VEZWZh
dWx0Q3JlZGVudGlhbHMAV2ViSGVhZGVyQ29sbGVjdGlvbgBnZXRfSGVhZGVycwBIdHRwUmVxdWVz
dEhlYWRlcgBBZGQAV2ViUmVzcG9uc2UAR2V0UmVzcG9uc2UASHR0cFdlYlJlc3BvbnNlAEZpbGUA
RmlsZVN0cmVhbQBPcGVuV3JpdGUAU3RyZWFtAEdldFJlc3BvbnNlU3RyZWFtAENvcHlUbwBJRGlz
cG9zYWJsZQBEaXNwb3NlAENvbm5lY3Rpb25zAGdldF9Db25uZWN0aW9ucwBDb25uZWN0aW9uTWFu
YWdlcgBnZXRfVHJhbnNhY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AU3lzdGVtLkRhdGEuU3FsQ2xp
ZW50AFNxbENvbm5lY3Rpb24AU3FsQ29tbWFuZABDcmVhdGVDb21tYW5kAFN5c3RlbS5EYXRhLkNv
bW1vbgBEYkNvbW1hbmQAc2V0X0NvbW1hbmRUZXh0AENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlw
ZQBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIASURhdGFSZWFkZXIATG9hZABSZWxlYXNlQ29u
bmVjdGlvbgBFeGVjdXRlU2NhbGFyAERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9Db2x1bW5zAElu
dGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAGdldF9Db3VudABTdHJlYW1Xcml0ZXIAQ3JlYXRlVGV4
dABUZXh0V3JpdGVyAGdldF9OZXdMaW5lAGdldF9DaGFycwBEYXRhQ29sdW1uAGdldF9Db2x1bW5O
YW1lAFdyaXRlAERhdGFSb3dDb2xsZWN0aW9uAGdldF9Sb3dzAFN5c3RlbS5Db2xsZWN0aW9ucwBJ
RW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AERhdGFSb3cASXNEQk51bGwATW92
ZU5leHQAV3JpdGVBbGxUZXh0AFNxbFBhcmFtZXRlckNvbGxlY3Rpb24AZ2V0X1BhcmFtZXRlcnMA
U3FsUGFyYW1ldGVyAEFkZFdpdGhWYWx1ZQBFeGVjdXRlTm9uUXVlcnkAPD5jX19EaXNwbGF5Q2xh
c3MyAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAERpY3Rpb25hcnlgMgBEYXRlVGltZQByZXBs
YWNlbWVudHMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAE1hdGNoADxSZXBsYWNlVGlt
ZXN0YW1wcz5iX18xAG0AR3JvdXBDb2xsZWN0aW9uAGdldF9Hcm91cHMAR3JvdXAAQ2FwdHVyZQBv
cF9JbmVxdWFsaXR5AENvbnRhaW5zS2V5AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AZ2V0X05v
dwBnZXRfRGF0ZQBBZGREYXlzAGdldF9ZZWFyAGdldF9Nb250aABSZWdleABSZWdleE9wdGlvbnMA
TWF0Y2hFdmFsdWF0b3IAUmVwbGFjZQBHZXRGaWxlTmFtZQBHZXRJbnZhbGlkRmlsZU5hbWVDaGFy
cwBTcGxpdABKb2luAENvbWJpbmUAQ2hhcgBDb250YWlucwBTeXN0ZW0uVGV4dABTdHJpbmdCdWls
ZGVyAEFwcGVuZABnZXRfTGVuZ3RoAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBT
eXN0ZW0uQ29kZURvbS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFn
bm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25l
bnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAAAAt
VQBzAGUAcgA6ADoAQwBvAG0AbQBhAG4AZABUAG8ARQB4AGUAYwB1AHQAZQAAK1UAcwBlAHIAOgA6
AEYAaQBsAGUARABlAHMAdABpAG4AYQB0AGkAbwBuAAApVQBzAGUAcgA6ADoARQBuAHQAaQB0AHkA
VAB5AHAAZQBOAGEAbQBlAAAfVQBzAGUAcgA6ADoARQBuAHQAaQB0AHkASwBlAHkAAB9VAHMAZQBy
ADoAOgBEAGUAbABpAG0AaQB0AGUAcgAAL1UAcwBlAHIAOgA6AEkAbgBjAGwAdQBkAGUARgBpAGwA
ZQBIAGUAYQBkAGUAcgAAAQADLAAAIVUAcwBlAHIAOgA6AEUAeABpAHQAUwB0AGEAdAB1AHMAAA1S
AGUAcABvAHIAdAAAB1gATQBMAAATRABlAGwAaQBtAGkAdABlAGQAABNFAHQAbABEAEIAXwBBAEQA
TwAAJ0kAbgB2AGEAbABpAGQAIABFAG4AdABpAHQAeQAgAFQAeQBwAGUAAIDjQQBuACAAZQByAHIA
bwByACAAbwBjAGMAdQByAHIAZQBkACAAcAByAG8AYwBlAHMAcwBpAG4AZwAgAEUAeABwAG8AcgB0
ACAAewBlAG4AdABpAHQAeQBLAGUAeQB9ACwAIABhAG4AZAAgAGkAdAAgAHcAYQBzACAAbgBvAHQA
IABhAGIAbABlACAAdABvACAAYgBlACAAZwBlAG4AZQByAGEAdABlAGQALgAgAEUAcgByAG8AcgAg
AG0AZQBzAHMAYQBnAGUAOgAgAHsAZQB4AC4ATQBlAHMAcwBhAGcAZQB9AAAHdQByAGwAABdkAGUA
cwB0AGkAbgBhAHQAaQBvAG4AAB1lAG4ALQBBAFUALABlAG4AOwBxAD0AMAAuADkAAStjAG8AbgBu
AGUAYwB0AGkAbwBuAE0AYQBuAGEAZwBlAHIATgBhAG0AZQAAD2MAbwBtAG0AYQBuAGQAAFNUAGEA
YgBsAGUAIABoAGEAcwAgAG4AbwAgAGMAbwBsAHUAbQBuAHMALgAgAE4AbwAgAGYAaQBsAGUAIABp
AHMAIABjAHIAZQBhAHQAZQBkAC4AAAl0AGUAeAB0AACAwVUAUABEAEEAVABFACAARABhAHQAYQBF
AHgAcABvAHIAdAAuAEUAbgB0AGkAdAB5ACAAUwBFAFQAIABNAG8AcwB0AFIAZQBjAGUAbgB0AEYA
aQBsAGUATABvAGMAYQB0AGkAbwBuACAAPQAgAEAARgBpAGwAZQBMAG8AYwBhAHQAaQBvAG4AIABX
AEgARQBSAEUAIABFAG4AdABpAHQAeQBLAGUAeQAgAD0AIABAAEUAbgB0AGkAdAB5AEsAZQB5AAAb
QABGAGkAbABlAEwAbwBjAGEAdABpAG8AbgAAFUAARQBuAHQAaQB0AHkASwBlAHkAABV5AHkAeQB5
AC0ATQBNAC0AZABkAAFTQwBhAG4AbgBvAHQAIABsAG8AYwBhAHQAZQAgAHsAawBlAHkAfQAgAGkA
bgAgAHQAaABlACAAcABhAHIAYQBtAGUAdABlAHIAIABsAGkAcwB0AAAjQwBVAFIAUgBFAE4AVABf
AFQASQBNAEUAUwBUAEEATQBQAAATRABBAFQAQQBfAEQAQQBUAEUAABlQAFIARQBWAEkATwBVAFMA
XwBFAE8ATQAARXsAKABbAF4AfQBdAC4AKgA/ACkAOgAoAFsAXgB9AF0ALgAqAD8AKQA/AH0AfAB7
ACgAWwBeAH0AXQAuACoAPwApAH0AAANfAAADIgAAAw0AAAMKAAB/cwBwAF8AMwA5AGYAYwAxADgA
MABmADUAMwA2ADUANABkADEAMQA5ADIAZgAxADAAZgBhADQAOAAyADQAYwA2ADgAZABiAC4AYwBz
AHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAABvU/kV
LMLbRYfMFeb8QhDyAAiJhF3NgIDMkQi3elxWGTTgiQIGDhJFAHQAbABEAEIAXwBBAEQATwACBggE
gO42ABR5AHkAeQB5AC0ATQBNAC0AZABkAAMgAAEFIAIBDg4GIAISFQ4OBSACDg4OCCAEARIVDgMC
BiADAQ4IDgQgAQ4OBQACDg4DAwYRDAQAAAAABAEAAAADBhIQBAAAEhAECAASEAMGEhkDBhIdBAAA
EhkEAAASHQUAAQESHQQIABIZBAgAEh0EIAEBDgQgAQEIBCAAElEEIAASVQUgARJZHAMgABwDIAAO
BAABAg4FAAICDg4EAAEDDgQgAQEcBCAAEm0IIAUBCA4ODggEAAEODg0HCg4ODggOAgMOEhUOBgAB
EoCBDgYAARKAhQ4EIAEBAgUgABKAjQcgAgERgJEOBSAAEoCVBgABEoChDgUgABKApQYgAQESgKUL
BwMSgIkSgJkSgKUFIAASgK0GIAESgLEcBCABHBwFIAASgLkGIAEBEYDBBSAAEoDFBiABARKAyQ8H
BhwSgLUSgLkSFRJ1EhUMBwUcEoC1EoC5EnUOBSAAEoDNAyAACAYAARKA1Q4EIAEDCAYgARKA3QgE
IAEBAwUgABKA4QUgABKA5QQgARwIBAABAhwDIAACEwcJEoDVCAMSgOkIAw4SgOUSgKkFAAIBDg4F
IAASgO0HIAISgPEOHAsHBBwSgLUSgLkSdQoGFRKA9QIOEYD5BiABDhKA/QUgABKBAQYgARKBBQgJ
FRKA9QIOEYD5BSABAhMABiABEwETAAcHAw4OEYD5BQAAEYD5ByACARMAEwEFIAARgPkGIAERgPkN
BiADAQgICAcgAgEOEYEVBSACARwYByACDg4SgRkaBwcRgPkSgREOFRKA9QIOEYD5EhgRgPkRgPkE
AAAdAwYgAR0OHQMGAAIODh0OBQACDg4OBQcDDg4OBCABAg4GIAESgSEOBiABEoEhAwkHBQISgSED
DggDAAABQAEAM1N5c3RlbS5SZXNvdXJjZXMuVG9vbHMuU3Ryb25nbHlUeXBlZFJlc291cmNlQnVp
bGRlcgcyLjAuMC4wAAAIAAESgTERgTUFIAASgTkHIAIBDhKBOQQHARIZBiABARGBQQgBAAIAAAAA
ACgBACNTVF8zMmNjMTE1OGQyOGM0MWQzOTZhODJmMjkyYWI1YTc0YQAABQEAAAAAIAEAG1Blb3Bs
ZXMgQ2hvaWNlIENyZWRpdCBVbmlvbgAAMQEALENvcHlyaWdodCBAIFBlb3BsZXMgQ2hvaWNlIENy
ZWRpdCBVbmlvbiAyMDE4AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
AABASgAAAAAAAAAAAABeSgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUEoAAAAAAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAABgBAAA
AAAAAAAAAABgBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAzI9GGwAAAQDMj0YbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEwAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAnAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
WAAcAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABQAGUAbwBwAGwAZQBzACAAQwBoAG8AaQBj
AGUAIABDAHIAZQBkAGkAdAAgAFUAbgBpAG8AbgAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkA
cAB0AGkAbwBuAAAAAABTAFQAXwAzADIAYwBjADEAMQA1ADgAZAAyADgAYwA0ADEAZAAzADkANgBh
ADgAMgBmADIAOQAyAGEAYgA1AGEANwA0AGEAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4ANgA5ADgAMgAuADMANgA4ADEAMgAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABzAHAAXwAzADkAZgBjADEAOAAwAGYANQAzADYANQA0AGQAMQAxADkAMgBmADEA
MABmAGEANAA4ADIANABjADYAOABkAGIALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAACAAC0AAQBM
AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABQAGUA
bwBwAGwAZQBzACAAQwBoAG8AaQBjAGUAIABDAHIAZQBkAGkAdAAgAFUAbgBpAG8AbgAgADIAMAAx
ADgAAAAAAIgALwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHAAXwAzADkA
ZgBjADEAOAAwAGYANQAzADYANQA0AGQAMQAxADkAMgBmADEAMABmAGEANAA4ADIANABjADYAOABk
AGIALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADMAMgBjAGMAMQAxADUAOABkADIAOABjADQAMQBkADMAOQA2AGEAOAAyAGYAMgA5
ADIAYQBiADUAYQA3ADQAYQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgA5ADgAMgAuADMANgA4ADEAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgA5ADgAMgAuADMANgA4ADEAMgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAcDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                        </ScriptProject>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Set dependency 3"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:Disabled="True"
                      DTS:DTSID="{6A1D4A2E-14C8-472B-B794-8A0109C801B1}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Set dependency 3"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="2">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="Disable">LEN(@[User::DependencyEntityToSet]) == 0</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="EXEC Dependency.up_SetReadyStatus ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@EntityCode"
                            SQLTask:DtsVariableName="User::DependencyEntityToSet"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@PackageExecutionID"
                            SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Set entity processing status 3"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:DTSID="{9F85581B-1D2A-49B3-97C7-811EFC494D37}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Set entity processing status 3"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="2">
                      <DTS:Variables />
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="EXEC Process.up_SetEntityProcessingSuccess ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@EntityKey"
                            SQLTask:DtsVariableName="User::EntityKey"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Set to complete and Notify"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:DTSID="{E23B18E8-860F-4803-99AF-552E413B6292}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Set to complete and Notify"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="2">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="Disable">@[User::ExitStatus] != 0</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="EXEC DataExport.up_NotifyDataExportComplete ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@EntityKey"
                            SQLTask:DtsVariableName="User::EntityKey"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                  </DTS:Executables>
                  <DTS:PrecedenceConstraints>
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3.PrecedenceConstraints[Constraint_Pause 3_To_Script Task]"
                      DTS:CreationName=""
                      DTS:DTSID="{78B925FA-2395-429A-BA9E-085F5A400F57}"
                      DTS:From="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Pause 3"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Pause 3_To_Script Task"
                      DTS:To="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Script Task" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3.PrecedenceConstraints[Constraint_Script Task_To_Set to complete and Notify]"
                      DTS:CreationName=""
                      DTS:DTSID="{E0ECE16B-1F8E-480D-8422-98AF40ADD019}"
                      DTS:From="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Script Task"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Script Task_To_Set to complete and Notify"
                      DTS:To="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Set to complete and Notify" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3.PrecedenceConstraints[Constraint_Set entity processing status 3_To_Set dependency 3]"
                      DTS:CreationName=""
                      DTS:DTSID="{D7F81148-0965-4883-8878-E0C49D42EB57}"
                      DTS:From="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Set entity processing status 3"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Set entity processing status 3_To_Set dependency 3"
                      DTS:To="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Set dependency 3" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3.PrecedenceConstraints[Constraint_Set to complete and Notify_To_Set entity processing status 3]"
                      DTS:CreationName=""
                      DTS:DTSID="{CC0F1992-9ACC-4837-A690-D232F57482B5}"
                      DTS:From="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Set to complete and Notify"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Set to complete and Notify_To_Set entity processing status 3"
                      DTS:To="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Set entity processing status 3" />
                  </DTS:PrecedenceConstraints>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Update parallel execution control 3"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:DTSID="{694E1D20-6246-4C20-91FF-1D42D63D6841}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update parallel execution control 3"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="2">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                      SQLTask:SqlStatementSource="EXEC Process.up_UpdateParallelExecutionControl @ExecutionInstanceGUID = ?, @ParallelLegNumber = 3, @KeyCurrentlyBeingProcessed = ?"
                      SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="AreAnyParallelLegsStillProcessing"
                        SQLTask:DtsVariableName="User::AreAnyParallelLegsStillProcessing" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="@ExecutionInstanceGUID"
                        SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="@KeyCurrentlyBeingProcessed"
                        SQLTask:DtsVariableName="User::EntityKey"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3.PrecedenceConstraints[Constraint_Get next entity To process 3_To_Update parallel execution control 3]"
                  DTS:CreationName=""
                  DTS:DTSID="{9C07BE49-DAE1-43F3-A940-1AF89A04D736}"
                  DTS:From="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Get next entity To process 3"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint_Get next entity To process 3_To_Update parallel execution control 3"
                  DTS:To="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Update parallel execution control 3" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Main Flow\Parallel Leg 3\While more entities to process 3.PrecedenceConstraints[Constraint_Process Entity 3_To_Get next entity To process 3]"
                  DTS:CreationName=""
                  DTS:DTSID="{224FAEC6-8DA0-47E4-8DF7-EA4555A3EA6E}"
                  DTS:From="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint_Process Entity 3_To_Get next entity To process 3"
                  DTS:To="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Get next entity To process 3" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Main Flow\Parallel Leg 3.PrecedenceConstraints[Constraint_Get Initial Entity To Process 3_To_Update Parallel Execution Control 3]"
              DTS:CreationName=""
              DTS:DTSID="{1A329F04-AF78-444D-84B2-FDC869B9EF1D}"
              DTS:From="Package\Main Flow\Parallel Leg 3\Get Initial Entity To Process 3"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint_Get Initial Entity To Process 3_To_Update Parallel Execution Control 3"
              DTS:To="Package\Main Flow\Parallel Leg 3\Update Parallel Execution Control 3" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Main Flow\Parallel Leg 3.PrecedenceConstraints[Constraint_Update Parallel Execution Control 3_To_While more entities to process 3]"
              DTS:CreationName=""
              DTS:DTSID="{894D4F33-A8B9-4E38-9C12-313FAE3F738F}"
              DTS:From="Package\Main Flow\Parallel Leg 3\Update Parallel Execution Control 3"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint_Update Parallel Execution Control 3_To_While more entities to process 3"
              DTS:To="Package\Main Flow\Parallel Leg 3\While more entities to process 3" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Main Flow\Parallel Leg 4"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Disabled="True"
          DTS:DTSID="{BF124526-73ED-48AA-B28E-7F7FE4D0F403}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Parallel Leg 4">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{555F7AA5-4F7C-4DC6-B6B3-BDD83FEA2A5E}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="User"
              DTS:ObjectName="AreAnyParallelLegsStillProcessing"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{0D3D6799-0619-42BE-9690-F729780F46CB}"
              DTS:IncludeInDebugDump="2345"
              DTS:Namespace="User"
              DTS:ObjectName="DependencyEntityToSet"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="8"
                xml:space="preserve"></DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{2C040160-AC99-4E26-95BA-8310251CFA0A}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="User"
              DTS:ObjectName="EntityKey"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="3">-1</DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{CAD343AE-E491-4441-A32B-4EDC58F674C6}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="User"
              DTS:ObjectName="ExitStatus">
              <DTS:VariableValue
                DTS:DataType="3">0</DTS:VariableValue>
            </DTS:Variable>
            <DTS:Variable
              DTS:CreationName=""
              DTS:DTSID="{ECCD5F7D-D3DC-4EA5-97D7-EA4E2C309250}"
              DTS:IncludeInDebugDump="2345"
              DTS:Namespace="User"
              DTS:ObjectName="SqlStatement"
              DTS:RaiseChangedEvent="True">
              <DTS:VariableValue
                DTS:DataType="8"
                xml:space="preserve"></DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:LoggingOptions
            DTS:LoggingMode="2" />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::NumberOfParallelExecutions] &lt; 4</DTS:PropertyExpression>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Main Flow\Parallel Leg 4\Get Initial Entity To Process 4"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:DTSID="{1342182C-375A-4BF0-81EC-610EB9912E5B}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Initial Entity To Process 4"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:LoggingMode="2" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                  SQLTask:SqlStatementSource="EXEC Process.up_GetEntityToProcess ?, 3"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::EntityKey" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="1"
                    SQLTask:DtsVariableName="User::DependencyEntityToSet" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="2"
                    SQLTask:DtsVariableName="User::SqlStatement" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@EntityGroupKeyCommaSeparatedList"
                    SQLTask:DtsVariableName="$Package::EntityGroupKeyCommaSeparatedList"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Main Flow\Parallel Leg 4\Update Parallel Execution Control 4"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:DTSID="{36167B43-A250-475D-9E1E-34B0F2982D81}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update Parallel Execution Control 4"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                  SQLTask:SqlStatementSource="EXEC Process.up_UpdateParallelExecutionControl @ExecutionInstanceGUID = ?, @ParallelLegNumber = 4, @KeyCurrentlyBeingProcessed = ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@ExecutionInstanceGUID"
                    SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@KeyCurrentlyBeingProcessed"
                    SQLTask:DtsVariableName="User::EntityKey"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="3"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4"
              DTS:CreationName="STOCK:FORLOOP"
              DTS:DTSID="{4E55E426-17DB-474B-957E-A29DC869085F}"
              DTS:EvalExpression="@[User::AreAnyParallelLegsStillProcessing] == True"
              DTS:ExecutableType="STOCK:FORLOOP"
              DTS:LocaleID="-1"
              DTS:MaxConcurrent="1"
              DTS:ObjectName="While more entities to process 4">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:LoggingMode="2" />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Get next entity To process 4"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:DTSID="{AA43251B-8562-4EE2-95C1-F37A850269B8}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Get next entity To process 4"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="3">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:LoggingMode="2" />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                      SQLTask:SqlStatementSource="EXEC Process.up_GetEntityToProcess ?, 3"
                      SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="0"
                        SQLTask:DtsVariableName="User::EntityKey" />
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="1"
                        SQLTask:DtsVariableName="User::DependencyEntityToSet" />
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="2"
                        SQLTask:DtsVariableName="User::SqlStatement" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="@EntityGroupKeyCommaSeparatedList"
                        SQLTask:DtsVariableName="$Package::EntityGroupKeyCommaSeparatedList"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4"
                  DTS:CreationName="STOCK:SEQUENCE"
                  DTS:DTSID="{9C83E616-6CB6-4742-A29A-E9CD3683B1A7}"
                  DTS:ExecutableType="STOCK:SEQUENCE"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Process Entity 4">
                  <DTS:Variables />
                  <DTS:LoggingOptions
                    DTS:LoggingMode="2" />
                  <DTS:PropertyExpression
                    DTS:Name="Disable">@[User::EntityKey] == 0</DTS:PropertyExpression>
                  <DTS:Executables>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Pause 4"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:DTSID="{26F55AC7-DF3A-4A8F-8843-396FB5B53155}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Pause 4"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="3">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="Disable">@[User::EntityKey] &gt; 0</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="WAITFOR DELAY ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="0"
                            SQLTask:DtsVariableName="$Package::DelayToGetNextEntity"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="8" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Script Task"
                      DTS:CreationName="Microsoft.ScriptTask"
                      DTS:DTSID="{0D88A366-7724-47BF-9C69-17421BACE46A}"
                      DTS:ExecutableType="Microsoft.ScriptTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Script Task"
                      DTS:ThreadHint="3">
                      <DTS:Variables />
                      <DTS:ObjectData>
                        <ScriptProject
                          Name="sp_88b197d365234a2da5465f7243c4122f"
                          VSTAMajorVersion="15"
                          VSTAMinorVersion="0"
                          Language="CSharp"
                          ReadOnlyVariables="User::CommandToExecute,User::Delimiter,User::EntityKey,User::EntityTypeName,User::FileDestination,User::IncludeFileHeader"
                          ReadWriteVariables="User::ExitStatus">
                          <ProjectItem
                            Name="Properties\resources.resx"
                            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string" />
                            <xsd:attribute name="type" type="xsd:string" />
                            <xsd:attribute name="mimetype" type="xsd:string" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string" />
                            <xsd:attribute name="name" type="xsd:string" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" />
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    </root>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\settings.designer.cs"
                            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_88b197d365234a2da5465f7243c4122f.csproj.Properties.Settings.get_Default():sp_88b197d365234a2da5465f7243c4122f.csproj.Properties.Settings")]

namespace sp_88b197d365234a2da5465f7243c4122f.csproj.Properties
{

    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }

    }
}]]></ProjectItem>
                          <ProjectItem
                            Name="ScriptMain.cs"
                            Encoding="UTF8"><![CDATA[   #region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
#endregion

namespace ST_32cc1158d28c41d396a82f292ab5a74a
{

    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion

        const string CONNECTION_MANAGER_NAME = "EtlDB_ADO";
        const int TIMEOUT_HOUR = 1000 * 60 * 60;
        private const string DEFAULT_DATE_FORMAT = "yyyy-MM-dd";

        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // User::CommandToExecute, User::EntityKey, User::EntityTypeName, User::FileDestination
            string command = (string)Dts.Variables["User::CommandToExecute"].Value;
            string destination = (string)Dts.Variables["User::FileDestination"].Value;
            string entityType = (string)Dts.Variables["User::EntityTypeName"].Value;
            int entityKey = (int)Dts.Variables["User::EntityKey"].Value;
            string delimiterString = (string)Dts.Variables["User::Delimiter"].Value;
            bool includeFileHeader = Boolean.Parse(Dts.Variables["User::IncludeFileHeader"].Value.ToString());

            // If delimiterString is NULL or empty, use a default of comma
            char delimiter = (delimiterString == null || delimiterString == "" ? Convert.ToChar(",") : Convert.ToChar(delimiterString));

            // Reset exit status
            Dts.Variables["User::ExitStatus"].Value = 0;

            // Add timestamp 
            destination = ReplaceTimestamps(destination);

            // Make sure the filename does not contain invalid characters
            destination = SanitiseFilename(destination);

            try
            {
                switch (entityType)
                {
                    case "Report":
                        DownloadReport(command, destination);
                        break;
                    case "XML":
                        var result = FetchScalarAsString(CONNECTION_MANAGER_NAME, command);
                        SaveXML(result, destination);
                        break;
                    case "Delimited":
                        var table = FetchDataTable(CONNECTION_MANAGER_NAME, command);
                        SaveDelimited(table, destination, delimiter, includeFileHeader);
                        break;
                    default:
                        Dts.Events.FireWarning(0, String.Empty, "Invalid Entity Type", String.Empty, 0);
                        break;
                }
                Dts.Variables["User::ExitStatus"].Value = 0;
                SetFilename(CONNECTION_MANAGER_NAME, entityKey, Path.GetDirectoryName(destination));
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireWarning(0, String.Empty, "An error occurred processing Export {entityKey}, and it was not able to be generated. Error message: {ex.Message}", String.Empty, 0);
                Dts.Variables["User::ExitStatus"].Value = 1;
                Dts.TaskResult = (int)ScriptResults.Success;
            }
        }

        void DownloadReport(string url, string destination)
        {
            if (url == null) throw new ArgumentNullException("url");
            if (destination == null) throw new ArgumentNullException("destination");

            if (!Directory.Exists(Path.GetDirectoryName(destination)))
            {
                Directory.CreateDirectory(Path.GetDirectoryName(destination));
            }

            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
            request.Timeout = TIMEOUT_HOUR;
            request.ReadWriteTimeout = TIMEOUT_HOUR;
            request.UseDefaultCredentials = true;
            request.Headers.Add(HttpRequestHeader.AcceptLanguage, "en-AU,en;q=0.9");

            var response = (HttpWebResponse)request.GetResponse();

            using (Stream file = File.OpenWrite(destination))
            {
                response.GetResponseStream().CopyTo(file);
            }
        }

        DataTable FetchDataTable(string connectionManagerName, string command)
        {
            if (connectionManagerName == null) throw new ArgumentNullException("connectionManagerName");
            if (command == null) throw new ArgumentNullException("command");

            var connectionManager = Dts.Connections[connectionManagerName].AcquireConnection(Dts.Transaction);

            var connection = connectionManager as SqlConnection;
            try
            {
                using (var cmd = connection.CreateCommand())
                {
                    cmd.CommandText = command;
                    cmd.CommandType = CommandType.Text;
                    var table = new DataTable();
                    table.Load(cmd.ExecuteReader());
                    return table;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                Dts.Connections[connectionManagerName].ReleaseConnection(connection);
            }
        }

        string FetchScalarAsString(string connectionManagerName, string command)
        {
            if (connectionManagerName == null) throw new ArgumentNullException("connectionManagerName");
            if (command == null) throw new ArgumentNullException("command");

            var connectionManager = Dts.Connections[connectionManagerName].AcquireConnection(Dts.Transaction);

            var connection = connectionManager as SqlConnection;
            try
            {
                using (var cmd = connection.CreateCommand())
                {
                    cmd.CommandText = command;
                    cmd.CommandType = CommandType.Text;
                    return cmd.ExecuteScalar() as string;
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                Dts.Connections[connectionManagerName].ReleaseConnection(connection);
            }
        }

        void SaveDelimited(DataTable table, string destination, char delimiter, bool includeFileHeader)
        {
            if (table.Columns.Count == 0)
            {
                /* Do not export data if column collection is empty */
                Dts.Events.FireWarning(0, string.Empty, "Table has no columns. No file is created.", string.Empty, 0);
                return;
            }

            if (!Directory.Exists(Path.GetDirectoryName(destination)))
            {
                Directory.CreateDirectory(Path.GetDirectoryName(destination));
            }

            using (StreamWriter sw = File.CreateText(destination))
            {
                if (includeFileHeader)
                {
                    /* Write header row */
                    for (int i = 0; i < table.Columns.Count; i++)
                    {
                        char delimiterOrNewline = (i < table.Columns.Count - 1 ? delimiter : sw.NewLine[0]);
                        sw.Write(table.Columns[i].ColumnName);
                        sw.Write(delimiterOrNewline);
                    }
                }

                /* Write Data */
                foreach (DataRow dr in table.Rows)
                {
                    for (int i = 0; i < table.Columns.Count; i++)
                    {
                        char delimiterOrNewline = (i < table.Columns.Count - 1 ? delimiter : sw.NewLine[0]);
                        if (!Convert.IsDBNull(dr[i]))
                        {
                            var cellValue = SanitiseDelimitedCell(dr[i].ToString(), delimiter);
                            sw.Write(cellValue);
                        }
                        sw.Write(delimiterOrNewline);
                    }
                }
            }
        }

        void SaveXML(string text, string destination)
        {
            if (destination == null) throw new ArgumentNullException("destination");
            if (text == null) throw new ArgumentNullException("text");

            File.WriteAllText(destination, text);
        }

        void SetFilename(string connectionManagerName, int entityKey, string filename)
        {
            var connectionManager = Dts.Connections[connectionManagerName].AcquireConnection(Dts.Transaction);

            var connection = connectionManager as SqlConnection;
            try
            {
                using (var cmd = connection.CreateCommand())
                {
                    cmd.CommandText = "UPDATE DataExport.Entity SET MostRecentFileLocation = @FileLocation WHERE EntityKey = @EntityKey";
                    cmd.Parameters.AddWithValue("@FileLocation", filename);
                    cmd.Parameters.AddWithValue("@EntityKey", entityKey);
                    cmd.CommandType = CommandType.Text;
                    cmd.ExecuteNonQuery();
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                Dts.Connections[connectionManagerName].ReleaseConnection(connection);
            }
        }

        /*
         * Looks for predefined strings in the path and replaces it with a formatted timestamp
         * Markers are CURRENT_TIMESTAMP (replaced with the current date and time) and DATA_DATE (replaced with the previous business day);
         */
        string ReplaceTimestamps(string absolutePath)
        {
            var now = DateTime.Now;
            var replacements = new Dictionary<string, DateTime> { { "CURRENT_TIMESTAMP", now }, { "DATA_DATE", now.Date.AddDays(-1) }, { "PREVIOUS_EOM", (new DateTime(now.Year, now.Month, 1)).AddDays(-1) } };

            // invaluable - https://regex101.com
            var regex = new Regex("{([^}].*?):([^}].*?)?}|{([^}].*?)}", RegexOptions.Compiled | RegexOptions.IgnoreCase);
            var result = regex.Replace(absolutePath, delegate (Match m) {
                var key = m.Groups[1].Value != String.Empty ? m.Groups[1].Value : m.Groups[3].Value;
                var fmt = m.Groups[2].Value != String.Empty ? m.Groups[2].Value : DEFAULT_DATE_FORMAT;

                if (replacements.ContainsKey(key) == false) throw new InvalidOperationException("Cannot locate {key} in the parameter list");
                return replacements[key].ToString(fmt);
            });

            return result;
        }

        string SanitiseFilename(string absolutePath)
        {
            var filename = Path.GetFileName(absolutePath);
            var directory = Path.GetDirectoryName(absolutePath);

            var sanitisedFilename = string.Join("_", filename.Split(Path.GetInvalidFileNameChars()));

            return Path.Combine(directory, sanitisedFilename);
        }

        // Some guy on stack overflow says this always works.
        public static string SanitiseDelimitedCell(string str, char delimiter)
        {
            bool mustQuote = (str.Contains(delimiter.ToString()) || str.Contains("\"") || str.Contains("\r") || str.Contains("\n"));
            if (mustQuote)
            {
                StringBuilder sb = new StringBuilder();
                sb.Append("\"");
                foreach (char nextChar in str)
                {
                    sb.Append(nextChar);
                    if (nextChar == '"')
                        sb.Append("\"");
                }
                sb.Append("\"");
                return sb.ToString();
            }

            return str;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
                          <ProjectItem
                            Name="Project"
                            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{07a55e9b-3aa8-4a76-94d7-a12b321b7abd}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sp_88b197d365234a2da5465f7243c4122f</msb:DisplayName>
		<msb:CodeName>sp_88b197d365234a2da5465f7243c4122f</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
				<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
				<msb:File Include="Properties\Resources.Designer.cs"/>
				<msb:File Include="Properties\AssemblyInfo.cs"/>
				<msb:File Include="ScriptMain.cs"/>
								<msb:File Include="Properties\Settings.settings"/>
						<msb:Project Include="sp_88b197d365234a2da5465f7243c4122f.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\AssemblyInfo.cs"
                            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_32cc1158d28c41d396a82f292ab5a74a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Peoples Choice Credit Union")]
[assembly: AssemblyProduct("ST_32cc1158d28c41d396a82f292ab5a74a")]
[assembly: AssemblyCopyright("Copyright @ Peoples Choice Credit Union 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                          <ProjectItem
                            Name="sp_88b197d365234a2da5465f7243c4122f.csproj"
                            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
	    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <OutputType>Library</OutputType>
        <RootNamespace>sp_88b197d365234a2da5465f7243c4122f.csproj</RootNamespace>
        <AssemblyName>sp_88b197d365234a2da5465f7243c4122f.csproj</AssemblyName>
        <ProjectGuid>{C792B577-3187-41B4-A778-35BF1292DEDE}</ProjectGuid>
		        <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
        <TargetFrameworkProfile></TargetFrameworkProfile>			    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
				        <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
        <NoStandardLibraries>false</NoStandardLibraries>
		    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
		        <DebugSymbols>true</DebugSymbols>
        <Optimize>false</Optimize>
        <OutputPath>.\bin\Debug\</OutputPath>
        <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <WarningLevel>4</WarningLevel>
		    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
		        <DebugSymbols>false</DebugSymbols>
        <Optimize>true</Optimize>
        <OutputPath>.\bin\Release\</OutputPath>
        <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
        <DefineConstants>TRACE</DefineConstants>
        <WarningLevel>4</WarningLevel>
		    </PropertyGroup>
    <PropertyGroup>
        <PreBuildEvent>
        </PreBuildEvent>
        <PostBuildEvent>
        </PostBuildEvent>
    </PropertyGroup>
    <ItemGroup>
                <Reference Include="System" />
                <Reference Include="System.Data" />
                <Reference Include="System.Windows.Forms" />
                <Reference Include="System.Xml" />
                <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL" />
                <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91, processorArchitecture=MSIL" />
            </ItemGroup>
	    <ItemGroup>
        <Folder Include="Resources\" />
        <AppDesigner Include="Properties\" />
        <EmbeddedResource Include="Properties\Resources.resx">
						<Generator>ResXFileCodeGenerator</Generator>
            <LastGenOutput>Resources.Designer.cs</LastGenOutput>
			        </EmbeddedResource>
        <Compile Include="Properties\Resources.Designer.cs">
            <AutoGen>True</AutoGen>
            <DependentUpon>Resources.resx</DependentUpon>
            <DesignTime>True</DesignTime>
        </Compile>
		        <None Include="Properties\Settings.settings">
            <Generator>SettingsSingleFileGenerator</Generator>
            <LastGenOutput>Settings.Designer.cs</LastGenOutput>
        </None>
        <Compile Include="Properties\Settings.Designer.cs">
            <AutoGen>True</AutoGen>
            <DependentUpon>Settings.settings</DependentUpon>
            <DesignTimeSharedInput>True</DesignTimeSharedInput>
        </Compile>

				<Compile Include="ScriptMain.cs">
			<SubType>Code</SubType>
		</Compile>
				<Compile Include="Properties\AssemblyInfo.cs">
			<SubType>Code</SubType>
		</Compile>
		
		
		
		
		    </ItemGroup>
		<!-- Include the build rules for a C# project.-->
    <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
		<!-- This section defines VSTA properties that describe the host-changable project properties. -->
    <ProjectExtensions>
        <VisualStudio>
            <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
                <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\9.0\InstallDir#\devenv.exe" />
                <Host Name="SSIS_ScriptTask" />
                <ProjectClient>
                    <HostIdentifier>SSIS_ST130</HostIdentifier>
                </ProjectClient>
            </FlavorProperties>
        </VisualStudio>
    </ProjectExtensions>
</Project>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\settings.settings"
                            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="iso-8859-1"?>
<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)"  >
    <Profiles>
        <Profile Name="(Default)" />
    </Profiles>
    <Settings /></SettingsFile>]]></ProjectItem>
                          <ProjectItem
                            Name="Properties\resources.designer.cs"
                            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_88b197d365234a2da5465f7243c4122f.csproj.Properties.Resources.get_ResourceManager():System.Resources.ResourceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_88b197d365234a2da5465f7243c4122f.csproj.Properties.Resources.get_Culture():System.Globalization.CultureInfo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "sp_88b197d365234a2da5465f7243c4122f.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo):Void")]

namespace sp_88b197d365234a2da5465f7243c4122f.csproj.Properties {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("sp_88b197d365234a2da5465f7243c4122f.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

    }
}]]></ProjectItem>
                          <BinaryItem
                            Name="\bin\release\sp_88b197d365234a2da5465f7243c4122f.csproj.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHGYYlwAAAAAAAAAAOAAAiELAQsAACwAAAAIAAAAAAAAbkoA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABhKAABTAAAAAGAAALgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdCoAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAALgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
SgAAAAAAAEgAAAACAAUAXCoAALwfAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgBCAgAAAQAAEQIoDQAACm8OAAAKcgEAAHBvDwAACm8Q
AAAKdBcAAAEKAigNAAAKbw4AAApyLwAAcG8PAAAKbxAAAAp0FwAAAQsCKA0AAApvDgAACnJbAABw
bw8AAApvEAAACnQXAAABDAIoDQAACm8OAAAKcoUAAHBvDwAACm8QAAAKpRgAAAENAigNAAAKbw4A
AApypQAAcG8PAAAKbxAAAAp0FwAAARMEAigNAAAKbw4AAApyxQAAcG8PAAAKbxAAAApvEQAACigS
AAAKEwURBCwXEQRy9QAAcCgTAAAKLQkRBCgUAAAKKwpy9wAAcCgUAAAKEwYCKA0AAApvDgAACnL7
AABwbw8AAAoWjBgAAAFvFQAACgIHKAgAAAYLAgcoCQAABgsIJRMJLGwRCXIdAQBwKBMAAAotHhEJ
cisBAHAoEwAACi0aEQlyMwEAcCgTAAAKLSUrQAIGBygCAAAGK1cCckcBAHAGKAQAAAYTBwIRBwco
BgAABis+AnJHAQBwBigDAAAGEwgCEQgHEQYRBSgFAAAGKyECKA0AAApvFgAAChZ+FwAACnJbAQBw
fhcAAAoWbxgAAAoCKA0AAApvDgAACnL7AABwbw8AAAoWjBgAAAFvFQAACgJyRwEAcAkHKBkAAAoo
BwAABgIoDQAAChZvGgAACt5QJgIoDQAACm8WAAAKFn4XAAAKcoMBAHB+FwAAChZvGAAACgIoDQAA
Cm8OAAAKcvsAAHBvDwAACheMGAAAAW8VAAAKAigNAAAKFm8aAAAK3gAqAAABEAAAAAAeAdPxAVAd
AAABGzADAJwAAAACAAARAy0LcmgCAHBzGwAACnoELQtycAIAcHMbAAAKegQoGQAACigcAAAKLQwE
KBkAAAooHQAACiYDKB4AAAp0IgAAAQoGIIDuNgBvHwAACgYggO42AG8gAAAKBhdvIQAACgZvIgAA
Ch8XcogCAHBvIwAACgZvJAAACnQmAAABCwQoJQAACgwHbyYAAAoIbycAAAreCggsBghvKAAACtwq
ARAAAAIAgwAOkQAKAAAAABswAgCbAAAAAwAAEQMtC3KmAgBwcxsAAAp6BC0LctICAHBzGwAACnoC
KA0AAApvKQAACgNvKgAACgIoDQAACm8rAAAKbywAAAoKBnUtAAABCwdvLQAACgwIBG8uAAAKCBdv
LwAACnMwAAAKDQkIbzEAAApvMgAACgkTBd4nCCwGCG8oAAAK3BMEEQR6AigNAAAKbykAAAoDbyoA
AAoHbzMAAArcEQUqAAEoAAACAEwAJXEACgAAAAAAAEUANnsABR0AAAECAEUAO4AAGAAAAAAbMAIA
kQAAAAQAABEDLQtypgIAcHMbAAAKegQtC3LSAgBwcxsAAAp6AigNAAAKbykAAAoDbyoAAAoCKA0A
AApvKwAACm8sAAAKCgZ1LQAAAQsHby0AAAoMCARvLgAACggXby8AAAoIbzQAAAp1FwAAARME3iUI
LAYIbygAAArcDQl6AigNAAAKbykAAAoDbyoAAAoHbzMAAArcEQQqAAAAASgAAAIATAAdaQAKAAAA
AAAARQAucwADHQAAAQIARQAxdgAYAAAAABswBgBjAQAABQAAEQNvNQAACm82AAAKLSICKA0AAApv
FgAAChZ+FwAACnLiAgBwfhcAAAoWbxgAAAoqBCgZAAAKKBwAAAotDAQoGQAACigdAAAKJgQoNwAA
CgoOBCxUFgsrQgcDbzUAAApvNgAAChdZMg4GbzgAAAoWbzkAAAorAQUMBgNvNQAACgdvOgAACm87
AAAKbzwAAAoGCG89AAAKBxdYCwcDbzUAAApvNgAACjKwA28+AAAKbz8AAAoTByt9EQdvQAAACnQ6
AAABDRYTBCtcEQQDbzUAAApvNgAAChdZMg4GbzgAAAoWbzkAAAorAQUTBQkRBG9BAAAKKEIAAAot
HQkRBG9BAAAKbxEAAAoFKAoAAAYTBgYRBm88AAAKBhEFbz0AAAoRBBdYEwQRBANvNQAACm82AAAK
MpURB29DAAAKOnf////eFREHdSoAAAETCBEILAcRCG8oAAAK3N4KBiwGBm8oAAAK3CoAQTQAAAIA
AAC0AAAAjQAAAEEBAAAVAAAAAAAAAAIAAABPAAAACQEAAFgBAAAKAAAAAAAAAJIELQtycAIAcHMb
AAAKegMtC3I2AwBwcxsAAAp6BAMoRAAACioAAAAbMAMAngAAAAYAABECKA0AAApvKQAACgNvKgAA
CgIoDQAACm8rAAAKbywAAAoKBnUtAAABCwdvLQAACgwIckADAHBvLgAACghvRQAACnIDBABwBW9G
AAAKJghvRQAACnIfBABwBIwYAAABb0YAAAomCBdvLwAACghvRwAACibeCggsBghvKAAACtzeAw0J
et4YAigNAAAKbykAAAoDbyoAAAoHbzMAAArcKgAAASgAAAIAMABEdAAKAAAAAAAAKQBXgAADHQAA
AQIAKQBchQAYAAAAAB4CKEgAAAoqEzACAKcAAAAHAAARA29JAAAKF29KAAAKb0sAAAp+FwAACihM
AAAKLRMDb0kAAAoZb0oAAApvSwAACisRA29JAAAKF29KAAAKb0sAAAoKA29JAAAKGG9KAAAKb0sA
AAp+FwAACihMAAAKLQdyNQQAcCsRA29JAAAKGG9KAAAKb0sAAAoLAnsKAAAEBm9NAAAKLQtySwQA
cHNOAAAKegJ7CgAABAZvTwAACgwSAgcoUAAACioAEzAGAKAAAAAIAAARcxMAAAYTBChRAAAKChEE
c1IAAAoNCXKfBABwBm9TAAAKCXLDBABwEgAoVAAAChMFEgUjAAAAAAAA8L8oVQAACm9TAAAKCXLX
BABwEgAoVgAAChIAKFcAAAoXc1gAAAoTBhIGIwAAAAAAAPC/KFUAAApvUwAACgl9CgAABHLxBABw
HwlzWQAACgsHAxEE/gYUAAAGc1oAAApvWwAACgwIKhMwAwAsAAAACQAAEQMoXAAACgoDKBkAAAoL
cjcFAHAGKF0AAApvXgAACihfAAAKDAcIKGAAAAoqEzACAJsAAAAKAAARAg8BKGEAAApvYgAACi0n
AnI7BQBwb2IAAAotGgJyPwUAcG9iAAAKLQ0CckMFAHBvYgAACisBFwoGLF5zYwAACgsHcjsFAHBv
ZAAACiYCDRYTBCsoCREEbzkAAAoMBwhvZQAACiYIHyIzDAdyOwUAcG9kAAAKJhEEF1gTBBEECW9m
AAAKMs4HcjsFAHBvZAAACiYHbxEAAAoqAioeAihnAAAKKhp+BwAABCoucw0AAAaABwAABCoeAihp
AAAKKh4CKEgAAAoqAAATMAIALQAAAAsAABF+CAAABC0gckcFAHDQBQAAAihsAAAKb20AAApzbgAA
CgoGgAgAAAR+CAAABCoafgkAAAQqHgKACQAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAABYCAAAI34AAMQIAAAoDQAAI1N0cmluZ3MAAAAA7BUAAMgFAAAjVVMAtBsAABAAAAAj
R1VJRAAAAMQbAAD4AwAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJAgAAAPolMwAWAAABAAAAUAAAAAYA
AAAKAAAAFAAAABUAAABvAAAABQAAABEAAAALAAAAAgAAAAMAAAAEAAAAAQAAAAEAAAAFAAAAAgAA
AAAACgABAAAAAAAGAAcB3gAKADMBLAEOAE0BOAEKAGUBLAESAMUBuQEKAKACjwIKANECvAIKALID
oAMKAMkDoAMKAOYDoAMKAAUEoAMKAB4EoAMKADcEoAMKAFIEoAMKAG0EoAMKAIYEoAMKAL8EnwQK
AN8EnwQGACgF3gAGAEoF3gAWAKMFgwUWALsFgwUKANcFLAEKAN4FLAEKAO0FLAEKAAcGLAEGACAG
3gAKAFsGUQYKAIAGLAEKAIoGLAEKAKAGUQYKALEGUQYOANoGzwYOAOwGzwYOADYHzwYOAFYHzwYO
AGwHzwYOAIQHzwYKAJQHUQYKAJkHUQYKAK4HUQYKAM4HLAEWAOIHgwUWAP4HgwUSAEgIMggSAFYI
MggSAIIIbwgSAJwIuQESALgIMggSANQIuQESAAUJuQESACYJuQEKAEsJUQYKAGMJUQYSAIQJuQES
AKQJuQEKANIJvwkSAPgJuQESAB8KMggSAEUKMggKAJ0KggoKAKoKLAEOAN8KwAoOAP8KwAoOABoL
wAoOACALwAoKAEILLAEOAIgLwAoOAI4LwAoOAJsLwAoKAOkLLAEKAAMM9wsKACMMnwQOAF0MRQwK
AIcMdAwKAKQMLAEKAKkMLAEKAM0MoAMOAPkM4wwOABIN4wwAAAAAAQAAAAAAAQABAAEAEAA5AEQA
BQABAAEAAwEAAGgAAAAJAAQADAAAARAAdgB/AA0ABwAMAAAAEAC1AH8AEQAIAA8AAwEQAG8KAAAR
AAoAEwBRgGwBEwBRgIQBKQBRgJEBEwAGBlMCKQBWgFsCeABWgGMCeAARAGsChgARALAClAARAN0C
mAAGALMKDgJQIAAAAACGAKUBRgABALAiAAAAAIEAqgFKAAEAaCMAAAAAgQDPAVAAAwA4JAAAAACB
AN4BVwAFAAAlAAAAAIEA8gFdAAcApCYAAAAAgQAAAkoACwDMJgAAAACBAAgCZgANAFwoAAAAAIEA
FAJtABAACCkAAAAAgQAmAm0AEQBAKQAAAACWADcCcgASAOcpAAAAAIYYTQJGABQA7ykAAAAAlgh7
AooAFAACKgAAAACGGE0CRgAUAPYpAAAAAJEYPgzbAhQACioAAAAAgxhNAkYAFAAUKgAAAACTCO0C
nAAUAE0qAAAAAJMIAQOhABQAVCoAAAAAkwgNA6YAFACgJwAAAACGGE0CRgAVAKgnAAAAAIYA5QoZ
AhUAAAABACEDAAACACUDAAABADEDAAACAEcDAAABADEDAAACAEcDAAABAE8DAAACACUDAAADAFUD
AAAEAF8DAAABAHEDAAACACUDAAABADEDAAACAHYDAAADAIADAAABAIkDAAABAIkDAAABAJYDAAAC
AFUDAAABAJoDAAABAP0KQQBNArYASQBNArYAUQBNArYAWQBNArYAYQBNArYAaQBNArYAcQBNArYA
eQBNArYAgQBNArYAiQBNArsAkQBNAkYAmQBNAkYACQBcBcAAoQCtBcUAqQDEBcoAsQDNBdAAIQDk
BdQAyQD1BdgAuQD7Bd0A0QAPBuMAsQAWBugAoQA0Bu0AuQA/BhMA2QBFBvIA4QBgBvsAoQBxBrsA
8QBNArYA+QCqBtgA+QC/Bg4BCQHlBhUBCQH7BrsAEQEHB7sACQEcBxwBCQFKByEBGQFoBycBCQF4
By8BOQGkBzUBKQG1BzwBSQHHB0IBUQHaB0YAoQDuB1UBWQHEBVsBoQAQCNAAYQEgCGIBaQFhCGcB
eQGMCLYAeQGoCG0BKQBNAkYAcQHGCHQBKQDgCHoBYQHlCOgAeQH3CNAAKQAaCZ4BoQFBCaQBOQFY
CagBsQFuCdQAuQB6Ca8BmQHEBbQBuQGPCdQAsQGeCbYAsQGeCbsBKQC2CcABoQHeCcYByQHsCdAA
0QHEBcwB0QAACtEByQEJCtYBOQESCu4BcQE2CvQB2QFSCvoBeQFfCqQBIQBNAkYA+QEPCyACAQLE
BSYCEQLNBdQAuQAoC90ADAA2CzcCGQJNArYADADEBT0C8QHkBW0A8QFcC0wCDABNAkYADABoB1IC
8QFkC1oC8QFtC2AC8QF1C6QB8QF+C6QB8QFNAmcCIQJNAm4CMQJNAnYCIQKqC3wC4QCyC/sA4QC+
C58CuQDWC6QCuQDcC6sC4QDhC7ICOQLkBdQAuQDuC74CQQJNAkYAQQIRDMMCQQIRDMoCuQAYDKQB
CQBNAkYASQJNAkYAGQBNAkYAUQJNAkoAWQJNAkYAYQK7DCADYQLWDCkDMQBNAi8DeQJNAjwDDgAE
ABYACAAIACwADgAMADEACAAUAHwACAAYAIEALgALAEwDLgBbANcDLgATAHUDLgAbAHUDLgAjAHsD
LgArAEwDLgAzAJwDLgA7AHUDLgBTAM4DQwBjAIEASQB7A0MDaQB7A0MDowBbA4EAowBTA98CowBD
A4EAwwBDA4EA4QBDA4EAAAFJAYEBkQHaAQICRAKEArgC0QI3AwQAAQAFAAIAAACHAo8AAACgAqwA
AAAZA7EAAgAMAAMAAgAQAAUAAgARAAcAAQASAAcALQIEgAAAAQAAAEYbzI8AAAAAAAD9BAAADgAA
AAAAAAAAAAAAAQC/AAAAAAAEAAAAAAAAAAAAAAAKACMBAAAAAAQAAAAAAAAAAAAAAAoALAEAAAAA
BAAAAAAAAAAAAAAACgC5AQAAAAAOAAAAAAAAAAAAAAABAGQFAAAAAAMAAgAGAAIAAAAAPE1vZHVs
ZT4Ac3BfODhiMTk3ZDM2NTIzNGEyZGE1NDY1ZjcyNDNjNDEyMmYuY3Nwcm9qLmRsbABTY3JpcHRN
YWluAFNUXzMyY2MxMTU4ZDI4YzQxZDM5NmE4MmYyOTJhYjVhNzRhAFNjcmlwdFJlc3VsdHMAU2V0
dGluZ3MAc3BfODhiMTk3ZDM2NTIzNGEyZGE1NDY1ZjcyNDNjNDEyMmYuY3Nwcm9qLlByb3BlcnRp
ZXMAUmVzb3VyY2VzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBt
c2NvcmxpYgBTeXN0ZW0ARW51bQBTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBPYmplY3QAQ09OTkVDVElPTl9NQU5BR0VSX05BTUUAVElNRU9VVF9IT1VSAERFRkFV
TFRfREFURV9GT1JNQVQATWFpbgBEb3dubG9hZFJlcG9ydABTeXN0ZW0uRGF0YQBEYXRhVGFibGUA
RmV0Y2hEYXRhVGFibGUARmV0Y2hTY2FsYXJBc1N0cmluZwBTYXZlRGVsaW1pdGVkAFNhdmVYTUwA
U2V0RmlsZW5hbWUAUmVwbGFjZVRpbWVzdGFtcHMAU2FuaXRpc2VGaWxlbmFtZQBTYW5pdGlzZURl
bGltaXRlZENlbGwALmN0b3IAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAZGVmYXVsdEluc3RhbmNl
AGdldF9EZWZhdWx0AERlZmF1bHQAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVz
b3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJl
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQB1cmwA
ZGVzdGluYXRpb24AY29ubmVjdGlvbk1hbmFnZXJOYW1lAGNvbW1hbmQAdGFibGUAZGVsaW1pdGVy
AGluY2x1ZGVGaWxlSGVhZGVyAHRleHQAZW50aXR5S2V5AGZpbGVuYW1lAGFic29sdXRlUGF0aABz
dHIAdmFsdWUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w
eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVy
ZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAHNwXzg4YjE5N2QzNjUyMzRhMmRhNTQ2NWY3MjQzYzQxMjJmLmNzcHJv
agBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0
X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRf
VmFsdWUAU3RyaW5nAEludDMyAFRvU3RyaW5nAEJvb2xlYW4AUGFyc2UAb3BfRXF1YWxpdHkAQ29u
dmVydABUb0NoYXIAc2V0X1ZhbHVlAEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X0V2ZW50cwBFbXB0
eQBGaXJlV2FybmluZwBTeXN0ZW0uSU8AUGF0aABHZXREaXJlY3RvcnlOYW1lAHNldF9UYXNrUmVz
dWx0AEV4Y2VwdGlvbgBBcmd1bWVudE51bGxFeGNlcHRpb24ARGlyZWN0b3J5AEV4aXN0cwBEaXJl
Y3RvcnlJbmZvAENyZWF0ZURpcmVjdG9yeQBTeXN0ZW0uTmV0AFdlYlJlcXVlc3QAQ3JlYXRlAEh0
dHBXZWJSZXF1ZXN0AHNldF9UaW1lb3V0AHNldF9SZWFkV3JpdGVUaW1lb3V0AHNldF9Vc2VEZWZh
dWx0Q3JlZGVudGlhbHMAV2ViSGVhZGVyQ29sbGVjdGlvbgBnZXRfSGVhZGVycwBIdHRwUmVxdWVz
dEhlYWRlcgBBZGQAV2ViUmVzcG9uc2UAR2V0UmVzcG9uc2UASHR0cFdlYlJlc3BvbnNlAEZpbGUA
RmlsZVN0cmVhbQBPcGVuV3JpdGUAU3RyZWFtAEdldFJlc3BvbnNlU3RyZWFtAENvcHlUbwBJRGlz
cG9zYWJsZQBEaXNwb3NlAENvbm5lY3Rpb25zAGdldF9Db25uZWN0aW9ucwBDb25uZWN0aW9uTWFu
YWdlcgBnZXRfVHJhbnNhY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AU3lzdGVtLkRhdGEuU3FsQ2xp
ZW50AFNxbENvbm5lY3Rpb24AU3FsQ29tbWFuZABDcmVhdGVDb21tYW5kAFN5c3RlbS5EYXRhLkNv
bW1vbgBEYkNvbW1hbmQAc2V0X0NvbW1hbmRUZXh0AENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlw
ZQBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIASURhdGFSZWFkZXIATG9hZABSZWxlYXNlQ29u
bmVjdGlvbgBFeGVjdXRlU2NhbGFyAERhdGFDb2x1bW5Db2xsZWN0aW9uAGdldF9Db2x1bW5zAElu
dGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAGdldF9Db3VudABTdHJlYW1Xcml0ZXIAQ3JlYXRlVGV4
dABUZXh0V3JpdGVyAGdldF9OZXdMaW5lAGdldF9DaGFycwBEYXRhQ29sdW1uAGdldF9Db2x1bW5O
YW1lAFdyaXRlAERhdGFSb3dDb2xsZWN0aW9uAGdldF9Sb3dzAFN5c3RlbS5Db2xsZWN0aW9ucwBJ
RW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AERhdGFSb3cASXNEQk51bGwATW92
ZU5leHQAV3JpdGVBbGxUZXh0AFNxbFBhcmFtZXRlckNvbGxlY3Rpb24AZ2V0X1BhcmFtZXRlcnMA
U3FsUGFyYW1ldGVyAEFkZFdpdGhWYWx1ZQBFeGVjdXRlTm9uUXVlcnkAPD5jX19EaXNwbGF5Q2xh
c3MyAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAERpY3Rpb25hcnlgMgBEYXRlVGltZQByZXBs
YWNlbWVudHMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAE1hdGNoADxSZXBsYWNlVGlt
ZXN0YW1wcz5iX18xAG0AR3JvdXBDb2xsZWN0aW9uAGdldF9Hcm91cHMAR3JvdXAAQ2FwdHVyZQBv
cF9JbmVxdWFsaXR5AENvbnRhaW5zS2V5AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AZ2V0X05v
dwBnZXRfRGF0ZQBBZGREYXlzAGdldF9ZZWFyAGdldF9Nb250aABSZWdleABSZWdleE9wdGlvbnMA
TWF0Y2hFdmFsdWF0b3IAUmVwbGFjZQBHZXRGaWxlTmFtZQBHZXRJbnZhbGlkRmlsZU5hbWVDaGFy
cwBTcGxpdABKb2luAENvbWJpbmUAQ2hhcgBDb250YWlucwBTeXN0ZW0uVGV4dABTdHJpbmdCdWls
ZGVyAEFwcGVuZABnZXRfTGVuZ3RoAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBT
eXN0ZW0uQ29kZURvbS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0cmlidXRlAFN5c3RlbS5EaWFn
bm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25l
bnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAAAAt
VQBzAGUAcgA6ADoAQwBvAG0AbQBhAG4AZABUAG8ARQB4AGUAYwB1AHQAZQAAK1UAcwBlAHIAOgA6
AEYAaQBsAGUARABlAHMAdABpAG4AYQB0AGkAbwBuAAApVQBzAGUAcgA6ADoARQBuAHQAaQB0AHkA
VAB5AHAAZQBOAGEAbQBlAAAfVQBzAGUAcgA6ADoARQBuAHQAaQB0AHkASwBlAHkAAB9VAHMAZQBy
ADoAOgBEAGUAbABpAG0AaQB0AGUAcgAAL1UAcwBlAHIAOgA6AEkAbgBjAGwAdQBkAGUARgBpAGwA
ZQBIAGUAYQBkAGUAcgAAAQADLAAAIVUAcwBlAHIAOgA6AEUAeABpAHQAUwB0AGEAdAB1AHMAAA1S
AGUAcABvAHIAdAAAB1gATQBMAAATRABlAGwAaQBtAGkAdABlAGQAABNFAHQAbABEAEIAXwBBAEQA
TwAAJ0kAbgB2AGEAbABpAGQAIABFAG4AdABpAHQAeQAgAFQAeQBwAGUAAIDjQQBuACAAZQByAHIA
bwByACAAbwBjAGMAdQByAHIAZQBkACAAcAByAG8AYwBlAHMAcwBpAG4AZwAgAEUAeABwAG8AcgB0
ACAAewBlAG4AdABpAHQAeQBLAGUAeQB9ACwAIABhAG4AZAAgAGkAdAAgAHcAYQBzACAAbgBvAHQA
IABhAGIAbABlACAAdABvACAAYgBlACAAZwBlAG4AZQByAGEAdABlAGQALgAgAEUAcgByAG8AcgAg
AG0AZQBzAHMAYQBnAGUAOgAgAHsAZQB4AC4ATQBlAHMAcwBhAGcAZQB9AAAHdQByAGwAABdkAGUA
cwB0AGkAbgBhAHQAaQBvAG4AAB1lAG4ALQBBAFUALABlAG4AOwBxAD0AMAAuADkAAStjAG8AbgBu
AGUAYwB0AGkAbwBuAE0AYQBuAGEAZwBlAHIATgBhAG0AZQAAD2MAbwBtAG0AYQBuAGQAAFNUAGEA
YgBsAGUAIABoAGEAcwAgAG4AbwAgAGMAbwBsAHUAbQBuAHMALgAgAE4AbwAgAGYAaQBsAGUAIABp
AHMAIABjAHIAZQBhAHQAZQBkAC4AAAl0AGUAeAB0AACAwVUAUABEAEEAVABFACAARABhAHQAYQBF
AHgAcABvAHIAdAAuAEUAbgB0AGkAdAB5ACAAUwBFAFQAIABNAG8AcwB0AFIAZQBjAGUAbgB0AEYA
aQBsAGUATABvAGMAYQB0AGkAbwBuACAAPQAgAEAARgBpAGwAZQBMAG8AYwBhAHQAaQBvAG4AIABX
AEgARQBSAEUAIABFAG4AdABpAHQAeQBLAGUAeQAgAD0AIABAAEUAbgB0AGkAdAB5AEsAZQB5AAAb
QABGAGkAbABlAEwAbwBjAGEAdABpAG8AbgAAFUAARQBuAHQAaQB0AHkASwBlAHkAABV5AHkAeQB5
AC0ATQBNAC0AZABkAAFTQwBhAG4AbgBvAHQAIABsAG8AYwBhAHQAZQAgAHsAawBlAHkAfQAgAGkA
bgAgAHQAaABlACAAcABhAHIAYQBtAGUAdABlAHIAIABsAGkAcwB0AAAjQwBVAFIAUgBFAE4AVABf
AFQASQBNAEUAUwBUAEEATQBQAAATRABBAFQAQQBfAEQAQQBUAEUAABlQAFIARQBWAEkATwBVAFMA
XwBFAE8ATQAARXsAKABbAF4AfQBdAC4AKgA/ACkAOgAoAFsAXgB9AF0ALgAqAD8AKQA/AH0AfAB7
ACgAWwBeAH0AXQAuACoAPwApAH0AAANfAAADIgAAAw0AAAMKAAB/cwBwAF8AOAA4AGIAMQA5ADcA
ZAAzADYANQAyADMANABhADIAZABhADUANAA2ADUAZgA3ADIANAAzAGMANAAxADIAMgBmAC4AYwBz
AHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAB562bU
+nf1SJ9xOwVXA0l6AAiJhF3NgIDMkQi3elxWGTTgiQIGDhJFAHQAbABEAEIAXwBBAEQATwACBggE
gO42ABR5AHkAeQB5AC0ATQBNAC0AZABkAAMgAAEFIAIBDg4GIAISFQ4OBSACDg4OCCAEARIVDgMC
BiADAQ4IDgQgAQ4OBQACDg4DAwYRDAQAAAAABAEAAAADBhIQBAAAEhAECAASEAMGEhkDBhIdBAAA
EhkEAAASHQUAAQESHQQIABIZBAgAEh0EIAEBDgQgAQEIBCAAElEEIAASVQUgARJZHAMgABwDIAAO
BAABAg4FAAICDg4EAAEDDgQgAQEcBCAAEm0IIAUBCA4ODggEAAEODg0HCg4ODggOAgMOEhUOBgAB
EoCBDgYAARKAhQ4EIAEBAgUgABKAjQcgAgERgJEOBSAAEoCVBgABEoChDgUgABKApQYgAQESgKUL
BwMSgIkSgJkSgKUFIAASgK0GIAESgLEcBCABHBwFIAASgLkGIAEBEYDBBSAAEoDFBiABARKAyQ8H
BhwSgLUSgLkSFRJ1EhUMBwUcEoC1EoC5EnUOBSAAEoDNAyAACAYAARKA1Q4EIAEDCAYgARKA3QgE
IAEBAwUgABKA4QUgABKA5QQgARwIBAABAhwDIAACEwcJEoDVCAMSgOkIAw4SgOUSgKkFAAIBDg4F
IAASgO0HIAISgPEOHAsHBBwSgLUSgLkSdQoGFRKA9QIOEYD5BiABDhKA/QUgABKBAQYgARKBBQgJ
FRKA9QIOEYD5BSABAhMABiABEwETAAcHAw4OEYD5BQAAEYD5ByACARMAEwEFIAARgPkGIAERgPkN
BiADAQgICAcgAgEOEYEVBSACARwYByACDg4SgRkaBwcRgPkSgREOFRKA9QIOEYD5EhgRgPkRgPkE
AAAdAwYgAR0OHQMGAAIODh0OBQACDg4OBQcDDg4OBCABAg4GIAESgSEOBiABEoEhAwkHBQISgSED
DggDAAABQAEAM1N5c3RlbS5SZXNvdXJjZXMuVG9vbHMuU3Ryb25nbHlUeXBlZFJlc291cmNlQnVp
bGRlcgcyLjAuMC4wAAAIAAESgTERgTUFIAASgTkHIAIBDhKBOQQHARIZBiABARGBQQgBAAIAAAAA
ACgBACNTVF8zMmNjMTE1OGQyOGM0MWQzOTZhODJmMjkyYWI1YTc0YQAABQEAAAAAIAEAG1Blb3Bs
ZXMgQ2hvaWNlIENyZWRpdCBVbmlvbgAAMQEALENvcHlyaWdodCBAIFBlb3BsZXMgQ2hvaWNlIENy
ZWRpdCBVbmlvbiAyMDE4AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
AABASgAAAAAAAAAAAABeSgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUEoAAAAAAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAABgBAAA
AAAAAAAAAABgBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEAzI9GGwAAAQDMj0YbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEwAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAnAMAAAEAMAAwADAAMAAwADQAYgAwAAAA
WAAcAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABQAGUAbwBwAGwAZQBzACAAQwBoAG8AaQBj
AGUAIABDAHIAZQBkAGkAdAAgAFUAbgBpAG8AbgAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkA
cAB0AGkAbwBuAAAAAABTAFQAXwAzADIAYwBjADEAMQA1ADgAZAAyADgAYwA0ADEAZAAzADkANgBh
ADgAMgBmADIAOQAyAGEAYgA1AGEANwA0AGEAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4A
AAAAADEALgAwAC4ANgA5ADgAMgAuADMANgA4ADEAMgAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBs
AE4AYQBtAGUAAABzAHAAXwA4ADgAYgAxADkANwBkADMANgA1ADIAMwA0AGEAMgBkAGEANQA0ADYA
NQBmADcAMgA0ADMAYwA0ADEAMgAyAGYALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAACAAC0AAQBM
AGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABQAGUA
bwBwAGwAZQBzACAAQwBoAG8AaQBjAGUAIABDAHIAZQBkAGkAdAAgAFUAbgBpAG8AbgAgADIAMAAx
ADgAAAAAAIgALwABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABzAHAAXwA4ADgA
YgAxADkANwBkADMANgA1ADIAMwA0AGEAMgBkAGEANQA0ADYANQBmADcAMgA0ADMAYwA0ADEAMgAy
AGYALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADMAMgBjAGMAMQAxADUAOABkADIAOABjADQAMQBkADMAOQA2AGEAOAAyAGYAMgA5
ADIAYQBiADUAYQA3ADQAYQAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgA5ADgAMgAuADMANgA4ADEAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgA5ADgAMgAuADMANgA4ADEAMgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAcDoAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                        </ScriptProject>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Set dependency 4"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:Disabled="True"
                      DTS:DTSID="{909C25E2-F518-4FC4-B0A8-93ADDA5382AA}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Set dependency 4"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="3">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="Disable">LEN(@[User::DependencyEntityToSet]) == 0</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="EXEC Dependency.up_SetReadyStatus ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@EntityCode"
                            SQLTask:DtsVariableName="User::DependencyEntityToSet"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@PackageExecutionID"
                            SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Set entity processing status 4"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:DTSID="{4D523302-0E1F-4599-B75A-C0A06E9CEF49}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Set entity processing status 4"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="3">
                      <DTS:Variables />
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="EXEC Process.up_SetEntityProcessingSuccess ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@EntityKey"
                            SQLTask:DtsVariableName="User::EntityKey"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                    <DTS:Executable
                      DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Set to complete and Notify"
                      DTS:CreationName="Microsoft.ExecuteSQLTask"
                      DTS:DTSID="{9ECCE241-41E8-457D-A6D3-361E8B648684}"
                      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Set to complete and Notify"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                      DTS:ThreadHint="3">
                      <DTS:Variables />
                      <DTS:PropertyExpression
                        DTS:Name="Disable">@[User::ExitStatus] != 0</DTS:PropertyExpression>
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                          SQLTask:SqlStatementSource="EXEC DataExport.up_NotifyDataExportComplete ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="@EntityKey"
                            SQLTask:DtsVariableName="User::EntityKey"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="3"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                  </DTS:Executables>
                  <DTS:PrecedenceConstraints>
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4.PrecedenceConstraints[Constraint_Pause 4_To_Script Task]"
                      DTS:CreationName=""
                      DTS:DTSID="{4F9DC6EC-4E75-459B-9AEE-E0D3CCD63EFE}"
                      DTS:From="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Pause 4"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Pause 4_To_Script Task"
                      DTS:To="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Script Task" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4.PrecedenceConstraints[Constraint_Script Task_To_Set to complete and Notify]"
                      DTS:CreationName=""
                      DTS:DTSID="{7044E97C-B1D6-4402-AE6A-53088B2E7645}"
                      DTS:From="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Script Task"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Script Task_To_Set to complete and Notify"
                      DTS:To="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Set to complete and Notify" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4.PrecedenceConstraints[Constraint_Set entity processing status 4_To_Set dependency 4]"
                      DTS:CreationName=""
                      DTS:DTSID="{F3F40C86-F61D-40B8-AEF3-35380E1853E4}"
                      DTS:From="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Set entity processing status 4"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Set entity processing status 4_To_Set dependency 4"
                      DTS:To="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Set dependency 4" />
                    <DTS:PrecedenceConstraint
                      DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4.PrecedenceConstraints[Constraint_Set to complete and Notify_To_Set entity processing status 4]"
                      DTS:CreationName=""
                      DTS:DTSID="{E50F8DDF-A06F-4D52-91F9-61F9DEAC04A2}"
                      DTS:From="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Set to complete and Notify"
                      DTS:LogicalAnd="True"
                      DTS:ObjectName="Constraint_Set to complete and Notify_To_Set entity processing status 4"
                      DTS:To="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Set entity processing status 4" />
                  </DTS:PrecedenceConstraints>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Update parallel execution control 4"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:DTSID="{82896C6F-D009-4AD5-A21D-DBD640DF90AD}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update parallel execution control 4"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="3">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
                      SQLTask:SqlStatementSource="EXEC Process.up_UpdateParallelExecutionControl @ExecutionInstanceGUID = ?, @ParallelLegNumber = 4, @KeyCurrentlyBeingProcessed = ?"
                      SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ResultBinding
                        SQLTask:ResultName="AreAnyParallelLegsStillProcessing"
                        SQLTask:DtsVariableName="User::AreAnyParallelLegsStillProcessing" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="@ExecutionInstanceGUID"
                        SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="@KeyCurrentlyBeingProcessed"
                        SQLTask:DtsVariableName="User::EntityKey"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4.PrecedenceConstraints[Constraint_Get next entity To process 4_To_Update parallel execution control 4]"
                  DTS:CreationName=""
                  DTS:DTSID="{BF1469D8-687A-48A5-8164-A97542DD688D}"
                  DTS:From="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Get next entity To process 4"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint_Get next entity To process 4_To_Update parallel execution control 4"
                  DTS:To="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Update parallel execution control 4" />
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Main Flow\Parallel Leg 4\While more entities to process 4.PrecedenceConstraints[Constraint_Process Entity 4_To_Get next entity To process 4]"
                  DTS:CreationName=""
                  DTS:DTSID="{40C44163-0B3F-4E13-A828-D0EFAC1DA9A5}"
                  DTS:From="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint_Process Entity 4_To_Get next entity To process 4"
                  DTS:To="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Get next entity To process 4" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Main Flow\Parallel Leg 4.PrecedenceConstraints[Constraint_Get Initial Entity To Process 4_To_Update Parallel Execution Control 4]"
              DTS:CreationName=""
              DTS:DTSID="{F3826FE7-25E4-4135-A234-B83B451AB0A8}"
              DTS:From="Package\Main Flow\Parallel Leg 4\Get Initial Entity To Process 4"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint_Get Initial Entity To Process 4_To_Update Parallel Execution Control 4"
              DTS:To="Package\Main Flow\Parallel Leg 4\Update Parallel Execution Control 4" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Main Flow\Parallel Leg 4.PrecedenceConstraints[Constraint_Update Parallel Execution Control 4_To_While more entities to process 4]"
              DTS:CreationName=""
              DTS:DTSID="{CAF0057A-EED1-4A63-8ADE-0A6A973B6013}"
              DTS:From="Package\Main Flow\Parallel Leg 4\Update Parallel Execution Control 4"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint_Update Parallel Execution Control 4_To_While more entities to process 4"
              DTS:To="Package\Main Flow\Parallel Leg 4\While more entities to process 4" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Reset IsProcessing Flag"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:DTSID="{823015CC-C71E-46B0-8363-F95671DF801A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Reset IsProcessing Flag"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:LoggingMode="2" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
          SQLTask:SqlStatementSource="EXEC Process.up_ResetIsProcessingFlag ?, 3" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::EntityGroupKeyCommaSeparatedList"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Reset Schedule if all done"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:DTSID="{029E5461-FCDE-436A-9E7A-CA57A61AC229}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Reset Schedule if all done">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Reset Schedule if all done\Check if all entities have processed"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{A7C1797A-B803-4299-A175-44AD8D678354}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Check if all entities have processed"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
              SQLTask:SqlStatementSource="EXEC Process.up_AreThereAnyEntitiesToProcess ?, 3"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::CountOfEntitiesStillToProcess" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@EntityGroupKeyCommaSeparatedList"
                SQLTask:DtsVariableName="$Package::EntityGroupKeyCommaSeparatedList"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Reset Schedule if all done\Set Ready Status"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DTSID="{EA3768A7-9E30-43AA-8D02-E19A4A5BE97E}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set Ready Status"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:LoggingMode="2" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
              SQLTask:SqlStatementSource="EXEC Dependency.up_SetReadyStatus ?, ?" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@EntityCode"
                SQLTask:DtsVariableName="$Package::EntityToSetForDataIsReady"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@PackageExecutionID"
                SQLTask:DtsVariableName="System::ExecutionInstanceGUID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Reset Schedule if all done\Set Schedule Date to tomorrow"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Disabled="True"
          DTS:DTSID="{E6CB6DDB-C234-4C51-963B-833624D0520C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set Schedule Date to tomorrow"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2014; © 2014 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::ScheduleName] == ""</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{325152BF-FF51-4EB6-AADD-144A87D5CCFC}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::SetScheduleDateSql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Reset Schedule if all done.PrecedenceConstraints[Constraint_Check if all entities have processed_To_Set Schedule Date to tomorrow]"
          DTS:CreationName=""
          DTS:DTSID="{D7BDFD3A-E795-47CA-906E-BF7853FEA6C6}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::CountOfEntitiesStillToProcess] == 0"
          DTS:From="Package\Reset Schedule if all done\Check if all entities have processed"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint_Check if all entities have processed_To_Set Schedule Date to tomorrow"
          DTS:To="Package\Reset Schedule if all done\Set Schedule Date to tomorrow" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Reset Schedule if all done.PrecedenceConstraints[Constraint_Set Schedule Date to tomorrow_To_Set Ready Status]"
          DTS:CreationName=""
          DTS:DTSID="{91E4E000-F0F9-4FC0-81D2-3371D5BFBF9A}"
          DTS:EvalOp="3"
          DTS:Expression="!ISNULL(@[$Package::EntityToSetForDataIsReady]) &amp;&amp; @[$Package::EntityToSetForDataIsReady] != &quot;&quot;"
          DTS:From="Package\Reset Schedule if all done\Set Schedule Date to tomorrow"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint_Set Schedule Date to tomorrow_To_Set Ready Status"
          DTS:To="Package\Reset Schedule if all done\Set Ready Status"
          DTS:Value="2" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint_Are there any entities to Process?_To_Main Flow]"
      DTS:CreationName=""
      DTS:DTSID="{53303DB5-65EB-4AB6-8F7F-886D5FCE6869}"
      DTS:From="Package\Are there any entities to Process?"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint_Are there any entities to Process?_To_Main Flow"
      DTS:To="Package\Main Flow" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint_Cleanup Parallel Execution Control_To_Reset Schedule if all done]"
      DTS:CreationName=""
      DTS:DTSID="{CA55E2EB-DFBB-47B9-B3BA-E4CC6D08F47A}"
      DTS:From="Package\Cleanup Parallel Execution Control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint_Cleanup Parallel Execution Control_To_Reset Schedule if all done"
      DTS:To="Package\Reset Schedule if all done" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint_Main Flow_To_Reset IsProcessing Flag]"
      DTS:CreationName=""
      DTS:DTSID="{B4C56A76-07BC-4D12-BB9F-2095E54FB67E}"
      DTS:From="Package\Main Flow"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint_Main Flow_To_Reset IsProcessing Flag"
      DTS:To="Package\Reset IsProcessing Flag" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint_Reset IsProcessing Flag_To_Cleanup Parallel Execution Control]"
      DTS:CreationName=""
      DTS:DTSID="{4D446EC9-980E-4280-BC6E-5E0E4EEDA0C7}"
      DTS:From="Package\Reset IsProcessing Flag"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint_Reset IsProcessing Flag_To_Cleanup Parallel Execution Control"
      DTS:To="Package\Cleanup Parallel Execution Control" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="239,42"
          Id="Package\Are there any entities to Process?"
          TopLeft="517,5.5" />
        <NodeLayout
          Size="242,42"
          Id="Package\Cleanup Parallel Execution Control"
          TopLeft="515.5,1543.5" />
        <NodeLayout
          Size="221,42"
          Id="Package\Main Flow\Parallel Leg 1\Get Initial Entity To Process 1"
          TopLeft="23.0000000000001,5.5" />
        <NodeLayout
          Size="247,42"
          Id="Package\Main Flow\Parallel Leg 1\Update Parallel Execution Control 1"
          TopLeft="10.0000000000001,107.5" />
        <NodeLayout
          Size="214,42"
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Get next entity To process 1"
          TopLeft="21.0000000000001,619.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Pause 1"
          TopLeft="56.5,5.5" />
        <NodeLayout
          Size="133,42"
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Script Task"
          TopLeft="49,107.5" />
        <NodeLayout
          Size="165,42"
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Set dependency 1"
          TopLeft="33,413.5" />
        <NodeLayout
          Size="220,42"
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Set entity processing status 1"
          TopLeft="5.50000000000004,311.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1\Set to complete and Notify"
          TopLeft="12,209.5" />
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1.PrecedenceConstraints[Constraint_Pause 1_To_Script Task]"
          TopLeft="115.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1.PrecedenceConstraints[Constraint_Script Task_To_Set to complete and Notify]"
          TopLeft="115.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1.PrecedenceConstraints[Constraint_Set to complete and Notify_To_Set entity processing status 1]"
          TopLeft="115.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1.PrecedenceConstraints[Constraint_Set entity processing status 1_To_Set dependency 1]"
          TopLeft="115.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="231,510"
          Size="231,554"
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Process Entity 1"
          TopLeft="12.5,5.5" />
        <NodeLayout
          Size="245,42"
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1\Update parallel execution control 1"
          TopLeft="5.50000000000009,721.5" />
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1.PrecedenceConstraints[Constraint_Process Entity 1_To_Get next entity To process 1]"
          TopLeft="128,559.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1.PrecedenceConstraints[Constraint_Get next entity To process 1_To_Update parallel execution control 1]"
          TopLeft="128,661.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="256,818"
          Size="256,862"
          Id="Package\Main Flow\Parallel Leg 1\While more entities to process 1"
          TopLeft="5.50000000000014,209.5" />
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 1.PrecedenceConstraints[Constraint_Get Initial Entity To Process 1_To_Update Parallel Execution Control 1]"
          TopLeft="133.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 1.PrecedenceConstraints[Constraint_Update Parallel Execution Control 1_To_While more entities to process 1]"
          TopLeft="133.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="267,1126"
          Size="267,1170"
          Id="Package\Main Flow\Parallel Leg 1"
          TopLeft="5.50000000000011,5.5" />
        <NodeLayout
          Size="221,42"
          Id="Package\Main Flow\Parallel Leg 2\Get Initial Entity To Process 2"
          TopLeft="23.0000000000001,5.5" />
        <NodeLayout
          Size="247,42"
          Id="Package\Main Flow\Parallel Leg 2\Update Parallel Execution Control 2"
          TopLeft="10.0000000000001,107.5" />
        <NodeLayout
          Size="214,42"
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Get next entity To process 2"
          TopLeft="21.0000000000001,619.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Pause 2"
          TopLeft="56.5,5.5" />
        <NodeLayout
          Size="133,42"
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Script Task"
          TopLeft="49,107.5" />
        <NodeLayout
          Size="165,42"
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Set dependency 2"
          TopLeft="33,413.5" />
        <NodeLayout
          Size="220,42"
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Set entity processing status 2"
          TopLeft="5.50000000000004,311.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2\Set to complete and Notify"
          TopLeft="12,209.5" />
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2.PrecedenceConstraints[Constraint_Pause 2_To_Script Task]"
          TopLeft="115.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2.PrecedenceConstraints[Constraint_Script Task_To_Set to complete and Notify]"
          TopLeft="115.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2.PrecedenceConstraints[Constraint_Set to complete and Notify_To_Set entity processing status 2]"
          TopLeft="115.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2.PrecedenceConstraints[Constraint_Set entity processing status 2_To_Set dependency 2]"
          TopLeft="115.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="231,510"
          Size="231,554"
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Process Entity 2"
          TopLeft="12.5,5.5" />
        <NodeLayout
          Size="245,42"
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2\Update parallel execution control 2"
          TopLeft="5.50000000000009,721.5" />
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2.PrecedenceConstraints[Constraint_Process Entity 2_To_Get next entity To process 2]"
          TopLeft="128,559.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2.PrecedenceConstraints[Constraint_Get next entity To process 2_To_Update parallel execution control 2]"
          TopLeft="128,661.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="256,818"
          Size="256,862"
          Id="Package\Main Flow\Parallel Leg 2\While more entities to process 2"
          TopLeft="5.50000000000014,209.5" />
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 2.PrecedenceConstraints[Constraint_Get Initial Entity To Process 2_To_Update Parallel Execution Control 2]"
          TopLeft="133.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 2.PrecedenceConstraints[Constraint_Update Parallel Execution Control 2_To_While more entities to process 2]"
          TopLeft="133.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="267,1126"
          Size="267,1170"
          Id="Package\Main Flow\Parallel Leg 2"
          TopLeft="333.5,5.49999999999977" />
        <NodeLayout
          Size="221,42"
          Id="Package\Main Flow\Parallel Leg 3\Get Initial Entity To Process 3"
          TopLeft="23.0000000000001,5.5" />
        <NodeLayout
          Size="247,42"
          Id="Package\Main Flow\Parallel Leg 3\Update Parallel Execution Control 3"
          TopLeft="10.0000000000001,107.5" />
        <NodeLayout
          Size="214,42"
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Get next entity To process 3"
          TopLeft="21.0000000000001,619.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Pause 3"
          TopLeft="56.5,5.5" />
        <NodeLayout
          Size="133,42"
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Script Task"
          TopLeft="49,107.5" />
        <NodeLayout
          Size="165,42"
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Set dependency 3"
          TopLeft="33,413.5" />
        <NodeLayout
          Size="220,42"
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Set entity processing status 3"
          TopLeft="5.50000000000004,311.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3\Set to complete and Notify"
          TopLeft="12,209.5" />
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3.PrecedenceConstraints[Constraint_Pause 3_To_Script Task]"
          TopLeft="115.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3.PrecedenceConstraints[Constraint_Script Task_To_Set to complete and Notify]"
          TopLeft="115.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3.PrecedenceConstraints[Constraint_Set to complete and Notify_To_Set entity processing status 3]"
          TopLeft="115.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3.PrecedenceConstraints[Constraint_Set entity processing status 3_To_Set dependency 3]"
          TopLeft="115.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="231,510"
          Size="231,554"
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Process Entity 3"
          TopLeft="12.5,5.5" />
        <NodeLayout
          Size="245,42"
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3\Update parallel execution control 3"
          TopLeft="5.50000000000009,721.5" />
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3.PrecedenceConstraints[Constraint_Process Entity 3_To_Get next entity To process 3]"
          TopLeft="128,559.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3.PrecedenceConstraints[Constraint_Get next entity To process 3_To_Update parallel execution control 3]"
          TopLeft="128,661.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="256,818"
          Size="256,862"
          Id="Package\Main Flow\Parallel Leg 3\While more entities to process 3"
          TopLeft="5.50000000000014,209.5" />
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 3.PrecedenceConstraints[Constraint_Get Initial Entity To Process 3_To_Update Parallel Execution Control 3]"
          TopLeft="133.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 3.PrecedenceConstraints[Constraint_Update Parallel Execution Control 3_To_While more entities to process 3]"
          TopLeft="133.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="267,1126"
          Size="267,1170"
          Id="Package\Main Flow\Parallel Leg 3"
          TopLeft="661.5,5.49999999999977" />
        <NodeLayout
          Size="221,42"
          Id="Package\Main Flow\Parallel Leg 4\Get Initial Entity To Process 4"
          TopLeft="23.0000000000001,5.5" />
        <NodeLayout
          Size="247,42"
          Id="Package\Main Flow\Parallel Leg 4\Update Parallel Execution Control 4"
          TopLeft="10.0000000000001,107.5" />
        <NodeLayout
          Size="214,42"
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Get next entity To process 4"
          TopLeft="21.0000000000001,619.5" />
        <NodeLayout
          Size="118,42"
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Pause 4"
          TopLeft="56.5,5.5" />
        <NodeLayout
          Size="133,42"
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Script Task"
          TopLeft="49,107.5" />
        <NodeLayout
          Size="165,42"
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Set dependency 4"
          TopLeft="33,413.5" />
        <NodeLayout
          Size="220,42"
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Set entity processing status 4"
          TopLeft="5.50000000000004,311.5" />
        <NodeLayout
          Size="207,42"
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4\Set to complete and Notify"
          TopLeft="12,209.5" />
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4.PrecedenceConstraints[Constraint_Pause 4_To_Script Task]"
          TopLeft="115.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4.PrecedenceConstraints[Constraint_Script Task_To_Set to complete and Notify]"
          TopLeft="115.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4.PrecedenceConstraints[Constraint_Set to complete and Notify_To_Set entity processing status 4]"
          TopLeft="115.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4.PrecedenceConstraints[Constraint_Set entity processing status 4_To_Set dependency 4]"
          TopLeft="115.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="231,510"
          Size="231,554"
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Process Entity 4"
          TopLeft="12.5,5.5" />
        <NodeLayout
          Size="245,42"
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4\Update parallel execution control 4"
          TopLeft="5.50000000000009,721.5" />
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4.PrecedenceConstraints[Constraint_Process Entity 4_To_Get next entity To process 4]"
          TopLeft="128,559.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4.PrecedenceConstraints[Constraint_Get next entity To process 4_To_Update parallel execution control 4]"
          TopLeft="128,661.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="256,818"
          Size="256,862"
          Id="Package\Main Flow\Parallel Leg 4\While more entities to process 4"
          TopLeft="5.50000000000014,209.5" />
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 4.PrecedenceConstraints[Constraint_Get Initial Entity To Process 4_To_Update Parallel Execution Control 4]"
          TopLeft="133.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Main Flow\Parallel Leg 4.PrecedenceConstraints[Constraint_Update Parallel Execution Control 4_To_While more entities to process 4]"
          TopLeft="133.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="267,1126"
          Size="267,1170"
          Id="Package\Main Flow\Parallel Leg 4"
          TopLeft="989.5,5.49999999999977" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1262,1230"
          Size="1262,1274"
          Id="Package\Main Flow"
          TopLeft="5.5,107.5" />
        <NodeLayout
          Size="192,42"
          Id="Package\Reset IsProcessing Flag"
          TopLeft="540.5,1441.5" />
        <NodeLayout
          Size="246,42"
          Id="Package\Reset Schedule if all done\Check if all entities have processed"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="161,42"
          Id="Package\Reset Schedule if all done\Set Ready Status"
          TopLeft="48,209.5" />
        <NodeLayout
          Size="229,42"
          Id="Package\Reset Schedule if all done\Set Schedule Date to tomorrow"
          TopLeft="14,107.5" />
        <EdgeLayout
          Id="Package\Reset Schedule if all done.PrecedenceConstraints[Constraint_Check if all entities have processed_To_Set Schedule Date to tomorrow]"
          TopLeft="128.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Reset Schedule if all done.PrecedenceConstraints[Constraint_Set Schedule Date to tomorrow_To_Set Ready Status]"
          TopLeft="128.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-33.9655859375,18.25,67.931171875,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="257,306"
          Size="257,350"
          Id="Package\Reset Schedule if all done"
          TopLeft="508,1645.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint_Are there any entities to Process?_To_Main Flow]"
          TopLeft="636.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint_Main Flow_To_Reset IsProcessing Flag]"
          TopLeft="636.5,1381.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint_Reset IsProcessing Flag_To_Cleanup Parallel Execution Control]"
          TopLeft="636.5,1483.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint_Cleanup Parallel Execution Control_To_Reset Schedule if all done]"
          TopLeft="636.5,1585.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="DON'T CHANGE THIS SSIS PACKAGE MANUALLY. CHANGE THE BIML FILE INSTEAD"
          ParentId="Package"
          Size="400,98"
          Id="1eb47992-faba-4ae3-9bad-de992f654c89"
          TopLeft="825.5,1771.5">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="20"
              Color="#FF000000"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>